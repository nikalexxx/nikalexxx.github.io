{"version":3,"sources":["services/syntaxHighlighter/index.ts","utils/logger.js","utils/bem.js","utils/style.js","utils/symbols.js","utils/diff.js","utils/element.js","utils/css.js","utils/component.js","utils/router.js","utils/custom.js","utils/consoleStyle.js","utils/index.js","components/Breadcrumbs/Breadcrumbs.js","components/Page404/Page404.ts","data/blog/index.js","services/book/book.js","components/Post/Post.js","blocks/Button/Button.js","blocks/Checkbox/Checkbox.js","blocks/Select/Select.js","blocks/index.js","components/Blog/Blog.js","components/Physics/Physics.js","components/StandardModel/StandardModel.js","components/Projects/Projects.js","components/Colors/Colors.js","components/Unicode/Unicode.js","components/Design/Design.js","icons/Ban.js","icons/Bars.js","icons/Sun.js","icons/Moon.js","icons/Play.js","icons/PencilAlt.js","icons/Pause.js","icons/StepForward.js","icons/index.js","components/GameOfLife/GameOfLife.js","components/About/About.js","components/routes.ts","components/App/App.js","components/index.js","index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/bundle-loader.js","node_modules/parcel-plugin-wasm.rs/wasm-loader.js"],"names":["_log","condition","f","console","log","loggerSymbol","Symbol","logAllLevels","window","setLogger","settings","getCondition","levels","current","level","createLogProxy","Proxy","get","target","block","blockName","String","element","modifiers","mixin","cssStack","elementName","mod","push","value","join","props","cssProps","prop","name","replace","x","toLowerCase","elementSymbol","componentSymbol","subComponentSymbol","diffObject","t","delete","primitive","array","raw","D","meta","new","isPrimitive","Object","diff","A","B","toString","Array","isArray","lA","length","lB","max","min","result","i","indexDiff","keys","key","keyDiff","symbols","namespaceKeys","namespaces","getFlatNode","node","elem","getNode","expand","expandSub","map","e","checkSubComponents","subComponents","existSubComponents","updateCallbacks","newSubComponents","path","newProps","getProps","oldProps","changeProps","newElement","strToArray","strings","list","DOM","elementObject","document","createTextNode","namespace","tagName","children","eventListeners","createElementNS","startsWith","setAttribute","eventName","listener","addEventListener","append","values","dom","parent","ref","patchDOM","upd","parentNode","remove","undefined","nodeType","nodeValue","replaceWith","newDom","removeAttribute","removeEventListener","deleteListeners","from","childNodes","updatedChildKeys","child","_key","removeChild","newChildren","example","E","div","class","id","style","span","p","elementStructure","T","Number","Function","data","diffStructure","diffFunctionStructure","params","diffElements","_forceUpdate","_update","diffProps","diffEventListeners","diffChildren","diffItems","attributes","attrs","getChildren","hasAttribute","getAttribute","getElementFromDOM","domElement","namespaceURI","getElement","tag","create","toUpperCase","slice","error","Error","nodes","filter","dublicatedKeys","Set","index","add","localSubKey","subKey","newKey","size","stableElement","items","apply","thisArg","argArray","S","M","getDirPath","fileUrl","URL","pathname","split","sourceUrl","relativePath","type","includes","pathRelative","test","fullPath","Promise","resolve","link","rel","href","head","querySelector","less","script","src","update","setTimeout","Component","set","state","arg","newObject","assign","attr","logAdd","color","backgroundColor","logRemove","getElem","component","fragment","createDocumentFragment","isTypeChanged","nodeName","componentConstructor","componentName","match","handlerErrors","makeComponent","initialProps","componentNameSymbol","propsStore","handlerIndex","handlers","count","indexes","bump","changedStateFields","changeState","stateClass","setState","newState","callback","newStateObject","change","rerender","init","initState","startState","onChange","names","didMount","firstAppend","elements","mo","MutationObserver","mutations","observer","closest","first","innerHTML","dispatchEvent","CustomEvent","detail","disconnect","observe","childList","subtree","render","hooks","onDidMount","event","getSubComponents","newNode","componentData","diffElement","setComponentData","componentFunction","historyUpdate","Page404Symbol","pushState","title","url","history","replaceState","getRouterState","routes","location","search","stack","URLSearchParams","param","resultParams","resultPath","pathStack","equal","RouteLink","a","onClick","preventDefault","Switch","getCustom","CustomElement","HTMLElement","attachShadow","mode","slot","customName","customElements","define","Custom","css","text","consoleStyle","textList","args","styles","s","v","local","mix","background","_func","_var","_const","_op","func","_b","_i","_pre","_h","l","text1","styles1","Breadcrumbs","b","last","creationTime","tags","parseNewLines","newLine","brs","tail","br","indexOf","subbrs","j","BadExternalComponent","h3","details","summary","markerSymbol","markerStart","markerEnd","markerLine","markerBlock","getMarker","hasOwnProperty","start","end","markerTypes","item","reduce","o","createHtmlBook","stringElements","scopes","stringElem","resultElem","isMarker","scopeName","lastScopeIndex","currentElem","builder","pop","currentValues","every","scope","createBook","to","types","html","V","book","sub","sup","code","pre","h","n","ul","li","img","alt","external","markdown","repeat","browserConsole","Post","blog","appVersion","fetch","then","blob","default","catch","Page404","template","iframe","iframeElem","getElementById","height","contentWindow","body","clientHeight","h2","em","Date","toLocaleString","year","month","day","timezone","hour","minute","second","Button","c","disabled","button","Checkbox","label","input","_props","Select","heap","groups","getPreparedValues","option","group","select","options","optgroup","selected","Blog","sort","keyA","keyB","getMs","Physics","padding","StandardModel","particles","symbol","charge","spin","mass","interaction","modifier","category","renderTile","view","firstChild","dataset","prev","strong","fermions","bosons","anti","normal","vector","scalar","leptons","quarks","part","k","Projects","Colors","currentListener","colors","theme","getComputedStyle","documentElement","getPropertyValue","trim","rgb","hex","parseInt","contrast","Math","border","getContrastCondition","classList","contains","colorNode","Unicode","limit","getUnicodeList","table","fromCharCode","startI","endI","active","Design","fontSize","fontWeight","BanIcon","svg","focusable","role","xmlns","viewBox","fill","d","BarsIcon","SunIcon","MoonIcon","PlayIcon","PencilAltIcon","PauseIcon","StepForwardIcon","Icon","Ban","Bars","Sun","Moon","Play","Pause","StepForward","PencilAlt","Game","gameTimeout","range","patternGroups","spaceship","puffer","gun","oscillator","methuselah","patterns","swan","loafer","lobster","blinker","beluchenko","cache","getDataFromRLE","RLEString","maxI","rows","row","parts","endsWith","linesCount","width","canvas","img_data","ctx","fieldState","fieldStateNext","H","W","paintControl","paint","onmousedown","onmouseup","onmouseout","onmousemove","startDrawing","isDrawing","stop","pause","context","beginPath","moveTo","clientX","clientY","y","stopDrawing","draw","xd","yd","lineTo","stroke","strokeStyle","lineWidth","getBoundingClientRect","getImageData","life","torsum","i_top_W","i_down_W","i_W","j_l","j_r","set_life","getMiddle","startX","startY","clear","putImageData","one_step","step","rule","sum","Boolean","old","prevState","clearTimeout","onRuleChange","prevStop","getRuleCaption","custom","pattern","startData","getContext","alpha","patternKey","checked","textarea","bind","about","Page","Menu","renderLink","clientWidth","toggle","Header","setTheme","localStorage","setItem","toogleTheme","savedTheme","getItem","header","h1","textAlign","dark","light","nav","main","footer","App","bundleURL","getBundleURLCached","getBundleURL","err","matches","getBaseURL","exports","require","loadBundlesLazy","bundles","LazyPromise","reject","loadBundles","all","loadBundle","bundleLoaders","registerBundleLoader","loader","module","load","register","bundle","substring","lastIndexOf","bundleLoader","resolved","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"nikalexxx.github.io.84a7e6a5.js","sourceRoot":"..","sourcesContent":["// import './theme.css';\n\ninterface RuleCaptureConfig<T> {\n    name: string;\n    patterns: T[];\n}\n\ninterface RuleCapturesConfig<T> {\n    [name: string]: RuleCaptureConfig<T>;\n    [index: number]: RuleCaptureConfig<T>;\n}\n\n/* #region  raw rule config types */\n\ntype LevelConfig = {\n    patterns?: RuleConfig[];\n    repository?: RepositoryConfig;\n};\n\ntype RepositoryConfig = {\n    [name: string]: RuleConfig | LevelConfig;\n};\n\ntype RuleConfigType<T> = {\n    comment?: string;\n    disabled?: boolean;\n} & T;\n\ntype RuleConfig = RuleConfigType<\n    RuleIncludeConfig | RuleMathConfig | RuleBeginConfig\n>;\n\ntype RuleIncludeConfig = {\n    include: string;\n};\n\ntype RuleMathConfig = {\n    match: string;\n    name?: string;\n    captures?: RuleCapturesConfig<RuleConfig>;\n};\n\ntype RuleBeginConfigType<T> = {\n    begin: string;\n    name?: string;\n    beginCaptures?: RuleCapturesConfig<RuleConfig>;\n    captures?: RuleCapturesConfig<RuleConfig>;\n} & T;\n\ntype RuleBeginConfig = {\n    begin: string;\n    name?: string;\n    beginCaptures?: RuleCapturesConfig<RuleConfig>;\n    captures?: RuleCapturesConfig<RuleConfig>;\n} & (RuleEndConfig | RuleWhileConfig);\n\ntype RuleEndConfig = {\n    end: string;\n    contentName?: string;\n    patterns?: RuleConfig[];\n    endCaptures?: RuleCapturesConfig<RuleConfig>;\n};\n\ntype RuleWhileConfig = {\n    while: string;\n    whileCaptures?: RuleCapturesConfig<RuleConfig>;\n};\n\n/* #endregion */\n\nenum RuleType {\n    INCLUDE,\n    BEGIN_END,\n    BEGIN_WHILE,\n    MATCH,\n}\n\ntype RuleGenType<T> = {\n    comment?: string;\n    disabled?: boolean;\n    type: RuleType;\n} & T;\n\ntype Rule = RuleGenType<RuleIncludeFields | RuleMathFields | RuleBeginFields>;\n\n/**\n * @from_type RuleIncludeConfig\n */\ntype RuleIncludeFields = {\n    include: string;\n};\n\n/**\n * @from_type RuleMathConfig\n */\ntype RuleMathFields = {\n    match: RegExp;\n    name?: string;\n    captures?: RuleCapturesConfig<Rule>;\n};\n\ntype RuleBeginFieldsType<T> = {\n    begin: RegExp;\n    name?: string;\n    beginCaptures?: RuleCapturesConfig<Rule>;\n    captures?: RuleCapturesConfig<Rule>;\n} & T;\n\n/**\n * @from_type RuleBeginConfig\n */\ntype RuleBeginFields = {\n    begin: RegExp;\n    name?: string;\n    beginCaptures?: RuleCapturesConfig<Rule>;\n    captures?: RuleCapturesConfig<Rule>;\n} & (RuleEndFields | RuleWhileFields);\n\ntype RuleEndFields = {\n    end: RegExp;\n    contentName?: string;\n    patterns?: Rule[];\n    endCaptures?: RuleCapturesConfig<Rule>;\n};\n\n/**\n * @from_type RuleWhileConfig\n */\ntype RuleWhileFields = {\n    while: RegExp;\n    whileCaptures?: RuleCapturesConfig<Rule>;\n};\n\nconst parentSymbol = Symbol(\"parent\");\nconst patternsSymbol = Symbol(\"patterns\");\n\nconst languageName = \"less\";\nconst path = `/data/syntaxes/${languageName}/language.gen.json`;\n\nclass RuleTypeError extends Error {\n    constructor(type?: \"begin\") {\n        const message = type\n            ? `If there is 'begin' field, must to be field 'end' or while`\n            : `Rule must to be include field 'include' or 'match' or 'begin'`;\n        super(message);\n    }\n}\n\ntype RuleTypeConfigType<T> = RuleConfigType<\n    T extends RuleType.INCLUDE\n        ? RuleIncludeConfig\n        : T extends RuleType.MATCH\n        ? RuleMathConfig\n        : RuleBeginConfigType<\n              T extends RuleType.BEGIN_END ? RuleEndConfig : RuleWhileConfig\n          >\n>;\n\ntype RuleTypeRuleGenType<T> = RuleGenType<\n    T extends RuleType.INCLUDE\n        ? RuleIncludeFields\n        : T extends RuleType.MATCH\n        ? RuleMathFields\n        : RuleBeginFieldsType<\n              T extends RuleType.BEGIN_END ? RuleEndFields : RuleWhileFields\n          >\n>;\n\nfunction getRuleType(rule: RuleConfig) {\n    // console.log({rule});\n    if (\"include\" in rule) {\n        return RuleType.INCLUDE;\n    } else if (\"match\" in rule) {\n        return RuleType.MATCH;\n    } else if (\"begin\" in rule) {\n        if (\"end\" in rule) {\n            return RuleType.BEGIN_END;\n        } else if (\"while\" in rule) {\n            return RuleType.BEGIN_WHILE;\n        } else {\n            throw new RuleTypeError(\"begin\");\n        }\n    } else {\n        throw new RuleTypeError();\n    }\n}\n\ntype Label = string; // имя лейбла, определяется грамматикой\ntype TokenGroup = number; // группа для несвязанных частей текста, 0 — без группы\ntype Token = [Label, RichText[], TokenGroup];\n\n// неразмеченный текст либо токен\ntype RichText = string | Token;\n\ntype RichLines = RichText[][]; // строки из несвязанных кусков\n\n/*\n    ruleList: Rule[];\nпревращается:\n['line', [\n    '    ',\n    ['key', 'ruleList', 0],\n    ': ',\n    ['typeName', 'Rule', 0],\n    '[];'\n], 0]\nпример, как это может выглядеть в html:\n<pre>\n    <span class=\"js.line\">\n        <span>    </span>\n        <span class=\"js.key\">ruleList</span>\n        <span>: </span>\n        <span class=\"js.typeName\">Rule</span>\n        <span>[];</span>\n    </span>\n</pre>\n*/\n\ninterface CheckLineProps {\n    richLine: RichText[];\n    matchRule: RuleTypeRuleGenType<RuleType.MATCH>;\n}\n\nfunction checkLine({\n    richLine,\n    matchRule,\n}: CheckLineProps): { richLine: RichText[]; isRaw: boolean } {\n    const { match, name, captures } = matchRule;\n\n    let isRaw = false;\n    const result: RichText[] = [];\n\n    for (const text of richLine) {\n        if (typeof text === \"string\") {\n            // const groups = text.match(match);\n\n            // if (groups === null) {\n            //     isRaw = true;\n            // }\n            const groups: Array<[string, number]> = [];\n            const resultText: RichText[] = [];\n            let matches: RegExpExecArray;\n            let i = 0;\n            while ((matches = match.exec(text)) !== null && i < 5) {\n                // debugger;\n                // console.log(`Found ${matches[0]}. Next starts at ${match.lastIndex}.`);\n                console.log(matches, JSON.stringify(match, null, 2));\n                groups.push([matches[0], matches.index]);\n                i++;\n                // expected output: \"Found foo. Next starts at 9.\"\n                // expected output: \"Found foo. Next starts at 19.\"\n            }\n            // console.log({groups});\n            if (groups.length > 0) {\n                let startIndex = 0;\n                for (const group of groups) {\n                    const [groupText, index] = group;\n                    if (index !== startIndex) {\n                        result.push(text.slice(startIndex, index));\n                    }\n                    result.push([name ?? \"\", [groupText], 0]);\n                    startIndex = index + groupText.length;\n                }\n                if (startIndex < text.length) {\n                    result.push(text.slice(startIndex, text.length));\n                }\n            } else {\n                result.push(text);\n            }\n        } else {\n            result.push(text);\n        }\n    }\n\n    return {\n        richLine: result,\n        isRaw: true,\n    };\n}\n\ninterface CheckRuleProps {\n    richLines: RichLines;\n    rule: Rule;\n    repositoryRules: GlobalRepositoryRules;\n}\n\nfunction checkRule({\n    richLines,\n    rule,\n    repositoryRules,\n}: CheckRuleProps): { richLines: RichLines; endLineIndex: number } {\n    if (rule.disabled) {\n        // отключенные правила\n        return {\n            richLines,\n            endLineIndex: 0,\n        };\n    }\n\n    const type = rule.type;\n\n    // console.log({rule});\n\n    if (type === RuleType.INCLUDE) {\n        const includeRule = rule as RuleTypeRuleGenType<RuleType.INCLUDE>;\n        const path = includeRule.include;\n\n        // console.log({path});\n\n        if (path[0] === \"#\") {\n            const name = path.slice(1);\n            const rules = repositoryRules.get(name);\n            const { richLines: lines, endLineIndex } = checkRuleList({\n                lines: richLines,\n                ruleList: rules,\n                repositoryRules,\n            });\n\n            return {\n                richLines: lines,\n                endLineIndex,\n            };\n        } else if (path[0] === \"$\") {\n            const name = path.slice(1);\n            if (name === \"self\") {\n                const rules = repositoryRules.get(patternsSymbol);\n                const { richLines: lines, endLineIndex } = checkRuleList({\n                    lines: richLines,\n                    ruleList: rules,\n                    repositoryRules,\n                });\n\n                return {\n                    richLines: lines,\n                    endLineIndex,\n                };\n            } else if (name === \"base\") {\n                // TODO: достать base\n            }\n        }\n    } else if (type === RuleType.MATCH) {\n        const matchRule = rule as RuleTypeRuleGenType<RuleType.MATCH>;\n        const { match, name, captures } = matchRule;\n        const richLine = richLines[0];\n        const {\n            richLine: line,\n            isRaw, // ещё есть неразобранные куски\n        } = checkLine({\n            richLine,\n            matchRule,\n        });\n        richLines[0] = line;\n        return {\n            richLines,\n            endLineIndex: isRaw ? 0 : 1,\n        };\n    }\n\n    return {\n        richLines,\n        endLineIndex: 0,\n    };\n}\n\ninterface CheckRuleListProps {\n    lines: RichLines;\n    ruleList: Rule[];\n    repositoryRules: GlobalRepositoryRules;\n}\n\nfunction checkRuleList({\n    lines,\n    ruleList,\n    repositoryRules,\n}: CheckRuleListProps): { richLines: RichLines; endLineIndex: number } {\n    // последняя строка с полностью разобранным текстом\n    let endLineIndex = 0;\n\n    let currentRichLines: RichLines = lines;\n\n    // console.log({ruleList});\n\n    for (const rule of ruleList) {\n        const { richLines, endLineIndex: endIndex } = checkRule({\n            richLines: currentRichLines,\n            rule,\n            repositoryRules,\n        });\n\n        // console.log('rules', {richLines, endIndex});\n\n        // обновляем разобранный текст, рассмотреть мутабельный объект\n        currentRichLines = richLines;\n\n        if (endIndex > 0) {\n            // смещение по begin/end(while), либо полностью заполнена строка с match\n            break;\n        }\n    }\n    return {\n        richLines: currentRichLines,\n        endLineIndex,\n    };\n}\n\ninterface CheckSyntaxProps {\n    lines: string[]; // строки до конца текста\n    lineIndex: number;\n    charIndex: number;\n    repositoryRules: GlobalRepositoryRules;\n}\n\ninterface ParserProps {\n    text: string;\n    syntaxConfig: LevelConfig;\n    repositoryRules: GlobalRepositoryRules;\n}\n\nconst parser = ({ text, repositoryRules }: ParserProps): RichLines => {\n    // разбиваем текст на строки\n    const lines = text.split(\"\\n\");\n\n    // текущая строка в исходном тексте\n    let lineIndex = 0;\n\n    // текущий символ\n    let charIndex = 0;\n\n    // разобранный текст\n    const resultRichLines: RichLines = [];\n\n    // текст, подлежащий разбору\n    let currentRichLines: RichLines = lines.map((s) => [s]);\n\n    // let currentLineIndex\n\n    while (lineIndex < lines.length) {\n        // const line = lines[lineIndex];\n\n        // проверка всех правил\n        const {\n            richLines, // частично разобранный текст\n            endLineIndex, // последняя строка в разобранной части текста, после идёт сырой; если в строке остались неразобранные части, равен 0\n        } = checkRuleList({\n            lines: lines.slice(lineIndex).map((s) => [s]),\n            repositoryRules,\n            ruleList: repositoryRules.get(patternsSymbol),\n        });\n        console.log({ richLines, endLineIndex });\n\n        // добавляем разобранную часть к остальным\n        resultRichLines.push(\n            ...richLines.slice(0, endLineIndex > 0 ? endLineIndex : 1)\n        );\n\n        // последняя разобранная строка в общем тексте\n        const endIndex = lineIndex + endLineIndex;\n\n        // двигаемся дальше по тексту\n        lineIndex =\n            endIndex > lineIndex\n                ? endIndex // продвинулись за счет правил begin/end(while, если не было пустот)\n                : lineIndex + 1; // в текущей строке остался неразобранный текст, но правила кончились\n        // charIndex = endCharIndex;\n    }\n    console.log({ resultRichLines });\n    return resultRichLines;\n};\n\ntype GlobalRepositoryConfig = Map<string | Symbol, RuleConfig[]>;\n\nfunction addRules(\n    globalRepository: GlobalRepositoryConfig,\n    key: string | Symbol,\n    Rules: RuleConfig[]\n): void {\n    if (globalRepository.has(key)) {\n        throw new Error(`Такое правило уже есть: ${key}`);\n    } else {\n        globalRepository.set(key, Rules);\n    }\n}\n\nfunction isRepositoryConfig(config: RuleConfig | LevelConfig): boolean {\n    if (\"repository\" in config) {\n        return true;\n    }\n    if (\"patterns\" in config && Object.keys(config).length === 1) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * преобразуем вложенные репозитории в линейную структуру\n * @param config уровень конфига\n * @param globalRepository мутабельный объект, в него записываются правила\n * @param name имя для группы правил\n */\nconst generateGlobalRepository = (\n    config: LevelConfig,\n    globalRepository: GlobalRepositoryConfig,\n    name: string | Symbol\n) => {\n    if (\"repository\" in config) {\n        const repository = config.repository;\n        for (const key of Object.keys(repository)) {\n            const subTree = repository[key];\n            subTree[parentSymbol] = repository;\n\n            if (isRepositoryConfig(subTree)) {\n                // именованный репозиторий\n                generateGlobalRepository(\n                    subTree as LevelConfig,\n                    globalRepository,\n                    key\n                );\n            } else {\n                // именованное правило\n                addRules(globalRepository, key, [subTree as RuleConfig]);\n            }\n            // удаляем поддерево, все данные из него мы перенесли\n            delete repository[key];\n        }\n    }\n    if (\"patterns\" in config) {\n        // именованная группа правил\n        addRules(globalRepository, name, config.patterns);\n    }\n};\n\nfunction prepareRegex(s: string): string {\n    const list = s.split(\"\\n\");\n    if (s.indexOf(\"\\\\#\") !== -1) {\n        console.log(s);\n        // есть комментарии, убираем их\n        const result = list\n            .map((e) => e.trim())\n            .map((row) => {\n                const startCommentIndex = row.search(/(?<!\\\\)#/);\n                console.log(startCommentIndex);\n                return (startCommentIndex === -1\n                    ? row\n                    : row.slice(0, startCommentIndex)\n                ).trim();\n            })\n            .join(\"\");\n        console.log(result);\n        return result;\n    } else {\n        return list.join(\"\");\n    }\n}\n\nfunction getRegex(s: string): RegExp {\n    try {\n        const regexString = prepareRegex(s)\n            .replace(/\\[\\:alnum\\:\\]/g, \"[\\\\d\\\\w]\")\n            .replace(/\\[\\:alpha\\:\\]/g, \"[\\\\w]\")\n            .replace(/\\(\\?x\\)/, \"\");\n        // console.log({s, regexString});\n        return new RegExp(regexString, \"g\");\n    } catch (e) {\n        console.error(e);\n        console.log(s);\n        // TODO: временная мера, пока нет парсера ruby regex\n        return /EMPTY/;\n        throw new Error(`Regexp doesnt to be created from string '${s}'`);\n    }\n}\n\ntype GlobalRepositoryRules = Map<string | Symbol, Rule[]>;\n\n// отмечать\ntype RulesDependenciesMap = Map<string, string>;\n\nfunction setMeta(rule: Rule, config: RuleConfig) {\n    if (\"comment\" in config) {\n        rule.comment = config.comment;\n    }\n    if (\"disabled\" in config) {\n        rule.disabled = config.disabled;\n    }\n}\n\ninterface SetCapturesProps {\n    rule: RuleGenType<RuleMathFields | RuleBeginFields>;\n    capturesName: string;\n    captures: RuleCapturesConfig<RuleConfig>;\n    key: string;\n    globalRepository: GlobalRepositoryConfig;\n}\n\nfunction setCaptures({\n    rule,\n    captures,\n    capturesName,\n    key,\n    globalRepository,\n}: SetCapturesProps): void {\n    // mutable rule\n    rule[capturesName] = Object.keys(captures).reduce((res, groupKey) => {\n        res[groupKey] = {};\n        return res;\n    }, {});\n    for (const groupKey of Object.keys(captures)) {\n        const groupConfig = captures[groupKey];\n        const groupRule = rule[capturesName][groupKey];\n        const name = groupConfig.name;\n        const patterns = groupConfig.patterns;\n        if (name) {\n            groupRule.name = name;\n        }\n        if (patterns) {\n            groupRule.patterns = patterns.map((pattern, i) => {\n                return createRule({\n                    level: 1,\n                    key: `${key}/:${capturesName}/${groupKey}/${i}`,\n                    ruleConfig: pattern,\n                    globalRepository,\n                });\n            });\n        }\n    }\n}\n\ninterface CreateRuleProps {\n    level: number;\n    key: string;\n    ruleConfig: RuleConfig;\n    rulesDependenciesMap?: RulesDependenciesMap;\n    globalRepository: GlobalRepositoryConfig;\n}\n\nfunction createRule({\n    level = 0,\n    key,\n    ruleConfig,\n    rulesDependenciesMap,\n    globalRepository,\n}: CreateRuleProps): Rule {\n    const type = getRuleType(ruleConfig);\n    return {\n        [RuleType.INCLUDE]: () => {\n            const config = ruleConfig as RuleTypeConfigType<RuleType.INCLUDE>;\n            const path = config.include;\n            if (path[0] === \"#\") {\n                const ruleName = path.slice(1);\n                if (!globalRepository.has(ruleName)) {\n                    throw new Error(\n                        `Rule '${ruleName}' doesn't exist in repository.`\n                    );\n                }\n                if (level === 0) {\n                    // для нулевого уровня вложенности проверяем циклические зависимости\n                    if (rulesDependenciesMap.has(ruleName)) {\n                        const dependence = rulesDependenciesMap.get(ruleName);\n                        if (dependence === key) {\n                            throw new Error(\n                                `There is circular dependence between ${key} and ${ruleName} rules.`\n                            );\n                        }\n                    }\n                    // фиксируем зависимость\n                    rulesDependenciesMap.set(key, ruleName);\n                }\n                const rule = {} as RuleTypeRuleGenType<RuleType.INCLUDE>;\n                rule.type = RuleType.INCLUDE;\n                setMeta(rule, config);\n                rule.include = config.include;\n\n                return rule;\n            } else if (path[0] === \"$\") {\n                const name = path.slice(1);\n                if (![\"self\", \"base\"].includes(name)) {\n                    throw new Error(\n                        `Grammar alias must to be equal $self or $base`\n                    );\n                }\n            } else {\n                // throw new Error(`Include rule must to be start with '#' or '$'`);\n            }\n        },\n        [RuleType.MATCH]: () => {\n            const config = ruleConfig as RuleTypeConfigType<RuleType.MATCH>;\n            const name = config.name;\n            const captures = config.captures;\n            // if (!(name || captures)) {\n            //     throw new Error(`The rule '${key}' doesn't include fields 'name' and/or 'captures'`);\n            // }\n            const rule = {} as RuleTypeRuleGenType<RuleType.MATCH>;\n            rule.type = RuleType.MATCH;\n            setMeta(rule, config);\n            rule.match = getRegex(config.match);\n            if (name) {\n                rule.name = config.name;\n            }\n            if (captures) {\n                setCaptures({\n                    rule,\n                    captures,\n                    capturesName: \"captures\",\n                    key,\n                    globalRepository,\n                });\n            }\n            return rule;\n        },\n        [RuleType.BEGIN_END]: () => {\n            const config = ruleConfig as RuleTypeConfigType<RuleType.BEGIN_END>;\n            const rule = {} as RuleTypeRuleGenType<RuleType.BEGIN_END>;\n            setMeta(rule, config);\n            const {\n                begin,\n                end,\n                name,\n                contentName,\n                patterns,\n                beginCaptures,\n                endCaptures,\n            } = config;\n            rule.begin = getRegex(begin);\n            rule.end = getRegex(end);\n            if (name) {\n                rule.name = name;\n            }\n            if (contentName) {\n                rule.contentName = contentName;\n            }\n            if (patterns) {\n                rule.patterns = patterns.map((pattern, i) => {\n                    return createRule({\n                        level: 1,\n                        key: `${key}/:patterns/${i}`,\n                        ruleConfig: pattern,\n                        globalRepository,\n                    });\n                });\n            }\n            if (beginCaptures) {\n                setCaptures({\n                    rule,\n                    captures: beginCaptures,\n                    capturesName: \"beginCaptures\",\n                    key,\n                    globalRepository,\n                });\n            }\n            if (endCaptures) {\n                setCaptures({\n                    rule,\n                    captures: endCaptures,\n                    capturesName: \"endCaptures\",\n                    key,\n                    globalRepository,\n                });\n            }\n            return rule;\n        },\n        [RuleType.BEGIN_WHILE]: () => {\n            const config = ruleConfig as RuleTypeConfigType<\n                RuleType.BEGIN_WHILE\n            >;\n            const rule = {} as RuleTypeRuleGenType<RuleType.BEGIN_WHILE>;\n            setMeta(rule, config);\n            const {\n                begin,\n                while: whileString,\n                name,\n                beginCaptures,\n                whileCaptures,\n            } = config;\n            rule.begin = getRegex(begin);\n            rule.while = getRegex(whileString);\n            if (name) {\n                rule.name = name;\n            }\n            if (beginCaptures) {\n                setCaptures({\n                    rule,\n                    captures: beginCaptures,\n                    capturesName: \"beginCaptures\",\n                    key,\n                    globalRepository,\n                });\n            }\n            if (whileCaptures) {\n                setCaptures({\n                    rule,\n                    captures: whileCaptures,\n                    capturesName: \"whileCaptures\",\n                    key,\n                    globalRepository,\n                });\n            }\n            return rule;\n        },\n    }[type]();\n}\n\n// превращаем строки в регулярные выражения\nfunction generateRepositoryRules(\n    globalRepository: GlobalRepositoryConfig\n): GlobalRepositoryRules {\n    const repository: GlobalRepositoryRules = new Map();\n    // карта отмеченных правил для избежания циклических ссылок\n    const rulesDependenciesMap: RulesDependenciesMap = new Map();\n    for (const key of globalRepository.keys()) {\n        const rules: Rule[] = [];\n        for (const ruleConfig of globalRepository.get(key)) {\n            const ruleKey = typeof key === \"string\" ? key : \":root\";\n            const rule = createRule({\n                level: 0,\n                key: ruleKey,\n                ruleConfig,\n                rulesDependenciesMap,\n                globalRepository,\n            });\n            if (rule) {\n                rules.push(rule);\n            }\n        }\n        repository.set(key, rules);\n    }\n    return repository;\n}\n\nconst text = `\n.projects {\n    padding: 16px;\n\n    &__list {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n        gap: 16px;\n    }\n\n    &__button {\n        width: 100%;\n        height: 100%;\n        padding: 16px 32px;\n    }\n\n    &__tile {\n        display: grid;\n        grid-template-rows: 2em 1fr;\n        height: 100%;\n    }\n\n    &__glider {\n        display: grid;\n        grid-template: ~\"repeat(3, 1em) / repeat(3, 1em)\";\n        gap: 4px;\n        justify-content: center;\n        margin: 8px 0;\n\n        & > div {\n            border-radius: 30%;\n        }\n    }\n\n    &__fill {\n        background-color: var(--color-black);\n    }\n}\n`;\n\nfetch(path)\n    .then((e) => {\n        console.log(e);\n        return e.blob();\n    })\n    .then((e) => {\n        console.log(e);\n        return e.text();\n    })\n    .then((e) => {\n        return;\n        const syntaxConfig: LevelConfig = JSON.parse(e);\n        console.log(JSON.parse(JSON.stringify(syntaxConfig)));\n        const globalRepository = new Map<string, RuleConfig[]>();\n        generateGlobalRepository(\n            syntaxConfig,\n            globalRepository,\n            patternsSymbol\n        );\n\n        console.log({ globalRepository });\n        console.log({ syntaxConfig });\n        const repositoryRules = generateRepositoryRules(globalRepository);\n        console.log(repositoryRules);\n        // const text = \"const a = 5 + 1;\";\n        const lines = parser({\n            text,\n            syntaxConfig,\n            repositoryRules,\n        });\n        console.log({ lines });\n\n        console.log(\"input:\", text);\n        console.log(\"output:\", lines);\n        console.log(\"output:\", JSON.stringify(lines, null, 2));\n    });\n\n// import { check_regex } from '../../hello-wasm/pkg/hello_wasm_bg';\nimport module from '../../hello-wasm/Cargo.toml';\n// import { check_regex } from \"../../hello-wasm/pkg/hello_wasm_bg.js\";\nconsole.dir(module.check_regex);\nconsole.dir(module.check_regex('a', 'a'));\nconsole.dir(module.check_regex('b', 'a'));\n\n// fetch(\"../../hello-wasm/pkg/hello_wasm_bg.wasm\")\n//     .then((response) => response.arrayBuffer())\n//     .then((bytes) =>\n//         WebAssembly.instantiate(bytes, {\n//             imports: { log: (a) => console.log(a) },\n//         })\n//     )\n//     .then((results) => {\n//         console.dir(results);\n//         console.dir(results.instance.exports.check_regex('a', 'a'));\n//         console.dir(results.instance.exports.check_regex('b', 'a'));\n//         console.dir(results.instance.exports.check_regex);\n//         // Do something with the results!\n//     });\n","const _log = condition => f => {\n    if (condition) {\n        if (typeof f === 'function') {\n            f();\n        } else {\n            console.log(f);\n        }\n    }\n}\nconst loggerSymbol = Symbol('logger');\nexport const logAllLevels = Symbol('all');\nwindow[loggerSymbol] = {};\n\nexport const setLogger = settings => {\n    window[loggerSymbol] = settings;\n};\n\nfunction getCondition(levels) {\n    let current = window[loggerSymbol];\n    for (const level of levels) {\n        if(current && logAllLevels in current) {\n            return true;\n        }\n        if (!(current && level in current)) {\n            return false;\n        }\n        current = current[level];\n    }\n    return true;\n}\n\nfunction createLogProxy(levels) {\n    return new Proxy(f => _log(getCondition(levels))(f), {\n        get: (target, level) => createLogProxy([...levels, level])\n    });\n}\n\nexport const log = createLogProxy([]);\n\n","const block = blockName => {\n    const block = String(blockName);\n    return function(element, modifiers, mixin) {\n        const cssStack = [];\n        const elementName = block + (element ? `__${element}` : '');\n        cssStack.push(elementName);\n        for (const mod in modifiers) {\n            const value = modifiers[mod];\n            if (typeof value === 'boolean') {\n                if (value) {\n                    cssStack.push(`${elementName}_${mod}`);\n                }\n            } else {\n                cssStack.push(`${elementName}_${mod}_${value}`);\n            }\n        }\n        return cssStack.join(' ');\n    };\n}\n\nexport default block;\n","export default function (props = {}) {\n    const cssProps = [];\n    for (const prop in props) {\n        const name = prop.replace(/[A-Z]/g, x => '-' + x.toLowerCase());\n        cssProps.push(`${name}: ${props[prop]};`);\n    }\n    return cssProps.join(' ');\n}\n","export const elementSymbol = Symbol('element');\nexport const componentSymbol = Symbol('component');\nexport const subComponentSymbol = Symbol('subComponent');\n","\nconst diffObject = t => [\n    t.delete, // Symbol('delete') для удаления примитива\n    t.primitive, // новое значение примитива, заменяет предыдущее значение\n    {\n        [t.array]: t`?`(true), // указывает, что значение массив, ключи будут приводится к Number\n        [t.raw]: t`?`(true), // указывает, что объект нужно включать как есть, не разбирая рекурсивно\n        [t(String)]: t`?`(diffObject),\n        [t(Symbol)]: t`?`(diffObject) // для символьных свойств\n    }\n];\n\nconst D = {\n    delete: Symbol('delete'),\n    array: Symbol('array'),\n    raw: Symbol('raw'),\n    meta: Symbol('meta'),\n    new: Symbol('new')\n};\n\nexport const isPrimitive = value => {\n    return value !== new Object(value);\n}\n\nexport const raw = value => {\n    if (isPrimitive(value)) {\n        return value;\n    }\n    // return {\n    //     ...value,\n    //     [D.raw]: true,\n    //     [D.new]: value\n    // }\n    value[D.raw] = true;\n    value[D.new] = value;\n    return value;\n}\n\n\n// TODO: добавить поддержку циклических ссылок\nexport function diff(A, B) {\n    if (A === B) { // равенство по значению(для примитивов), либо по ссылке(для объектов)\n        return {};\n    }\n    if (isPrimitive(A)) {\n        if (isPrimitive(B)) {\n            return B;\n        } else {\n            return raw(B);\n        }\n    } else {\n        if (isPrimitive(B)) {\n            return B;\n        } else {\n            if (typeof A === 'function') { // для функций заменяем всё, возможно стоит добавить другую проверку\n                if (A === B) {\n                    return {};\n                } else if (A.toString() === B.toString()) {\n                    return {};\n                }\n                return raw(B);\n            } else if (Array.isArray(A)) {\n                if (Array.isArray(B)) { // сравнение массивов\n                    const lA = A.length;\n                    const lB = B.length;\n                    const max = lA > lB ? lA : lB;\n                    const min = lA < lB ? lA : lB;\n                    const result = {};\n                    for (let i = 0; i < max; i++) {\n                        if (i < min) { // сравниваем общую часть\n                            const indexDiff = diff(A[i], B[i]); // сравниваем элементы\n                            if (isPrimitive(indexDiff) || indexDiff === D.delete || Object.keys(indexDiff).length > 0 || indexDiff[D.raw]) {\n                                result[String(i)] = indexDiff; // добавляем только отличия\n                            }\n                        } else if (lA < lB) {\n                            result[String(i)] = B[i]; // новые элементы\n                        } else {\n                            result[String(i)] = D.delete; // удаляем лишние\n                        }\n                    }\n                    if (Object.keys(result).length > 0) {\n                        result[D.array] = true;\n                    }\n                    return result;\n                } else { // просто всё затираем\n                    return raw(B);\n                }\n            } else { // обычный объект\n                if (typeof B === 'function' || Array.isArray(B)) { // не обычный объект\n                    return raw(B);\n                } else { // сравнение объектов\n                    const result = {};\n                    for (const key of Object.keys(B)) {\n                        if (!(key in A)) {\n                            result[key] = raw(B[key]); // новые ключи добавляем как есть\n                        }\n                    }\n                    for (const key of Object.keys(A)) {\n                        if (key in B) {\n                            const keyDiff = diff(A[key], B[key]); // сравниваем рекурсивно\n                            if (isPrimitive(keyDiff) || keyDiff === D.delete || Object.keys(keyDiff).length > 0 || keyDiff[D.raw]) {\n                                result[key] = keyDiff; // добавляем только отличия\n                            }\n                        } else {\n                            result[key] = D.delete; // удаляем старые ключи\n                        }\n                    }\n                    return result;\n                }\n            }\n        }\n    }\n}\n\ndiff.symbols = D;\n\n","import {componentSymbol, elementSymbol, subComponentSymbol} from './symbols.js';\nimport {diff, isPrimitive, raw} from './diff.js';\n\nconst namespaceKeys = {\n    'http://www.w3.org/1999/xhtml': 0,\n    'http://www.w3.org/2000/svg': 1,\n    'http://www.w3.org/1998/Math/MathML': 2\n}\n\nconst namespaces = {\n    '0': 'http://www.w3.org/1999/xhtml',\n    '1': 'http://www.w3.org/2000/svg',\n    '2': 'http://www.w3.org/1998/Math/MathML'\n}\n\n\n/**\n * Схлопывает массивы элементов\n * @param {elementStructure} node\n */\nexport function getFlatNode(node) {\n    if (Array.isArray(node)) {\n        const result = [];\n        for (const elem of node) {\n            if (Array.isArray(elem)) {\n                result.push(...getFlatNode(elem));\n            } else {\n                result.push(getFlatNode(elem));\n            }\n        }\n        return result;\n    } else {\n        return node;\n    }\n}\n\n\n/**\n * Раскрывает функции компонентов\n * @param {elementStructure} node\n */\nexport function getNode(node, expand = false, expandSub = false) {\n    if (Array.isArray(node)) {\n        // делаем массив плоским\n        return getFlatNode(node).map(e => getNode(e, expand, expandSub));\n    } else if (typeof node === 'function') {\n        if (subComponentSymbol in node && !expandSub) {\n            // суб-компоненты не раскрываем\n            return node;\n        }\n        if (componentSymbol in node && !expand) {\n            // компоненты не раскрываем, если не указано\n            return node;\n        } else {\n            // вызываемые прокси раскрываем в дерево\n            return getNode(node(), expand, expandSub);\n        }\n    } else {\n        return node;\n    }\n}\n\n\nexport function checkSubComponents({node, subComponents}) {\n    // node - неразобранное дерево\n    // subComponents - существующие субкомпоненты, мутабельный объект\n\n    // индикатор, что есть субкомпоненты для обновления\n    let existSubComponents = false;\n\n    // колбеки для обновления свойств\n    const updateCallbacks = {};\n\n    // новые субкомпоненты\n    const newSubComponents = node.subComponents;\n\n    // удаляем старые компоненты\n    for (const path in subComponents) {\n        if (path in newSubComponents) {\n            continue;\n        } else {\n            delete subComponents[path];\n        }\n    }\n    for (const path in newSubComponents) {\n        if (path in subComponents) {\n            // путь совпадает, компонент уже есть в дереве\n\n            // помечаем функцию-элемент в дереве как клон субкомпонента, этот узел будет пропущен в diffElements\n            newSubComponents[path][subComponentSymbol] = true;\n\n            // берем новые свойства\n            const newProps = newSubComponents[path][componentSymbol].getProps();\n\n            // старые свойства\n            const oldProps = subComponents[path][componentSymbol].getProps();\n\n\n            if (Object.keys(diff(newProps, oldProps).length > 0)) {\n                // если свойства поменялись, добавляем функцию для обновления\n                updateCallbacks[path] = () => subComponents[path][componentSymbol].changeProps(newProps);\n                if (!existSubComponents) {\n                    existSubComponents = true;\n                }\n            }\n        } else {\n            // новый компонент\n            // TODO: позже сделать проверку на перенос хотя бы в пределах соседних узлов\n\n            // сохраняем новый субкомпонент\n            subComponents[path] = newSubComponents[path];\n        }\n    }\n\n    // получаем разобранное дерево с учётом субкомпонентов\n    const newElement = getNode(node, true);\n\n    return {\n        existSubComponents,\n        updateCallbacks,\n        newElement\n    };\n}\n\n\nexport const strToArray = (strings, ...elements) => {\n    const list = [strings[0]];\n    for (let i = 1; i < strings.length; i++) {\n        list.push(elements[i-1], strings[i]);\n    }\n    return list;\n}\n\n\n\nexport const DOM = elementObject => {\n    if (isPrimitive(elementObject)) {\n        return document.createTextNode(elementObject);\n    }\n    if (typeof elementObject === 'function') {\n        if (subComponentSymbol in elementObject) {\n            return DOM(getNode(elementObject, true, true));\n        } else {\n            return DOM(getNode(elementObject, true));\n        }\n    }\n    const {namespace, tagName, props, children, eventListeners} = elementObject;\n    const element = document.createElementNS(namespaces[String(namespace)], tagName);\n    element[elementSymbol] = {};\n    for (const prop in props) {\n        if (prop.startsWith('_')) {\n            element[elementSymbol][prop] = props[prop];\n        } else {\n            element.setAttribute(prop, String(props[prop]));\n        }\n    }\n    for (const eventName of Object.keys(eventListeners)) {\n        const listener = eventListeners[eventName];\n        element.addEventListener(eventName, listener, false);\n    }\n    if (Object.keys(children).length) {\n        element.append(...Object.values(children).map(e => {\n            const dom = DOM(e);\n            if (!isPrimitive(e) && typeof e !== 'function') {\n                e.dom.parent = element;\n            }\n            return dom;\n        }));\n    }\n    elementObject.dom = {ref: element};\n    element[elementSymbol] = elementObject;\n    return element;\n}\n\nexport function patchDOM(dom, diffObject) {\n    const upd = dom.parentNode;\n    if (diffObject === diff.symbols.delete) {\n        if (upd) {\n            delete dom[elementSymbol];\n            dom.remove();\n            return;\n        } else {\n            return undefined;\n        }\n    }\n    if (isPrimitive(diffObject)) {\n\n        if (dom.nodeType === 3) { // текстовый узел\n            if (dom.nodeValue === String(diffObject)) {\n                return undefined; // строки совпали\n            } else {\n                if (upd) {\n                    dom.nodeValue = String(diffObject); // обновляем текст\n                    return;\n                } else {\n                    return document.createTextNode(diffObject);\n                }\n            }\n        } else {\n            if (upd) {\n                dom.replaceWith(document.createTextNode(diffObject));\n                return;\n            } else {\n                return document.createTextNode(diffObject);\n            }\n        }\n    }\n    const {props = {}, children = {}, eventListeners = {}, [diff.symbols.raw]: raw} = diffObject;\n    if (raw) {\n        if (upd) {\n            const newDom = DOM(diffObject);\n            dom.replaceWith(newDom);\n            if (!diffObject[diff.symbols.new].dom) {\n                diffObject[diff.symbols.new].dom = {};\n            }\n            diffObject[diff.symbols.new].dom.ref = newDom;\n\n            return;\n        } else {\n            return DOM(diffObject);\n        }\n    }\n\n    // обновление свойств\n    for (const prop in props) {\n        if (props[prop] === diff.symbols.delete) {\n            if (prop.startsWith('_')) {\n                delete dom[elementSymbol][prop];\n            } else {\n                dom.removeAttribute(prop);\n            }\n        } else {\n            if (prop.startsWith('_')) {\n                dom[elementSymbol][prop] = props[prop];\n            } else {\n                dom.setAttribute(prop, props[prop]);\n            }\n        }\n    }\n\n    // обновление перехватчиков событий\n    for (const eventName of Object.keys(eventListeners)) {\n        const listener = eventListeners[eventName];\n        if (listener === diff.symbols.delete) {\n            dom.removeEventListener(eventName, eventListeners[diff.symbols.meta].deleteListeners[eventName]);\n            delete eventListeners[diff.symbols.meta].deleteListeners[eventName];\n        } else {\n            if (!listener[diff.symbols.raw]) {\n                dom.removeEventListener(eventName, eventListeners[diff.symbols.meta].deleteListeners[eventName]);\n                delete eventListeners[diff.symbols.meta].deleteListeners[eventName];\n            }\n            dom.addEventListener(eventName, listener, false);\n        }\n    }\n\n    // обновление существующих потомков\n    const list = Array.from(dom.childNodes);\n    const updatedChildKeys = {};\n    for (let i = 0; i < list.length; i++) {\n        const child = list[i];\n        const key = (child[elementSymbol] || {})._key || String(i);\n        if (key in children) {\n            if (children[key] === diff.symbols.delete) {\n                dom.removeChild(child);\n            } else {\n                patchDOM(child, children[key]);\n                updatedChildKeys[key] = true;\n            }\n        }\n    }\n\n    // добавление новых потомков\n    const newChildren = [];\n    for (const key in children) {\n        if ((!children[key][diff.symbols.raw] && !isPrimitive(children[key])) || children[key] === diff.symbols.delete) {\n            continue;\n        }\n        if (!(key in updatedChildKeys)) {\n            newChildren.push(DOM(children[key]));\n        }\n    }\n    if (newChildren.length > 0) {\n        dom.append(...newChildren);\n    }\n\n    if (!diffObject[diff.symbols.new].dom) {\n        diffObject[diff.symbols.new].dom = {};\n    }\n    diffObject[diff.symbols.new].dom.ref = dom;\n\n    if (!upd) {\n        return dom;\n    }\n}\n\nconst example = E => E.div.class`example`.id`ex`.style(style)['data-value']`1`(\n    'string',\n    E.span`text`,\n    E.p('str'),\n    E`text v = ${E.span(2)}`,\n    [ // Fragment analog\n        E.div.style`color: red;`,\n        E.div.style`color: red;`('red'),\n        E.div.style`color: red;``red`,\n        E.div.style`color: red;``red ${E.span(1)}`, // red [Function]\n        E.div.style`color: red;`(E`red${E.span(1)}`) // red 1\n    ],\n    ...[1,2,3].map(i => E.i._key(i)(i)),\n    [1,2,3].map(i => E.i._key(i)(i))\n)\n\n\n\nconst elementStructure = T => ({\n    nodeType: T(Number),\n    namespace: T(String),\n    tagName: T(String),\n    props: T`?`({\n        [T(String)]: T(String)\n    }),\n    children: T`?`(Object)(T(elementStructure)),\n    subComponents: {\n        [T(String)]: T(Function)\n    },\n    data: T(String)\n});\n\nconst diffStructure = t => ({\n    nodeType: t`?`(Number), // перезаписывает тип узла\n    namespace: t`?`(String), // новое пространство имён\n    tagName: t`?`(String), // новый тег\n    props: t`?`({\n        [t(String)]: [t(String), t(null)] // переписать свойство, добавить, если нет, если null - удалить\n    }),\n    children: t`?`(Object)(t(diffStructure)), // рекурсивно повторить для потомков, лишние удалить, недостающие добавить, в будущем сопоставлять по ключу\n    data: t`?`(String), // поменять текстовый узел\n    delete: t`?`(true) // удалить элемент\n});\n\nconst diffFunctionStructure = t => t(Function)(({params}) =>\n    t({\n        params: {\n            A: t(elementStructure), // старый элемент\n            B: t(elementStructure) // новый элемент\n        }\n    })(t(diffStructure))\n);\n\n/*\nИспользовать хэши от пропсов и потомков\nв случае тектсовых нод - от значений\nможно вычислить уже на этапе создания элемента из кода\nхэш используем в качестве ключа элемента\nрассмотреть случай коллизий\n*/\nlet i = 0;\nexport function diffElements(A, B) {\n    if (!B) {\n        return diff.symbols.delete;\n    }\n    if (isPrimitive(A)) {\n        if (isPrimitive(B)) {\n            if (A !== B) {\n                return raw(B);\n            } else {\n                return {};\n            }\n        } else {\n            return raw(B);\n        }\n    }\n\n    if (typeof B === 'function') {\n        // B - компонент\n        if (subComponentSymbol in B) {\n            // субкомпоненты обновляются самостоятельно\n            return {};\n        } else if (typeof A === 'function') {\n            // A - компонент\n            if (componentSymbol in A && componentSymbol in B && A[componentSymbol].name === B[componentSymbol].name) {\n                // сравниваем одинаковые компоненты\n                // раскрываем функции в деревья\n                return diffElements(getNode(A, true, true), getNode(B, true, true));\n            } else {\n                // возвращаем новый компонент, он раскроется в patchDOM\n                return raw(B);\n            }\n        } else {\n            // компонент заменил дерево\n            return raw(B);\n        }\n    }\n    if (typeof A === 'function') {\n        // B - дерево, заменило компонент A\n        return raw(B);\n    }\n    if (isPrimitive(B)) {\n        return raw(B);\n    }\n    if (A.nodeType !== B.nodeType) {\n        return raw(B);\n    }\n    if (A.namespace !== B.namespace) {\n        return raw(B);\n    }\n    if (A.tagName !== B.tagName) {\n        return raw(B);\n    }\n    if (B.props._forceUpdate) {\n        return raw(B);\n    }\n    if ('_update' in B.props && !B.props._update) {\n        return {};\n    }\n    const diffProps = diff(A.props, B.props);\n    const diffEventListeners = diff(A.eventListeners, B.eventListeners);\n    for (const eventName of Object.keys(diffEventListeners)) {\n        if (diffEventListeners[eventName] === diff.symbols.delete) {\n            if (!diffEventListeners[diff.symbols.meta]) {\n                diffEventListeners[diff.symbols.meta] = {deleteListeners: {}};\n            }\n            diffEventListeners[diff.symbols.meta].deleteListeners[eventName] = A.eventListeners[eventName];\n        }\n    }\n\n    const diffChildren = {};\n    for (const key of Object.keys(B.children)) {\n        if (!(key in A.children)) {\n            diffChildren[key] = raw(B.children[key]); // новые ключи добавляем как есть\n        }\n    }\n    for (const key of Object.keys(A.children)) {\n        if (key in B.children) {\n            i++;\n            const diffItems = diffElements(A.children[key], B.children[key]); // сравниваем рекурсивно\n            if (isPrimitive(diffItems)\n                || diffItems === diff.symbols.delete\n                || Object.keys(diffItems).length > 0\n                || componentSymbol in diffItems\n            ) {\n                diffChildren[key] = diffItems; // непустые добавляем\n            }\n        } else {\n            diffChildren[key] = diff.symbols.delete; // удаляем старые ключи\n        }\n    }\n\n    const result = {};\n    if (Object.keys(diffProps).length > 0) {\n        result.props = diffProps;\n    }\n    if (Object.keys(diffEventListeners).length > 0) {\n        result.eventListeners = diffEventListeners;\n    }\n    if (Object.keys(diffChildren).length > 0) {\n        result.children = diffChildren;\n    }\n    result[diff.symbols.new] = B;\n\n    return result;\n}\n\nfunction getProps(attributes) {\n    if (!attributes) {\n        return {};\n    }\n    const attrs = Array.from(attributes);\n    const result = {};\n    for (const {name, value} of attrs) {\n        result[name] = value;\n    }\n    return result;\n}\n\nfunction getChildren(childNodes) {\n    if (!childNodes) {\n        return {};\n    }\n    const children = Array.from(childNodes);\n    const result = {};\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        const key = child.hasAttribute && child.hasAttribute('data-key') ? child.getAttribute('data-key') : String(i);\n        result[key] = getElementFromDOM(child);\n    }\n    return result;\n}\n\nfunction getElementFromDOM(domElement) {\n    return {\n        nodeType: domElement.nodeType,\n        namespace: namespaceKeys[domElement.namespaceURI],\n        tagName: domElement.tagName,\n        props: getProps(domElement.attributes),\n        children: getChildren(domElement.childNodes),\n        data: domElement.data\n    }\n}\n\n\nconst getElement = namespace => new Proxy(strToArray, {\n    get(target, tag) {\n        const create = (tagName = 'div', props = {}, children = []) => {\n            const element = {\n                namespace: namespaceKeys[namespace],\n                tagName,\n                props: {},\n                children: {},\n                eventListeners: {},\n                subComponents: {}\n            };\n            for (const prop in props) {\n                if (prop.length > 2 && prop.startsWith('on') && prop[2] === prop[2].toUpperCase()) {\n                    const eventName = prop[2].toLowerCase() + prop.slice(3);\n                    const listener = props[prop];\n                    if (typeof listener !== 'function') {\n                        console.error(new Error(`${eventName} listener is not function`));\n                        continue;\n                    }\n                    element.eventListeners[eventName] = listener;\n                } else if (props[prop]) {\n                    element.props[prop] = (props[prop]);\n                }\n            }\n            const nodes = [];\n            for (let node of children.filter(e => e)) {\n                node = getNode(node, false);\n                if (Array.isArray(node)) {\n                    nodes.push(...node.filter(e => e));\n                } else {\n                    nodes.push(node);\n                }\n            }\n            const dublicatedKeys = new Set();\n            for (let i = 0; i < nodes.length; i++) {\n                const node = nodes[i];\n                const key = node.props && node.props._key && String(node.props._key);\n                const index = String(i);\n                if (key && !(key in element.children)) {\n                    element.children[key] = node;\n                } else {\n                    if (key in element.children) {\n                        dublicatedKeys.add(key);\n                    }\n                    element.children[index] = node; // TODO: рекурсивно выбрать уникальное значение\n                }\n\n                // div.0, span.key1, p.7\n                // TODO: улучшить ключ субкомпонента или ввести ограничение на ключ элемента\n                const localSubKey = `${tagName}.${key || index}`;\n                if (typeof node === 'function') {\n                    // разбор компонентов\n                    if (componentSymbol in node) {\n                        const subKey = `${localSubKey}#${node[componentSymbol].name}`;\n                        element.subComponents[subKey] = node;\n                    }\n                } else if (!isPrimitive(node) && Object.keys(node.subComponents).length > 0) {\n                    // проброс данных о субкомпонентах наверх по дереву\n                    for (const subKey in node.subComponents) {\n                        const newKey = `${localSubKey}>${subKey}`;\n                        element.subComponents[newKey] = node.subComponents[subKey];\n                    }\n                }\n            }\n            if (dublicatedKeys.size > 0) {\n                console.error(new Error(`keys ${[...dublicatedKeys]} have been dublicated`));\n            }\n            return element;\n        }\n        function stableElement(name, props) {\n            return new Proxy((...children) => {\n                if (Array.isArray(children[0]) && 'raw' in children[0]) {\n                    return create(name, props, strToArray(...children));\n                }\n                return create(name, props, children);\n            }, {\n                get(target, prop) {\n                    return function (value, ...items) {\n                        if (prop === '_props') {\n                            return stableElement(name, {...props, ...value});\n                        }\n                        if (Array.isArray(value) && 'raw' in value) {\n                            return stableElement(name, {...props, [prop]: strToArray(value, ...items).join('')});\n                        }\n                        return stableElement(name, {...props, [prop]: value});\n                    }\n                },\n                apply(target, thisArg, argArray) {\n                    if (Array.isArray(argArray[0]) && 'raw' in argArray[0]) {\n                        return create(name, props, strToArray(...argArray));\n                    }\n                    return create(name, props, argArray);\n                }\n            })\n        }\n        return stableElement(tag, {})\n    }\n});\n\nexport const E = getElement('http://www.w3.org/1999/xhtml');\nexport const S = getElement('http://www.w3.org/2000/svg');\nexport const M = getElement('http://www.w3.org/1998/Math/MathML');\n\n\n// // резерв\n// E.$a\n// E._\n// E._a\n// E.A\n\n","import {E, DOM} from './element.js';\nconst getDirPath = fileUrl => (new URL(fileUrl)).pathname.split('/').slice(0, -1).join('/');\nexport default function(sourceUrl, relativePath) {\n    const type = relativePath.split('.').slice(-1)[0];\n    if (!['css', 'less'].includes(type)) {\n        throw new Error(`Import file type is ${type}, but 'css' or 'less' types are available only.`);\n    }\n    const pathRelative = /^\\.\\.?\\//.test(relativePath);\n    const sourcePath = getDirPath(sourceUrl).split('/').slice(1).join('/');\n    const fullPath = sourcePath + (pathRelative ? relativePath.replace(/^\\.\\.?/, '') : '/' + relativePath);\n\n    return new Promise(resolve => {\n        const link = DOM(E.link\n            .rel(`stylesheet${type === 'less' ? '/less' : ''}`)\n            .type('text/css')\n            .href(fullPath)());\n        if (type === 'less') {\n            if (!document.head.querySelector('script[src=\"less.js\"]')) {\n                const less = E.script.src('less.js')();\n                document.head.append(DOM(less));\n            }\n            document.head.append(link);\n            function update() {\n                const style = document.head.querySelector(`style[id$=\"${fullPath.split('.')[0].replace(/\\//g, '-')}\"]`);\n                // console.log(1);\n                if (style) {\n                    window.setTimeout(resolve, 100);\n                } else {\n                    window.setTimeout(update, 10);\n                }\n            }\n            update();\n        } else {\n            document.head.append(link);\n            link.addEventListener('load', () => resolve());\n        }\n    });\n}\n","import {DOM, E, checkSubComponents, diffElements, getFlatNode, getNode, patchDOM} from './element.js';\nimport {componentSymbol, elementSymbol} from './symbols.js';\n\nimport {log} from './logger.js';\nimport style from './style.js';\n\nconst set = state => arg => {\n    let newObject;\n    if (typeof arg === 'object') {\n        newObject = arg;\n    } else if (typeof arg === 'function') {\n        newObject = arg(state);\n    }\n    return Object.assign({}, state, newObject);\n}\n\nfunction getProps(element) {\n    if (element.nodeType === 3) { // textNode\n        return {};\n    }\n    const props = {};\n    for (let i = 0; i < element.attributes.length; i++) {\n        const attr = element.attributes[i];\n        props[attr.name] = attr.value;\n    }\n    return props;\n}\n\nfunction logAdd(element) {\n    console.log('%c + ', style({\n        color: 'green',\n        backgroundColor: '#dfd'\n    }), element);\n}\n\nfunction logRemove(element) {\n    console.log('%c - ', style({\n        color: 'red',\n        backgroundColor: '#fdd'\n    }), element);\n}\n\nfunction getElem(component) {\n    if (Array.isArray(component)) {\n        const fragment = document.createDocumentFragment();\n        fragment.append(...component.map(e => getElem(e)));\n        return fragment;\n    }\n    return (typeof component === 'function') ? component() : component;\n}\n\nfunction isTypeChanged(element, newElement) {\n    if (element && !newElement) {\n        return true;\n    }\n    if (element.nodeType !== newElement.nodeType) {\n        return true;\n    }\n    if (element.nodeName !== newElement.nodeName) {\n        return true;\n    }\n    return false;\n}\n\nfunction componentConstructor(componentName) {\n    if (!componentName.match(/[A-Za-z][A-Za-z0-9-_]*/)) {\n        throw new Error(`Component name shold be match with /[A-Za-z][A-Za-z0-9-_]*/`);\n    }\n\n    const handlerErrors = new Proxy({}, {\n        get(target, name) {\n            if (!(name in target)) {\n                target[name] = {};\n            }\n            return target[name];\n        }\n    });\n\n    return function (makeComponent) {\n        const create = (initialProps = {}, children = []) => {\n            // уникальный идентификатор для созданного элемента\n            const componentNameSymbol = Symbol(componentName);\n\n            // свойства компонента\n            const propsStore = {};\n            propsStore.props = initialProps;\n\n            // состояние компонента\n            let state = {};\n\n            // предыдущее состояние\n            let prevState = {};\n\n            // элемент DOM, который будет возвращён\n            // TODO: инлайн компоненты, вложенные в одном узле, у списка это родитель\n            // структура цепочки компонентов в элементе\n            // [компонент, который возвращает массив] > [аналогично, только вложенный] > возвращает компонент > который возвращает этот элемент\n\n            let element = {};\n\n            // вызванные обработчики\n            let handlerIndex = 0;\n            const handlers = new Proxy({}, {\n                get(target, name) {\n                    if (!(name in target)) {\n                        target[name] = {\n                            count: 0,\n                            indexes: [],\n                        };\n                        target[name].bump = () => {\n                            handlerIndex++;\n                            target[name].count++;\n                            target[name].indexes.push(handlerIndex);\n                        }\n                    }\n                    return target[name];\n                }\n            });\n            // TODO: отслеживать вызовы и гарантировать порядок\n\n            function initState(startState) {\n                if (handlers.initState.count !== 0) {\n                    if (!handlerErrors.initState.count) {\n                        handlerErrors.initState.count = 1;\n                        console.error(new Error('Повторный вызов инициализации состояния'));\n                    }\n                }\n                handlers.initState.bump();\n                state = startState;\n            }\n\n            let changedStateFields = {};\n\n            function setState(newState, callback) {\n                prevState = state;\n                const newStateObject = typeof newState === 'function' ? newState(state) : newState;\n                const change = {};\n                for (const field of Object.keys(newStateObject)) {\n                    change[field] = true;\n                }\n                changedStateFields = change;\n                state = set(state)(newState);\n                rerender();\n                if (callback) {\n                    callback();\n                }\n            }\n\n            const changeState = (...names) => {\n                for (const name of names) {\n                    if (changedStateFields[name]) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            const stateClass = () => state; // перейти на прокси? тогда придумать название для остальных\n            // сразу setState, initState\n            // apply: state().set()\n            // state[_].set() - _ Symbol\n            // state`set`(), state`init`() !!! - хороший вариант\n            // state[_.set]()\n            stateClass.set = setState;\n            stateClass.init = initState;\n            stateClass.onChange = changeState; // позволит писать _update(state.onChange('name', 'age'))\n            // в перспективе что-то вроде _related(['name', 'age'])\n            // идея - писать в метаинформации объектов state данные о своём state - имя, компонент и т.д.\n            // тогда при обновлении мы посмотрим, и если поля из state.set не имеют отношения к полям, от котрых зависит обновление, то элемент не обновляется\n            // более общий вопрос, как отследить зависимость от некоторого значения из состояния?\n\n            // можно связать свойство элемента со значением свойства, если передавать не само значение, а функцию, что передаёт значение. То есть не Person.age(state.age+1) а Person.age(() => state.age+1). До вызова функции мы посмотрим мету у элемента, а при вызове у значения. Но так будет не так удобно писать, поэтому это может сделать препроцессор? нежелательно!!! к тожу же если передавать просто функцию, профит исчезнет. Не пойдёт!\n            // в общем случае задача почти неразрешима\n            // можно проксировать хоть насквозь, но передай в другую функцию и ничего не выйдет\n            // опять же можно немного подхачить и использовать препроцессор для отслеживания явного применения, он должен быть достаточно умным, чтобы отслеживать зависимости применения переменных;\n            // но можно сделать зависимость от ввода или слуйность и препроцессор такое не поймает\n\n            element[componentNameSymbol] = true;\n\n            const didMount = callback => {\n                function onDidMount(event) {\n                    if (event.detail.componentNameSymbol === componentNameSymbol) {\n                        callback();\n                    }\n                }\n\n                handlers.didMount.bump();\n                const didMountListener = window.addEventListener('didMount', onDidMount, false);\n            }\n\n            let firstAppend = true;\n\n            const storage = {};\n            const elements = [];\n\n            const mo = new MutationObserver(function (mutations, observer) {\n                if (element.dom && element.dom.ref.closest('html')) {\n                    // element = false;\n                    // const componentDOMSymbol = Symbol('componentDOMSymbol');\n                    // if(!storage[componentDOMSymbol]) { // первый рендер\n                    //     storage[componentDOMSymbol] = {first: true};\n                    elements[Object.keys(elements).length] = {\n                        first: true,\n                        element: element.innerHTML\n                    };\n                    // }\n                    if (firstAppend) {\n                        window.dispatchEvent(new CustomEvent('didMount', {\n                            detail: {\n                                componentNameSymbol: componentNameSymbol\n                            }\n                        }));\n                        firstAppend = false;\n                        mo.disconnect();\n                    }\n                } else {\n                    firstAppend = true;\n                    mo.disconnect();\n                }\n            });\n            mo.observe(document, {\n                attributes: true,\n                childList: true,\n                subtree: true\n            });\n\n\n            propsStore.props.children = children;\n\n\n            const render = makeComponent({\n                props: () => propsStore.props,\n                state: stateClass,\n                hooks: {\n                    didMount\n                }\n            });\n\n            // другие компоненты первого уровня вложенности, которые встречаются в дереве\n            // их нужно отслеживать, чтобы сохранять их состояние\n            const subComponents = {}; // мутабельный объект\n            const getSubComponents = () => subComponents;\n\n            function rerender() {\n\n                // разбор всех вложенных массивов в один плоский массив\n                const newNode = getFlatNode(render());\n\n                // разбор дерева с учётом суб-компонентов\n                const {\n                    existSubComponents,\n                    updateCallbacks,\n                    newElement\n                } = checkSubComponents({\n                    node: newNode,\n                    subComponents: getSubComponents()\n                });\n                const dom = element.dom;\n                const componentData = element.component;\n                const diffElement = diffElements(element, newElement);\n\n                // новые элементы создаются без привязки к странице\n\n                // обновляем дерево\n                element = newElement;\n                // BUG: не сохраняется новый вид элемента\n\n                // сохраняем данные комопнента\n                element.component = componentData;\n\n                if (dom) { // есть dom\n                    // получить их diff, TODO: учитывая static\n\n                    // сохраняем ссылку на dom\n                    element.dom = dom;\n                    // надо перепривязать к dom всех потомков\n\n                    // меняется dom до субкомпонентов\n                    patchDOM(dom.ref, diffElement);\n\n\n\n                    // при наличии субкомпонентов\n                    if (existSubComponents) {\n                        for (const key in updateCallbacks) {\n                            const update = updateCallbacks[key];\n                            // обновляем дерево компонента, props меняем, state не трогаем\n                            update();\n                        }\n                    }\n                }\n            }\n\n            // первый рендер\n            element = checkSubComponents({\n                node: getFlatNode(render()),\n                subComponents: getSubComponents()\n            }).newElement;\n\n\n\n\n            // отдельная функция разбирает дерево и выделяет субкомпоненты, возвращая колбеки для их обновления\n            // diff для таких комопнентов не покажет изменения\n            // сначала обновить элементы, потом субкомпоненты\n            // в каждом из них та же схема\n            // полное дерево вычисляется при вызове функции DOM / patchDOM\n\n\n            // так как render может возвратить массив, дополнительная проверка на массив\n            if (Array.isArray(element)) {\n                for (const item of element) {\n                    setComponentData(item, {array: true})\n                }\n            } else {\n                setComponentData(element);\n            }\n\n            /* так как компоненты могут быть вложенными,\n            одному элементу могут соответствовать несколько компонентов\n            в поле component помечаем все уровни, добавляя на текущем уровне информацию о компоненте\n            */\n            function setComponentData(element, {array = false} = {}) {\n                if (!element.component) {\n                    element.component = {level: 0};\n                }\n                const level = element.component.level;\n                element.component[String(level)] = {\n                    array,\n                    name: componentName,\n                    props: propsStore.props,\n                    state\n                }\n                element.component.level++;\n            }\n\n            const componentFunction = () => element;\n\n            // такая функция имеет символьное свойство по символу componentSymbol\n            componentFunction[componentSymbol] = {\n                name: componentName,\n                changeProps: newProps => {\n                    propsStore.props = newProps;\n                    rerender();\n                },\n                getProps: () => propsStore.props\n            }\n\n            return componentFunction;\n        }\n\n        function stableElement(props) {\n            return new Proxy((...children) => create({}, children), {\n                get(target, prop) {\n                    return function (value) {\n                        return stableElement({\n                            ...props,\n                            [prop]: value\n                        });\n                    }\n                },\n                apply(target, thisArg, argArray) {\n                    return create(props, argArray);\n                }\n            })\n        }\n        return stableElement({});\n    };\n}\n\nconst Component = new Proxy({}, {\n    get: function (target, componentName) {\n        return componentConstructor(componentName)\n    }\n});\n\nexport default Component;\n","import {\n    Component,\n    E\n} from './index.js';\n\nconst historyUpdate = new CustomEvent('historyUpdate');\n\nexport const Page404Symbol = Symbol('404');\n\nfunction pushState(data, title, url) {\n    history.pushState(data, title, url);\n    window.dispatchEvent(historyUpdate);\n}\n\nfunction replaceState(data, title, url) {\n    history.replaceState(data, title, url);\n    window.dispatchEvent(historyUpdate);\n}\n\nwindow.addEventListener('popstate', () => window.dispatchEvent(historyUpdate));\n\nexport const getRouterState = (routes) => {\n    if (!document.location.search) {\n        return {params: {}, path: '/', routes: routes('')}\n    }\n    const params = new URLSearchParams(document.location.search);\n    const stack = [];\n    for (const [param] of params) {\n        if (param[0] === '/') {\n            stack.push(...param.slice(1).split('/'));\n        }\n    }\n    let resultParams = {};\n    let resultPath = null;\n    for (const path in routes({})) {\n        const pathStack = path.split('/');\n        const params = {};\n        let equal = true;\n        for (let i = 0; i < pathStack.length; i++) {\n            if (i === stack.length) {\n                equal = false;\n                break;\n            }\n            const level = pathStack[i];\n            if (level[0] === ':') {\n                params[level.slice(1)] = stack[i];\n            } else if (level !== stack[i]) {\n                equal = false;\n                break;\n            }\n        }\n        if (equal) {\n            resultParams = params;\n            resultPath = path;\n        }\n    }\n    if (resultPath === null) {\n        resultPath = Page404Symbol;\n    }\n    return {params: resultParams, path: resultPath, routes: routes(resultParams)};\n}\n\nexport const RouteLink = Component.RouteLink(({props}) => {\n    return () => {\n        const {href, children} = props();\n        const onLinkClick = (event) => {\n            event.preventDefault();\n            if (href === '/') {\n                pushState({stack: []}, '', '/');\n                return;\n            }\n            if (((window.history.state || {}).stack || []).join('/') === href) {\n                return;\n            }\n            pushState({\n                stack: href.split('/')\n            }, '', '?/' + href);\n        };\n        return E.a.href(href).onClick(onLinkClick)(children);\n    };\n})\n\n\nexport const Switch = Component.Switch(({props, state}) => {\n    const {routes} = props();\n    state.init(getRouterState(routes));\n    window.addEventListener('historyUpdate', function () {\n        state.set(getRouterState(routes));\n    });\n    return () => {\n        const {path, routes} = state();\n        return routes[path];\n    }\n});\n","import {E, Component} from './index.js';\n\nlet count  = 0;\nfunction getCustom(name, elements, didMount) {\n    class CustomElement extends HTMLElement {\n        constructor() {\n            super();\n\n            const shadow = this.attachShadow({mode: 'open'});\n            shadow.append(E.slot.name('element-slot')())\n        }\n\n        connectedCallback() {\n            didMount(elements)\n        }\n    }\n    count++;\n    const customName = `custom-${name}-${count}`;\n    customElements.define(customName, CustomElement);\n    return E[customName](\n        E.div.slot('element-slot')(\n            elements\n        )\n    );\n}\n\nexport default Component.Custom(() => {\n    return ({name, children, didMount}) => {\n        return getCustom(name, children, didMount);\n    }\n});\n","export const css = new Proxy({}, {\n    get: (target, name) => text => [`%c${text}%c`, name, '']\n});\n\nexport const color = new Proxy({}, {\n    get: (target, name) => text => css[`color:${name}`](text)\n});\n\n\nexport function consoleStyle(textList, ...args) {\n    const styles = [];\n    const text = [];\n    for (let i = 0; i < textList.length - 1; i++) {\n        const s = textList[i];\n        const v = args[i][0];\n        text.push(s, v);\n        const local = args[i][1];\n        styles.push(...(Array.isArray(local) ? local : [local, args[i][2]]));\n    }\n    text.push(textList[textList.length - 1]);\n    return [text.join(''), styles];\n}\n\nexport const mix = new Proxy({}, {\n    get: (target, name) => styles => styles.map(e => `${e};${name}`)\n});\n\nconst background = color => e => mix[`background-color:${color}`](e);\n\n\nconst _key = text => color['#a53bbb'](text);\nconst _func = text => color['#35a0ed'](text);\nconst _var = text => color['#de4d57'](text);\nconst _const = text => color['#e0994a'](text);\nconst _op = text => color['#4ba6b1'](text);\nconst S = {\n    key: _key,\n    func: _func\n}\n\nconst [text, styles] = consoleStyle`\n${S.key`export`} ${S.key`function`} ${S.func`consoleStyle`}(${_var('textList')}, ...${_var('args')}) {\n    ${_key('const')} ${_var('styles')} ${_op('=')} [];\n    ${_key('const')} ${_var('text')} ${_op('=')} [];\n    ${_key('for')} (${_key('let')} ${_var('i')} ${_op('=')} ${_const('0')}; ${_var('i')} ${_op('<')} ${_var('textList')}.${_var('length')} ${_op('-')} ${_const('1')}; ${_var('i')}${_op('++')}) {\n        ${_key('const')} ${_var('s')} ${_op('=')} ${_var('textList')}[${_var('i')}];\n        ${_key('const')} ${_var('v')} ${_op('=')} ${_var('args')}[${_var('i')}][${_const('0')}];\n        ${_var('text')}.${_op('push')}(${_var('s')}, ${_var('v')});\n        ${_var('styles')}.${_op('push')}(${_var('args')}[${_var('i')}][${_const('1')}], ${_var('args')}[${_var('i')}][${_const('2')}]);\n    }\n    ${_var('text')}.${_op('push')}(${_var('textList')}[${_var('textList')}.${_var('length')} ${_op('-')} ${_const('1')}]);\n    ${_key('return')} [${_var('text')}.${_op('join')}(${_var(`''`)}), ${_var('styles')}];\n}\n`;\n// console.log(text, ...styles);\n\nexport const _b = text => css['font-weight: bold'](text);\nexport const _i = text => css['font-style: italic'](text);\nexport const _pre = text => css['font-family: monospace'](text);\nexport const _h = l => text => css[`font-size: ${21 - l}px`](text);\n\nconst [text1, styles1] = consoleStyle`${_h(1)('Документация')}\nsee http://127.0.0.1:5500/?/blog/1\n${_b('bold')} and ${_i('italic')} and ${_pre('pre')}\n`;\n// console.log(text1, ...styles1);\n\n","export {default as block} from './bem.js';\nexport {default as style} from './style.js';\nexport {default as css} from './css.js';\nexport {E, S, M} from './element.js';\nexport {default as Component} from './component.js';\nexport {Switch, RouteLink, getRouterState} from './router.js';\nexport {default as Custom} from './custom.js';\nexport {log, setLogger, logAllLevels} from './logger.js';\nexport {consoleStyle} from './consoleStyle.js';\nexport {diff} from './diff.js';\n","import './Breadcrumbs.less';\n\nimport {\n    Component,\n    E,\n    M,\n    RouteLink,\n    block,\n    css,\n    style\n} from '../../utils/index.js';\n\nconst b = block('breadcrumbs');\n\nconst Breadcrumbs = Component.Breadcrumbs(({props}) => {\n    return () => E.div.class(b())(\n        props().items\n        .map(([name, href], i) => {\n            const last = i === props().items.length - 1;\n            return E.span(\n                E.div.style('display: inline-block')(\n                    last ? name : RouteLink.href(href)(name)\n                ),\n                last ? '' : ' / '\n            );\n        })\n    );\n});\n\nexport default Breadcrumbs;\n","import './Page404.less';\n\nimport { Component, E, RouteLink, block } from '../../utils';\n\nconst b = block('page-404');\n\nexport const Page404 = Component.Page404(() => () =>\n    E.div.class(b())(\n        E.div(\n            E.div.class(b('header'))('404'),\n            E.p(E`Страница ${E.i(document.location.href)} не найдена`),\n            E.br,\n            E.p(RouteLink.href('/')('На главную страницу'))\n        )\n    )\n);\n","export default {\n    0: {\n        type: 'js',\n        creationTime: '2020-01-15T17:31:44',\n        title: 'Я создал этот сайт',\n        tags: ['web', 'site']\n    },\n    1: {\n        type: 'html',\n        creationTime: '2020-03-09T14:09:41',\n        title: 'Создаём приложение на Filemaker',\n        tags: ['filemaker', 'tutorial']\n    },\n    2: {\n        type: 'js',\n        creationTime: '2020-03-28T22:01:49',\n        title: 'Отказ от нативных es6 модулей в пользу Parcel',\n        tags: ['es6', 'parcel']\n    },\n    3: {\n        type: 'js',\n        creationTime: '2020-04-04T19:38:53',\n        title: 'Переписал движок сайта на virtual DOM',\n        tags: ['js', 'virtual dom']\n    },\n    4: {\n        type: 'js',\n        creationTime: '2020-04-11T09:52:02',\n        title: 'Стандартная модель элементарных частиц — верстаем с CSS Grid',\n        tags: ['css', 'grid', 'physics', 'standard model']\n    },\n    5: {\n        type: 'js',\n        creationTime: '2020-04-20T02:13:59',\n        title: 'Добавляем светлую тему с CSS переменными',\n        tags: ['css', 'css variables']\n    },\n    6: {\n        type: 'js',\n        creationTime: '2020-05-09T04:09:09',\n        title: 'Игра «Жизнь» и клеточные автоматы в браузере',\n        tags: ['js', 'game of life', 'cellular automaton']\n    },\n    7: {\n        type: 'js',\n        creationTime: '2020-05-16T03:06:41',\n        title: 'Адаптивная вёрстка меню с CSS @media',\n        tags: ['css', '@media']\n    },\n    8: {\n        type: 'js',\n        creationTime: '2020-08-24T00:32:17',\n        title: 'Делегация обновления компонентов',\n        tags: ['js', 'virtual dom']\n    },\n    9: {\n        type: 'js',\n        creationTime: '2020-10-31T03:15:35',\n        title: 'Формат электронной книги',\n        tags: ['book', 'web', 'js']\n    }\n}\n","import './book.less';\n\nimport { Component, block } from '../../utils/index.js';\nimport { _b, _h, _i, _pre, consoleStyle } from '../../utils/consoleStyle.js';\n\nimport { E } from '../../utils/element.js';\nimport { isPrimitive } from '../../utils/diff';\nimport { strToArray } from '../../utils/element.js';\n\nconst b = block('book');\n\nfunction parseNewLines(text, newLine) {\n    const result = [];\n    const brs = text.match(/\\n\\n+/g);\n    if (!brs) {\n        return text;\n    }\n    let tail = text;\n    let i;\n    for (const br of brs) {\n        i = tail.indexOf(br);\n        const subbrs = [];\n        if (br.length === 2) {\n            subbrs.push(newLine);\n        } else {\n            for (let j = 0; j < 2 * br.length - 4; j++) {\n                subbrs.push(newLine);\n            }\n        }\n        result.push(tail.slice(0, i), ...subbrs);\n        tail = tail.slice(i + br.length);\n    }\n    if (tail) {\n        result.push(tail);\n    }\n\n    return result;\n}\n\nconst BadExternalComponent = Component.BadExternalComponent(({ props }) => () =>\n    E.div.class(b('bad-external-component'))(\n        E.h3('Bad external component'),\n        E.details(E.summary('error'), E.p(`${props().error}`))\n    )\n);\n\nconst markerSymbol = Symbol('marker');\nconst markerStart = Symbol('start');\nconst markerEnd = Symbol('end');\n// ?\nconst markerLine = Symbol('line');\nconst markerBlock = Symbol('block');\n\nfunction getMarker(name, f) {\n    const func = function (...args) {\n        if (\n            args.length > 0 &&\n            Array.isArray(args[0]) &&\n            args[0].hasOwnProperty('raw')\n        ) {\n            // теговый шаблон\n            return f(\n                strToArray(args[0], ...args.slice(1))\n                    .map((e) => `${e}`)\n                    .join('')\n            );\n        } else {\n            // обычный вызов\n            return f(...args);\n        }\n    };\n    func[markerSymbol] = name;\n    func.start = { [markerStart]: name, builder: func };\n    func.end = { [markerEnd]: name, builder: func };\n    return func;\n}\n\nconst markerTypes = {\n    item: 0,\n    start: 1,\n    end: 2,\n};\n\nconst j = (t) =>\n    isPrimitive(t)\n        ? t\n        : Array.isArray(t)\n        ? t.map((e) => j(e))\n        : typeof t === 'function'\n        ? t\n        : Object.keys(t).reduce((o, e) => ({ [e]: j(t[e]) }), {});\n\nconst createHtmlBook = (strings, ...elements) => {\n    const newLine = E.br;\n    const stringElements = strings\n        .map((s) => parseNewLines(s, newLine))\n        .filter((e) => e);\n\n    const head = stringElements[0];\n    const list = Array.isArray(head) ? head : [head];\n    const scopes = [];\n    const values = [];\n    for (let i = 1; i < strings.length; i++) {\n        const stringElem = stringElements[i];\n        const elem = elements[i - 1];\n        let resultElem = null;\n        const isMarker =\n            markerSymbol in elem || markerStart in elem || markerEnd in elem;\n\n        if (isMarker) {\n            const scopeName =\n                elem[markerSymbol] || elem[markerStart] || elem[markerEnd];\n\n            if (\n                markerEnd in elem ||\n                (scopes.length > 0 &&\n                    // scopes.some(\n                    //     (scope) => scope.name === scopeName\n                    // ))\n                    scopes[scopes.length - 1].name === scopeName)\n            ) {\n                // закрываем одну или несколько вложенных областей\n                let lastScopeIndex = 0;\n                for (let i = scopes.length - 1; i >= 0; i--) {\n                    if (scopes[i].name === scopeName) {\n                        lastScopeIndex = scopes.length - 1 - i;\n                        break;\n                    }\n                }\n                let currentElem;\n                for (let i = 0; i <= lastScopeIndex; i++) {\n                    const { builder } = scopes.pop();\n                    const currentValues = values.pop();\n                    currentElem = builder([\n                        ...currentValues,\n                        ...(currentElem ? [currentElem] : []),\n                    ]);\n                }\n\n                // итоговый элемент — закрытая область\n                resultElem = currentElem;\n            }\n        }\n\n        if (scopes.length === 0) {\n            // корневой уровень\n            if (isMarker && resultElem) {\n                list.push(resultElem);\n            } else if (!isMarker) {\n                list.push(elem);\n            }\n        } else {\n            // уровень области\n            const value = values[values.length - 1];\n            if (isMarker && resultElem) {\n                value.push(resultElem);\n            } else if (!isMarker) {\n                value.push(elem);\n            }\n        }\n\n        if (isMarker) {\n            const scopeName =\n                elem[markerSymbol] || elem[markerStart] || elem[markerEnd];\n            if (\n                (markerStart in elem ||\n                    scopes.length === 0 ||\n                    scopes.every((scope) => scope.name !== scopeName)) &&\n                !(markerEnd in elem)\n            ) {\n                // открываем новую область\n                scopes.push({\n                    name: scopeName,\n                    type: markerTypes.item,\n                    builder: markerSymbol in elem ? elem : elem.builder,\n                });\n                values.push([]); // children\n            }\n        }\n\n        if (scopes.length === 0) {\n            // корневой уровень\n            list.push(\n                ...(Array.isArray(stringElem) ? stringElem : [stringElem])\n            );\n        } else {\n            // уровень области\n            const value = values[values.length - 1];\n            value.push(\n                ...(Array.isArray(stringElem) ? stringElem : [stringElem])\n            );\n        }\n    }\n    if (scopes.length > 0) {\n        // закрываем незакрытые области\n        let currentElem;\n        for (let i = 0; i < scopes.length; i++) {\n            const { builder } = scopes.pop();\n            const currentValues = values.pop();\n            currentElem = builder(\n                ...[...currentValues, ...(currentElem ? [currentElem] : [])]\n            );\n        }\n        list.push(currentElem);\n    }\n    return list.filter((e) => e);\n};\n\nexport function createBook(f) {\n    return {\n        to: (type) => {\n            const types = {\n                html: () => ({\n                    V: createHtmlBook,\n                    book: createHtmlBook,\n                    b: getMarker('b', (t) => E.b(t)),\n                    i: getMarker('i', (t) => E.i(t)),\n                    sub: getMarker('sub', (t) => E.sub(t)),\n                    sup: getMarker('sup', (t) => E.sup(t)),\n                    code: getMarker('code', (t) => E.code(t)),\n                    pre: getMarker('pre', (t) => E.pre(t)),\n                    h: (l) => getMarker(`h${l}`, (t) => E[`h${l}`](t)),\n                    n: E.br,\n                    p: getMarker('p', (t) => E.p(t)),\n                    ul: getMarker('ul', (t) => E.ul(t)),\n                    li: getMarker('li', (t) => E.li(t)),\n                    img: (src, alt) => E.img.src(src).alt(alt),\n                    a: (href) => (text) => E.a.href(href)(text),\n                    external: (f) => {\n                        try {\n                            return f({ E, Component });\n                        } catch (e) {\n                            console.error(e);\n                            return BadExternalComponent.error(e);\n                        }\n                    },\n                }),\n                markdown: () => ({\n                    V: (strings, ...elements) => {\n                        const list = [strings[0]];\n                        for (let i = 1; i < strings.length; i++) {\n                            list.push(elements[i - 1], strings[i]);\n                        }\n                        return list.join('');\n                    },\n                    b: (t) => `**${t}**`,\n                    i: (t) => `_${t}_`,\n                    code: (t) => `\\`${t}\\``,\n                    h: (l) => (t) => `${'#'.repeat(l)} ${t}`,\n                    n: '  \\n',\n                    p: (t) => `\\n\\n${t}\\n\\n`,\n                    img: (src, alt) => `![${alt || ''}](${src})`,\n                    a: (href) => (text) => `[${text || ''}](${href})`,\n                    external: (f) => {\n                        try {\n                            return `${f()}`;\n                        } catch (e) {\n                            console.error(e);\n                            return 'Bad external component';\n                        }\n                    },\n                }),\n                browserConsole: () => ({\n                    V: consoleStyle,\n                    b: _b,\n                    i: _i,\n                    code: _pre,\n                    h: _h,\n                    n: '\\n',\n                    p: (t) => t,\n                    img: (src, alt) => [`IMG[${src || ''}]: ${alt || ''}`, []],\n                    a: (href) => (text) => [`${href} (${text})`, []],\n                }),\n            };\n            if (type && type in types) {\n                return f(types[type]());\n            } else {\n                throw new Error(\n                    `Invalid type. Available types: ${Object.keys(\n                        types\n                    ).join()}`\n                );\n            }\n        },\n    };\n}\n\n// const bookTemplate = createBook(({b, i, h, code, n, p, img, a, V}) =>\n// V`\n// ${h(1)('Header')}\n// ${p(V`\n// ${b('жирный')} текст ${n}\n// ${i('курсивный')} текст\n// ${img('../assets/images/favicon/favicon-32x32.png', 'favicon')}\n// `)}\n// блок ${code('программного кода')} ${n}\n// ${a('https://github.com')('Гитхаб')} - ссылка\n// `);\n\n// export const book = bookTemplate.to('html');\n\n// console.log(bookTemplate.to('markdown'));\n\n// const [text, styles] = bookTemplate.to('browserConsole');\n// console.log(text, ...styles);\n","import './Post.less';\n\nimport {\n    Component,\n    E,\n    block,\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\nimport { Page404 } from '../Page404/Page404';\nimport blog from '../../data/blog/index.js';\nimport {createBook} from '../../services/book/book.js';\n\nconst b = block('post');\n\nconst Post = Component.Post(({props, state, hooks: {didMount}}) => {\n    state.init({\n        text: null\n    })\n    didMount(() => {\n        const {id} = props();\n        if (!blog.hasOwnProperty(id)) {\n            return;\n        }\n        const {type} = blog[id];\n        const path = `/data/blog/data/${id}/index.${type}?r=${window.appVersion}`;\n        if (type === 'html') {\n            fetch(path).then(e => {\n                // console.log(e.clone().blob());\n                return e.blob()\n            }).then(data => {\n                return 'html' || data.text();\n\n            }).then(text => {\n                // console.log(text);\n                state.set({text: text});\n            });\n        } else if (type === 'js') {\n            import(path).then(data => {\n                // console.log(data);\n                state.set({text: createBook(data.default).to('html')})\n            }).catch(e => {\n                console.error(e);\n                state.set({text: 'Ошибка загрузки контента'});\n            });\n        }\n    })\n\n    return () => {\n        const {id} = props();\n        if (!blog.hasOwnProperty(id)) {\n            return Page404;\n        }\n        const {type} = blog[id];\n        const {text} = state();\n        const {title, creationTime} = blog[id];\n        const template = E.div.class(b('content'));\n        let elem;\n        if (type === 'html') {\n            const iframe = E.iframe.id(`iframe-post-${id}`).src(`/data/blog/data/${id}/index.${type}`).style('width: 100%; border:none; object-fit: fill; height: 100vh;')\n            setTimeout(() => {\n                const iframeElem = document.getElementById(`iframe-post-${id}`);\n                iframeElem.style.height = (iframeElem.contentWindow.document.body.clientHeight + 100) + 'px';\n            }, 300)\n            elem = template(iframe);\n        } else if (type === 'js') {\n            elem = template(text);\n        } else {\n            elem = 'Ошибка несоответствия типа контента'\n        }\n        return E.div.class(b())(\n            Breadcrumbs.items([['Блог', 'blog'], [title, `blog/${id}`]]),\n            E.h2(title),\n            E.em((new Date(creationTime)).toLocaleString('ru', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                timezone: 'UTC',\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            })),\n            E.div.class(b('container'))(elem)\n        );\n    }\n});\n\nexport default Post;\n","import './Button.less';\n\nimport {\n    Component,\n    E,\n    M,\n    block\n} from '../../utils/index.js';\n\nconst b = block('button');\n\nconst Button = Component.Button(({props}) => {\n    return () => {\n        const {children, size, onClick, class: c, disabled} = props();\n        return E.button.disabled(disabled).onClick(onClick || (() => {})).class(b() + (c ? ` ${c}` : ''))(\n            children\n        );\n    };\n})\n\nexport default Button;\n","import './Checkbox.less';\n\nimport {\n    Component,\n    E,\n    M,\n    block\n} from '../../utils/index.js';\n\nconst b = block('checkbox');\n\nconst Checkbox = Component.Checkbox(({props}) => {\n    return () => E.label.class(b())(\n        E.input.type`checkbox`.class(b('input'))._props(props()),\n        E.div.class(b('box'))(\n            E.div(\n                '✓'\n            )\n        ),\n        props().children\n    )\n})\n\nexport default Checkbox;\n","import './Select.less';\n\nimport {\n    Component,\n    E,\n    M,\n    block\n} from '../../utils/index.js';\n\nconst b = block('select');\n\nconst Select = Component.Select(({props}) => {\n\n    const heap = Symbol('heap');\n\n    function getPreparedValues() {\n        const groups = {[heap]: []};\n        for (const option of props().values) {\n            if (option.group) {\n                if (!groups[option.group]) {\n                    groups[option.group] = [];\n                }\n                groups[option.group].push(option)\n            } else {\n                groups[heap].push(option);\n            }\n        }\n        return groups;\n    }\n\n    return () => {\n        const groups = getPreparedValues(props().values);\n        return E.div.class(b())(\n            E.select.class(b('native')).onChange(props().onChange)(\n                Object.keys(groups).map(name => {\n                    const options = groups[name];\n                    return E.optgroup.label(name)(\n                        options.map(e => E.option.value(e.value).selected(e.selected)(e.title))\n                    )\n                }),\n                groups[heap].map((e) => {\n                    return E.option.value(e.value).selected(e.selected)(e.title)\n                })\n            ),\n            E.div.class(b('expand'))('▾')\n        );\n    }\n})\n\nexport default Select;\n","export {default as Button} from './Button/Button.js';\nexport {default as Checkbox} from './Checkbox/Checkbox.js';\nexport {default as Select} from './Select/Select.js';\n","import './Blog.less';\n\nimport {\n    Component,\n    E,\n    M,\n    RouteLink,\n    block,\n} from '../../utils/index.js';\n\nimport { Button } from '../../blocks/index.js';\nimport blog from '../../data/blog/index.js';\n\nconst b = block('blog');\n\nconst Blog = Component.Blog(() => {\n    const total = Object.keys(blog).length;\n\n    return () =>\n        E.div.class(b())(\n            // E.div([\n            //     ...new Set(\n            //         Object.values(blog)\n            //             .map((e) => e.tags)\n            //             .flat()\n            //     ),\n            // ].map(tag => E.div.class(b('tag'))(tag))),\n            Object.keys(blog)\n                .sort((keyA, keyB) => {\n                    const getMs = (key) =>\n                        Number(new Date(blog[key].creationTime));\n                    return getMs(keyB) - getMs(keyA);\n                })\n                .map((key) => {\n                    const { type, creationTime, title, tags } = blog[key];\n                    return E.div.class(b('post-card'))(\n                        E.h3.class(b('title'))(\n                            title,\n                            E.div.class(b('read-button'))(\n                                RouteLink.href(`blog/${key}`)(Button('Читать'))\n                            )\n                        ),\n                        E.p(\n                            E.span.class(b('time'))(\n                                new Date(creationTime).toLocaleString('ru', {\n                                    year: 'numeric',\n                                    month: 'long',\n                                    day: 'numeric',\n                                    timezone: 'UTC',\n                                    hour: 'numeric',\n                                    minute: 'numeric',\n                                    second: 'numeric',\n                                })\n                            )\n                        ),\n                        E.p(tags.map((tag) => E.div.class(b('tag'))(tag)))\n                    );\n                })\n        );\n});\n\nexport default Blog;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Physics.less';\n\nconst b = block('physics');\n\nconst Physics = Component.Physics(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Физика'),\n            RouteLink.href('physics/standard-model')(\n                Button(\n                    E.div.style(style({padding: '16px 64px'}))(\n                        'Стандартная модель',\n                        E.br,\n                        E.span.style`font-size: 4em; font-family: serif;`('e', E.sup('–'), ', γ, H')\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Physics;\n","import './StandardModel.less';\n\nimport {\n    Component,\n    E,\n    RouteLink,\n    block,\n    css,\n    style\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\n\nconst b = block('standard-model');\n\nconst particles = [\n    {\n        name: 'электронное антинейтрино',\n        symbol: E.span(E.span.style`text-decoration: overline`('ν'), E.sub('e')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<1.0 eV/c', E.sup('2'))\n    },\n    {\n        name: 'мюонное антинейтрино',\n        symbol: E.span(E.span.style`text-decoration: overline`('ν'), E.sub('μ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<0.17 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'тау антинейтрино',\n        symbol: E.span(E.span.style`text-decoration: overline`('ν'), E.sub('τ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<18.2 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'электронное нейтрино',\n        symbol: E.span('ν', E.sub('e')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<1.0 eV/c', E.sup('2'))\n    },\n    {\n        name: 'мюонное нейтрино',\n        symbol: E.span('ν', E.sub('μ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<0.17 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'тау нейтрино',\n        symbol: E.span('ν', E.sub('τ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<18.2 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'W бозон',\n        symbol: E.span('W'),\n        charge: '±1',\n        spin: '1',\n        mass: E.span('≃80.39 GeV/c', E.sup('2')),\n        group: 'SU(2)',\n        interaction: 'weak'\n    },\n    {\n        name: 'Z бозон',\n        symbol: E.span('Z'),\n        charge: '0',\n        spin: '1',\n        mass: E.span('≃91.19 GeV/c', E.sup('2')),\n        group: 'SU(2)',\n        interaction: 'weak'\n    },\n    {\n        name: 'бозон Хиггса',\n        symbol: E.span('H'),\n        charge: '0',\n        spin: '0',\n        mass: E.span('≃124.97 GeV/c', E.sup('2')),\n        interaction: 'mass'\n    },\n    {\n        name: 'позитрон',\n        symbol: E.span('e', E.sup('+')),\n        charge: '+1',\n        spin: '1/2',\n        mass: E.span('≃0.511 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'антимюон',\n        symbol: E.span('μ', E.sup('+')),\n        charge: '+1',\n        spin: '1/2',\n        mass: E.span('≃105.66 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'антитау',\n        symbol: E.span('τ', E.sup('+')),\n        charge: '+1',\n        spin: '1/2',\n        mass: E.span('≃1.7768 GeV/c', E.sup('2'))\n    },\n    {\n        name: 'электрон',\n        symbol: E.span('e', E.sup('–')),\n        charge: '-1',\n        spin: '1/2',\n        mass: E.span('≃0.511 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'мюон',\n        symbol: E.span('μ', E.sup('–')),\n        charge: '-1',\n        spin: '1/2',\n        mass: E.span('≃105.66 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'тау',\n        symbol: E.span('τ', E.sup('–')),\n        charge: '-1',\n        spin: '1/2',\n        mass: E.span('≃1.7768 GeV/c', E.sup('2'))\n    },\n    {\n        name: 'фотон',\n        symbol: E.span('γ'),\n        charge: '0',\n        spin: '1',\n        mass: E.span('0'),\n        modifier: 'y',\n        group: 'U(1)',\n        interaction: 'electromagnetic'\n    },\n    {\n        name: 'верхний',\n        symbol: E.span(E.span.style`text-decoration: overline`('u')),\n        charge: '-2/3',\n        spin: '1/2',\n        mass: E.span('≃2.2 MeV/c', E.sup('2')),\n        category: 'anti-quark',\n        modifier: 'au'\n    },\n    {\n        name: 'очаровательный',\n        symbol: E.span(E.span.style`text-decoration: overline`('c')),\n        charge: '-2/3',\n        spin: '1/2',\n        mass: E.span('≃1.28 GeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'истинный',\n        symbol: E.span(E.span.style`text-decoration: overline`('t')),\n        charge: '-2/3',\n        spin: '1/2',\n        mass: E.span('≃173.1 GeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'верхний',\n        symbol: E.span('u'),\n        charge: '2/3',\n        spin: '1/2',\n        mass: E.span('≃2.2 MeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'очаровательный',\n        symbol: E.span('c'),\n        charge: '2/3',\n        spin: '1/2',\n        mass: E.span('≃1.28 GeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'истинный',\n        symbol: E.span('t'),\n        charge: '2/3',\n        spin: '1/2',\n        mass: E.span('≃173.1 GeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'глюон',\n        symbol: E.span('g'),\n        charge: '0',\n        spin: '1',\n        mass: E.span('0'),\n        modifier: 'g',\n        group: 'SU(3)',\n        interaction: 'strong'\n    },\n    {\n        name: 'нижний',\n        symbol: E.span(E.span.style`text-decoration: overline`('d')),\n        charge: '1/3',\n        spin: '1/2',\n        mass: E.span('≃4.7 MeV/c', E.sup('2')),\n        category: 'anti-quark',\n        modifier: 'ad'\n    },\n    {\n        name: 'странный',\n        symbol: E.span(E.span.style`text-decoration: overline`('s')),\n        charge: '1/3',\n        spin: '1/2',\n        mass: E.span('≃96 MeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'прелестный',\n        symbol: E.span(E.span.style`text-decoration: overline`('b')),\n        charge: '1/3',\n        spin: '1/2',\n        mass: E.span('≃4.18 GeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'нижний',\n        symbol: E.span('d'),\n        charge: '-1/3',\n        spin: '1/2',\n        mass: E.span('≃4.7 MeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'странный',\n        symbol: E.span('s'),\n        charge: '-1/3',\n        spin: '1/2',\n        mass: E.span('≃96 MeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'прелестный',\n        symbol: E.span('b'),\n        charge: '-1/3',\n        spin: '1/2',\n        mass: E.span('≃4.18 GeV/c', E.sup('2')),\n        category: 'quark'\n    }\n]\n\nconst StandardModel = Component.StandardModel(({state}) => {\n\n    function renderTile({name, symbol, charge, spin, mass, category, modifier, group, interaction} = {}, i, view = false) {\n        const {i: current} = state();\n        return E.div.update(false).class(b('tile', modifier ? {mode: modifier} : {}))(E.div.style(`display: grid; grid-template-rows: auto 1fr ${view ? 'auto' : '3em'};cursor: pointer`)['data-interaction'](interaction)['data-i'](i)['data-view'](view ? 1 : 0).class(current === i ? b('current') : '').onClick((e) => {\n            const {interaction, i, view} = (e.target.closest('.' + b('tile')).firstChild.dataset);\n            if (+view) {\n                return;\n            }\n            if (interaction) {\n                state.set({\n                    interaction: state().i === +i ? undefined : interaction\n                });\n            }\n            state.set(prev => ({i: +i === prev.i ? undefined : +i}));\n        })(\n            E.div.style`display:grid;grid-template-columns: 1fr auto`(\n                E.div.style(`font-size: ${view ? '1' : '.8'}em;`)(\n                    view && 'масса: ',\n                    mass\n                )\n            ),\n            E.div.style(view ? '' : `display:grid;grid-template-columns: auto 1fr`)(\n                E.div.style(`font-size: ${view ? '1' : '.8'}em;`)(\n                    E.div(\n                        view && 'спин: ',\n                        spin\n                    ),\n                    E.div(\n                        view && 'заряд: ',\n                        charge\n                    ),\n                    group && E.div(\n                        view && 'группа симметрии: ',\n                        group\n                    ),\n                    view && interaction && interaction !== 'mass' && E.div(\n                        'Переносчик ' + {strong: 'сильного', 'electromagnetic': 'электромагнитного', 'weak': 'слабого'}[interaction] + ' взаимодействия'\n                    )\n                ),\n                E.div.style(`font-size: ${view ? 5 : 3}em;font-weight: 100;font-family:serif; display:flex; justify-content: center; align-items: center;margin-right: .3em; padding: .5em 0 .2em 0;${view ? 'margin-top: .1em;' : ''}`)(E.div.class(b('symbol'))(symbol))\n            ),\n            E.div.style(`font-size: 1em;  display:flex; justify-content: center; align-items: center; text-align: center;  line-height: 1.1em; ${view ? 'padding-bottom: 1em;' : ''}`)(E.div(\n                E.div.style(view ? 'font-size: 2em; line-height: 1.5em;' : '')(\n                    name,\n                    view && category === 'quark' && ' кварк',\n                    view && category === 'anti-quark' && ' антикварк'\n                ),\n            category === 'quark' && E.div.class(b('colors'))(\n                view && ['цветовой заряд:  ', E.br],\n                ['red', 'green', 'blue'].map(color => E.div.class(b('color', {[color]: true})))\n            ),\n            category === 'anti-quark' && E.div.class(b('colors'))(\n                view && ['цветовой заряд: ', E.br],\n                ['antired', 'antigreen', 'antiblue'].map(color => E.div.class(b('color', {[color]: true})))\n            ),\n            name === 'глюон' && E.div.class(b('colors'))(\n                view && ['цветовой заряд: ', E.br],\n                ['red-antiblue', 'blue-antigreen', 'green-antired', 'red-antigreen', 'blue-antired', 'green-antiblue', 'g3', 'g8'].map(color => E.div.class(b('color', {[color]: true, gluon: true}))(\n                    color === 'g3' ? '3' : color === 'g8' ? '8' : null\n                ))\n            )\n        ))))\n    }\n\n    return () => {\n        const {interaction, i} = state();\n        return E.div(\n            Breadcrumbs.items([['Физика', 'physics'], ['Стандартная модель']]),\n            E.div.class(b())(\n                E.h2('Стандартная модель элементарных частиц'),\n                E.div.class(b('table'))(\n                    E.div.class(b('area', {fermions: true}))('фермионы'),\n                    E.div.class(b('area', {bosons: true}))('бозоны'),\n                    E.div.class(b('area', {anti: true}))('античастицы'),\n                    E.div.class(b('area', {normal: true}))('частицы'),\n                    E.div.class(b('area', {vector: true}))('векторные'),\n                    E.div.class(b('area', {scalar: true}))('скалярный'),\n                    E.div.class(b('area', {leptons: true}))(\n                        E.div.style`display: flex; justify-content: flex-end; align-items: flex-end; height: 100%`('лептоны')\n                    ),\n                    E.div.class(b('area', {quarks: true}))(\n                        E.div.style`display: flex; justify-content: flex-end; align-items: flex-start; height: 100%`('кварки')\n                    ),\n                    interaction === 'weak' && [\n                        E.div.class(b('weak', {part: 1})),\n                        E.div.class(b('weak', {part: 2}))\n                    ],\n                    interaction === 'electromagnetic' && [\n                        E.div.class(b('electromagnetic', {part: 1})),\n                        E.div.class(b('electromagnetic', {part: 2})),\n                        E.div.class(b('electromagnetic', {part: 3}))\n                    ],\n                    interaction === 'strong' && [\n                        E.div.class(b('strong', {part: 1})),\n                        E.div.class(b('strong', {part: 2}))\n                    ],\n                    interaction === 'mass' && [\n                        E.div.class(b('higgs', {part: 1})),\n                        E.div.class(b('higgs', {part: 2}))\n                    ],\n                    E.div.class(b('border', {['anti-normal']: true})),\n                    E.div.class(b('border', {['fermions-bosons']: true})),\n                    E.div.class(b('border', {['leptons-quarks']: true})),\n                    E.div.class(b('border', {['vector-scalar']: true})),\n                    particles.map((e, i) => renderTile(e, i)),\n                    i !== undefined && (\n                        E.div.class(b('big-tile'))(renderTile(particles[i], undefined, true))\n                    ),\n                    [1, 2, 3, 1, 2, 3].map((k, i) => E.div.class(b('generation', {start: i === 0}))(k)),\n                    E.div.style`grid-column: 2 / 8; text-align: center`('Поколения')\n                ),\n                E.p.update(false)(\n                    'Взаимодействия: ',\n                    E.span.class(b('interaction', {type: 'strong'}))('сильное'), ', ',\n                    E.span.class(b('interaction', {type: 'electromagnetic'}))('электромагнитное'), ' и ',\n                    E.span.class(b('interaction', {type: 'weak'}))('слабое'), '. Также добавлено ',\n                    E.span.class(b('higgs-field'))('поле Хиггса'),\n                    E`. При нажатии на карточки частиц бозонов — квантов соответствующих полей, будут подсвечены все частицы, на которые действует поле. Значения масс для частиц взяты со страницы ${E.a.href('https://en.wikipedia.org/wiki/Standard_Model')('Стандартной модели')} в википедии. Выделение антинейтрино как отдельных частиц в таблице не значит, что они являются фермионами Дирака, а сделано исключительно для визуального удобства.`\n                )\n            )\n        );\n    }\n});\n\nexport default StandardModel;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Projects.less';\n\nconst b = block('projects');\n\nconst Projects = Component.Projects(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Проекты'),\n            E.div.class(b('list'))(\n                RouteLink.href('projects/unicode')(\n                    Button.class(b('button'))(\n                        E.div.class(b('tile'))(\n                            'Юникод',\n                            E.span.style`font-size: 4em`('✍')\n                        )\n                    )\n                ),\n                RouteLink.href('projects/game-of-life')(\n                    Button.class(b('button'))(\n                        E.div.class(b('tile'))(\n                            'Игра «Жизнь»',\n                            E.div.class(b('glider'))(\n                                E.div,\n                                E.div.class(b('fill')),\n                                E.div,\n                                E.div,\n                                E.div,\n                                E.div.class(b('fill')),\n                                E.div.class(b('fill')),\n                                E.div.class(b('fill')),\n                                E.div.class(b('fill'))\n                            )\n                        )\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Projects;\n","import {\n    block,\n    E,\n    css,\n    style,\n    Component\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\n\nimport './Colors.less';\n\nconst colors = [\n    'black',\n    'dark-black',\n    'dark',\n    'dark-gray',\n    'gray-dark',\n    'gray',\n    'gray-light-medium',\n    'gray-light',\n    'light-gray-medium',\n    'light-gray',\n    'light',\n    'light-white',\n    'white',\n    'blue',\n    'blue-light',\n    'blue-dark',\n    'blue-sky',\n    'cyan',\n    'red',\n    'red-light',\n    'green-light',\n    'orange-light',\n    'yellow-light',\n    'violet-light',\n];\n\nconst b = block('colors');\n\nlet currentListener;\n\nconst Colors = Component.Colors(({state, hooks}) => {\n    function getContrastCondition(rgb) {\n        if (document.body.classList.contains('theme_light')) {\n            const v = Math.min(...rgb);\n            return v > 230;\n        } else {\n            const v = Math.max(...rgb);\n            return v > 38 && v < 78;\n        }\n    }\n\n    state.init({theme: ''});\n\n    hooks.didMount(() => {\n        if (currentListener) {\n            window.removeEventListener('theme', currentListener);\n            currentListener = null;\n        }\n        currentListener = window.addEventListener('theme', e => {\n            state.set({theme: e.detail.theme});\n        });\n    });\n\n    return () => E.div(\n        Breadcrumbs.items([['Дизайн', 'design'], ['Цвета']]),\n        E.div.class(b())(\n            colors.map(color => {\n                const code = getComputedStyle(document.documentElement).getPropertyValue(`--color-${color}`).trim();\n                const rgb = (s => [s.slice(0,2), s.slice(2,4),s.slice(4)].map(hex => parseInt(hex, 16)))(code.slice(1))\n                const v = Math.max(...rgb);\n                const contrast = v > 162 ? 'black' : 'white';\n                const border = getContrastCondition(rgb) ? 'solid 1px var(--color-border-contrast)' : undefined;\n                const colorNode = E.div(\n                    E.div\n                        .class(b('area', {color}))\n                        .style(style({\n                            ...(border ? {border} : {}),\n                            color: contrast,\n                            backgroundColor: `var(--color-${color})`\n                        }))\n                    (\n                        E.div.class(b('code'))(code)\n                    ),\n                    E.div.class(b('name'))(color)\n                );\n                return colorNode;\n            })\n        )\n    );\n});\n\n\nexport default Colors;\n","import './Unicode.less';\n\nimport {\n    Component,\n    E,\n    block\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nconst b = block('unicode');\n\nconst limit = 5000;\nconst max = 65535;\nconst count = (max - (max % limit)) / limit + 1;\n\nfunction getUnicodeList(start, end) {\n    const table = [];\n    for (let i = start; i < end; i++) {\n        table.push(E.div.title(i)(String.fromCharCode(i)));\n    }\n    return table;\n}\n\nconst Unicode = Component.Unicode(({state}) => {\n    state.init({i: 0});\n\n    return () => {\n        const start = state().i;\n        const startI = start * limit;\n        const end = start * limit + limit;\n        const endI = end > max ? max : end;\n        return E.div(\n            Breadcrumbs.items([['Проекты', 'projects'], ['Юникод']]),\n            E.div.class(b())._forceUpdate(true)\n            (\n                E.div.class(b('menu'))([...(new Array(count)).keys()].map(i =>\n                    E.div\n                        .class(b('button-container'))\n                        .onClick(() => state.set({i}))\n                    (\n                        Button(E.span.class(b('button', {active: i === start}))(`${i}`))\n                    )\n                )),\n                E.div(\n                    E.h2('Юникод'),\n                    E.p(E`Пока представлена только ${E.a.href('https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane')('основная многоязычная плоскость')}`),\n                    E.br,\n                    E.p(`Cимволы ${startI} - ${endI}`),\n                    E.br,\n                    E.div._forceUpdate(true).class(b('table'))(getUnicodeList(startI, endI))\n                )\n            )\n        );\n    }\n});\n\nexport default Unicode;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Design.less';\n\nconst b = block('design');\n\nconst Design = Component.Design(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Дизайн'),\n            RouteLink.href('design/colors')(\n                Button(\n                    E.div.style(style({padding: '24px', fontSize: '64px', fontWeight: '500'}))(\n                        E.span.style('color: #bc514a')('Ц'),\n                        E.span.style('color: #99c27c')('в'),\n                        E.span.style('color: #65b0ed')('е'),\n                        E.span.style('color: #c57bdb')('т'),\n                        E.span.style('color: #d0996a')('а'),\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Design;\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.BanIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 512 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M256 8C119.034 8 8 119.033 8 256s111.034 248 248 248 248-111.034 248-248S392.967 8 256 8zm130.108 117.892c65.448 65.448 70 165.481 20.677 235.637L150.47 105.216c70.204-49.356 170.226-44.735 235.638 20.676zM125.892 386.108c-65.448-65.448-70-165.481-20.677-235.637L361.53 406.784c-70.203 49.356-170.226 44.736-235.638-20.676z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.BarsIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 448 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.SunIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 512 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.MoonIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 512 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.PlayIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 448 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.PencilAltIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 512 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.PauseIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 448 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z`\n    )\n);\n","import {\n    Component,\n    S\n} from '../utils/index.js';\n\nexport default Component.StepForwardIcon(({props}) => () =>\n    S.svg\n        ['aria-hidden']`true`\n        .focusable`false`\n        .role`img`\n        .xmlns`http://www.w3.org/2000/svg`\n        .viewBox`0 0 448 512`\n        ._props(props())\n    (\n        S.path\n            .fill`currentColor`\n            .d`M384 44v424c0 6.6-5.4 12-12 12h-48c-6.6 0-12-5.4-12-12V291.6l-195.5 181C95.9 489.7 64 475.4 64 448V64c0-27.4 31.9-41.7 52.5-24.6L312 219.3V44c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12z`\n    )\n);\n","import Ban from './Ban';\nimport Bars from './Bars';\nimport Sun from './Sun';\nimport Moon from './Moon';\nimport Play from './Play';\nimport PencilAlt from './PencilAlt';\nimport Pause from './Pause';\nimport StepForward from './StepForward';\n\nexport const Icon = {\n    Ban,\n    Bars,\n    Sun,\n    Moon,\n    Play,\n    Pause,\n    StepForward,\n    PencilAlt\n};\n","import './GameOfLife.less';\n\nimport {\n    Button,\n    Checkbox,\n    Select\n} from '../../blocks/index.js';\nimport {\n    Component,\n    E,\n    block,\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\nimport { Icon } from '../../icons/index.js';\n\nconst b = block('game-of-life');\n\nconst range = (start, end) => {\n    const result = [];\n    for (let i = start; i <= end; i++) {\n        result.push(i);\n    }\n    return result;\n}\n\nconst patternGroups = {\n    spaceship: 'Космические корабли, скорость',\n    puffer: 'Паровозы, скорость',\n    gun: 'Ружья',\n    oscillator: 'Осцилляторы, период',\n    methuselah: 'Долгожители'\n}\n\nconst patterns = {\n    'glider': {\n        name: 'Планер, c/4',\n        code: 'bob$2bo$3o!',\n        group: patternGroups.spaceship\n    },\n    'lightweight-spaceship': {\n        name: 'Лёгкий космический корабль, c/2',\n        code: 'bo2bo$o4b$o3bo$4o!',\n        group: patternGroups.spaceship\n    },\n    'middleweight-spaceship': {\n        name: 'Средний космический корабль, c/2',\n        code: '3bo2b$bo3bo$o5b$o4bo$5o!',\n        group: patternGroups.spaceship\n    },\n    'heavyweight-spaceship': {\n        name: 'Тяжёлый космический корабль, c/2',\n        code: '3b2o2b$bo4bo$o6b$o5bo$6o!',\n        group: patternGroups.spaceship\n    },\n    swan: {\n        name: 'Лебедь, c/4',\n        code: `bo10b2o10b$5o6b2o11b$o2b2o8bo7b2ob$2b2obo5b2o6b3obo$11b2o3bob2o4b$5bob\n        o6b2o8b$10b3obo4bo4b$7b3o3bo4bo5b$8bo7bo7b$8bo6bo8b2$11bo!`,\n        group: patternGroups.spaceship\n    },\n    loafer: {\n        name: 'Бездельник, c/7',\n        code: `b2o2bob2o$o2bo2b2o$bobo$2bo$8bo$6b3o$5bo$6bo$7b2o!`,\n        group: patternGroups.spaceship\n    },\n    lobster: {\n        name: 'Омар, c/7',\n        code: `12b3o$12bo$13bo2b2o$16b2o$12b2o$13b2o$12bo2bo2$14bo2bo$14bo3bo$15b3obo\n        $20bo$2o2bobo13bo$obob2o13bo$o4bo2b2o13b2o$6bo3bo6b2o2b2o2bo$2b2o6bo6b\n        o2bo$2b2o4bobo4b2o$9bo5bo3bo3bo$10bo2bo4b2o$11b2o3bo5bobo$15bo8b2o$15b\n        o4bo$14bo3bo$14bo5b2o$15bo5bo!`,\n        group: patternGroups.spaceship\n    },\n    'weekender': {\n        name: 'Отдыхающий, 2c/7',\n        code: `bo12bob$bo12bob$obo10bobo$bo12bob$bo12bob$2bo3b4o3bo2b$6b4o6b$2b4o4b4o\n        2b2$4bo6bo4b$5b2o2b2o!`,\n        group: patternGroups.spaceship\n    },\n    '3-engine-cordership': {\n        name: 'Трёхмоторный эсминец, c/12',\n        code: `31b3o24b$32bo25b$32bo2bo22b$32bo2bo22b$33bobo22b$48b2o8b$48b2o8b3$32bo\n        25b$31bobo24b$32bo25b$49bo8b$48bo7b2o$30b4o22b2o$30b2o3bo10bo11b$31bo\n        4bo9bobo9b$33bob2o10bo10b$34bo23b3$42bobob2o10b$25bo16bobo13b$24b3o17b\n        o2bo10b$43bo3bo10b$24b3o16b4o2b2o7b$25b2ob2o14bo5b2o6b$27bo21bo8b3$b3o\n        54b$2bo55b$2bo2bo52b$2bo2bo52b$3bobo52b$18b2o38b$18b2o38b$24bo33b$23b\n        3o32b$2bo19b2ob2o31b$bobo18bobo33b$2bo19bo35b3$4o54b$2o3bo13bo38b$bo4b\n        o11bobo37b$3bob2o11bo39b$4bo15b2o36b$21bo36b$18b3o37b$19b2o37b$16bo41b\n        $16b2o40b$16b2o40b$6b2o6b2o42b$6b2o4b2o44b$12b2obo42b$14b2o42b5$14b2o\n        42b$14b2o!`,\n        group: patternGroups.spaceship\n    },\n    'p15-pre-pulsar-spaceship': {\n        name: 'Допульсарный космический корабль(период 15), c/5',\n        code: `3b3o10b3o23b3o10b3o3b$4bobo8bobo25bobo8bobo4b$6bo8bo29bo8bo6b$bob5o6b\n        5obo19bob5o6b5obob$bob2o3b2o2b2o3b2obo19bob2o3b2o2b2o3b2obob$2o5b3o2b\n        3o5b2o17b2o5b3o2b3o5b2o$5b2ob2o2b2ob2o27b2ob2o2b2ob2o5b2$4bo12bo25bo\n        12bo4b$5b3o6b3o27b3o6b3o5b$4b4o6b4o25b4o6b4o4b$3b2o12b2o23b2o12b2o3b$\n        4bo12bo25bo12bo4b$2b3o12b3o21b3o12b3o2b$2bo16bo21bo16bo2b$5bo10bo27bo\n        10bo5b$3bobo10bobo23bobo10bobo3b$2bo3b2o6b2o3bo21bo3b2o6b2o3bo2b$3bo5b\n        o2bo5bo23bo5bo2bo5bo3b$9bo2bo35bo2bo9b$bob2o4bo2bo4b2obo19bob2o4bo2bo\n        4b2obob$bo3b3obo2bob3o3bo19bo3b3obo2bob3o3bob$2bo6bo2bo6bo21bo6bo2bo6b\n        o2b$bo2b2o3bo2bo3b2o2bo19bo2b2o3bo2bo3b2o2bob$bo2b2obobo2bobob2o2bo19b\n        o2b2obobo2bobob2o2bob$5bo2bo4bo2bo27bo2bo4bo2bo5b$6bobo4bobo29bobo4bob\n        o6b$27bo5bo27b$4b2obob4obob2o9bo5bo9b2obob4obob2o4b$10b2o14bobo3bobo\n        14b2o10b$2bob2o10b2obo7bo5bo7bob2o10b2obo2b$2o2bo3b2o2b2o3bo2b2o5bo5bo\n        5b2o2bo3b2o2b2o3bo2b2o$b2obo12bob2o19b2obo12bob2ob$3b2obo8bob2o23b2obo\n        8bob2o3b$4bo2bo6bo2bo25bo2bo6bo2bo4b$b2o2bo2bo4bo2bo2b2o4b2o7b2o4b2o2b\n        o2bo4bo2bo2b2ob$bo5b2o4b2o5bo5bobo3bobo5bo5b2o4b2o5bob$b3o3bo6bo3b3o6b\n        o5bo6b3o3bo6bo3b3ob$3b4o8b4o23b4o8b4o3b$4bo2bo6bo2bo25bo2bo6bo2bo4b$4b\n        o12bo25bo12bo4b$4bob2o6b2obo25bob2o6b2obo4b$5bo10bo27bo10bo!`,\n        group: patternGroups.spaceship\n    },\n    'spaghetti-monster': {\n        name: 'Спагетти монстр, 3c/7',\n        code: `8b3o5b3o$8bobo5bobo$8bobo5bobo$6bob2o3bo3b2obo$6b2o4bobo4b2o$10b2obob\n        2o$9bo7bo$9bobo3bobo$5b5o7b5o$4bo2bo11bo2bo$5bob3o7b3obo$7bob2o5b2obo$\n        6b2obobo3bobob2o$6b3obo5bob3o2$10b2o3b2o$12bobo$9bo7bo$9b2o5b2o$6b2o\n        11b2o$4bob2o11b2obo$4b2o2b2o7b2o2b2o$4bo2bo2bo5bo2bo2bo$5bo4bo5bo4bo$\n        5bo2bo2bo3bo2bo2bo$2bo5bo9bo5bo$3bobo15bobo$7bo11bo$3bo3bobo7bobo3bo$\n        3bo2bo3bo5bo3bo2bo$4b2o2b2o7b2o2b2o$8bo9bo2$8b5ob5o$bo6b2ob2ob2ob2o6bo\n        $3o7bo5bo7b3o$o2b2o5bo5bo5b2o2bo$2bo3b5o5b5o3bo$7bob2o5b2obo$bo3bo15bo\n        3bo$bob2o2bo11bo2b2obo$bob4o13b4obo$4bo17bo2$2bo21bo$bobo19bobo$o25bo$\n        o3bo17bo3bo$5bo15bo$2o23b2o$2bo3bo2bo7bo2bo3bo$2bo3bobobo5bobobo3bo$2b\n        o5bob2o3b2obo5bo$2bo3b2obo7bob2o3bo$6b2o11b2o$4bo17bo$3bo19bo$3bo4bo9b\n        o4bo$2b2o3b2o9b2o3b2o$2b2o3bobo7bobo3b2o$2b2o3b2o3b3o3b2o3b2o$2b3o2b3o\n        bo3bob3o2b3o$6bob2obo3bob2obo$2b2o3b2obo5bob2o3b2o$3bob2o3bobobobo3b2o\n        bo$11bobobo$8bo9bo$8b3o5b3o$10b2obob2o$10b7o$8b3o5b3o$7b2obobobobob2o$\n        6bo3bo5bo3bo$11b2ob2o$5bo2bobobobobobo2bo$6b4o7b4o$9bo7bo$9bo7bo$6b2ob\n        o2bobo2bob2o2$9b2o5b2o3$9bo7bo$9b3o3b3o$8bo2bo3bo2bo$9bo7bo$8bo2bo3bo\n        2bo$11b2ob2o$12bobo$10bobobobo$9bo3bo3bo$9bo7bo$12bobo$7b2obo5bob2o$7b\n        2o2bo3bo2b2o$7bo11bo$8bo9bo$6bobo9bobo$5b4o9b4o$5b2obobo5bobob2o$4bo2b\n        o11bo2bo$9bobo3bobo$8b2obo3bob2o$4bo2bo3b2ob2o3bo2bo$9bo2bobo2bo$6bo2b\n        ob2ob2obo2bo$7bobobobobobobo$8b2o2bobo2b2o$9bobo3bobo$10b2o3b2o$7b2o9b\n        2o$7b3o7b3o$7bobo7bobo$5b2o2bo7bo2b2o$5b2o13b2o$11bo3bo$6bo4bo3bo4bo$\n        6b2o3bo3bo3b2o$7bo2bo5bo2bo$7b3o7b3o$6bobo9bobo$6b2o11b2o$6bobo4bo4bob\n        o$6b2o4b3o4b2o$6b2o3bo3bo3b2o$5b3o4b3o4b3o$3b2o17b2o$2bo5b2o2bobo2b2o\n        5bo2$2bo2bob3ob2ob2ob3obo2bo$8b3o5b3o$10b3ob3o$5bo4b2obob2o4bo$11bo3bo\n        2$11b2ob2o!`,\n        group: patternGroups.spaceship\n    },\n    'puffer-1': {\n        name: 'Паровоз 1, c/2',\n        code: `b3o6bo5bo6b3ob$o2bo5b3o3b3o5bo2bo$3bo4b2obo3bob2o4bo3b$3bo19bo3b$3bo2b\n        o13bo2bo3b$3bo2b2o11b2o2bo3b$2bo3b2o11b2o3bo!`,\n        group: patternGroups.puffer\n    },\n    'puffer-2': {\n        name: 'Паровоз 2, c/2',\n        code: `78bo26b$76b2o27b$77b2o26b2$69bobo33b$69b2o34b$70bo34b2$12bo92b$10bobo\n        29b2o28b2o31b$11b2o29b2o28b2o31b$8b2o95b$7bobo95b$9bo95b2$80b2o23b$57b\n        3o9b2o9bobo4b3o11b3ob$57bo2bo8bobo8bo6bo2bo10bo2bo$57bo11bo17bo6b3o4bo\n        3b$57bo29bo5bo2bo4bo3b$58bobo27bobo2b2obo5bobo25$60bo44b$61b2o42b$60b\n        2o43b3$4bobo98b$4b2o99b$5bo99b$34b2o28b2o39b$36bo29bo38b$2b2o29bo29bo\n        41b$3b2o29b2o21b3o4b2o5b3o13b3o11b3ob$2bo54bo2bo10bo2bo12bo2bo10bo2bo$\n        57bo13bo15bo6b3o4bo3b$5b2o50bo13bo15bo5bo2bo4bo3b$4b2o52bobo11bobo13bo\n        bo2b2obo5bobo$6bo98b4$93bo11b$94bo10b14$55bo49b$56b2o47b$55b2o48b7$5bo\n        99b$3bobo29b2o28b2o38b$4b2o29b2o28b2o38b$b2o102b$obo102b$2bo102b4$64bo\n        40b$63b3o39b$63bob2o38b$64b3o38b$64b2o39b4$57b3o11b3o13b3o11b3ob$57bo\n        2bo10bo2bo12bo2bo10bo2bo$57bo13bo15bo6b3o4bo3b$57bo13bo15bo5bo2bo4bo3b\n        $58bobo11bobo13bobo2b2obo5bobo5$93bo11b$94bo!`,\n        group: patternGroups.puffer\n    },\n    'glider-train': {\n        name: 'Планерный поезд, c/2',\n        code: `32b2o$31b2o$33bo17b6o6b2o$50bo5bo4bo4bo$56bo10bo$26b5o19bo4bo5bo5bo$\n        25bo4bo21b2o8b6o$30bo$18b2o5bo3bo23bo$18b2o7bo24bobo$14b3o4bo29bo5bo$\n        13bob2o5b2o11b2o15bobobobo6bo$b2o9b2obobo3b2o11bo2bo13b2o2bo3bo5b2o$o\n        2bo9b6o9b2o4bobo7b2o5b2o3b2obo4bob2o$b2o11b4o10b2o5bo8b2o7bo5bo4bobo$\n        50bobo11b2o2$50bobo11b2o$b2o11b4o10b2o5bo8b2o7bo5bo4bobo$o2bo9b6o9b2o\n        4bobo7b2o5b2o3b2obo4bob2o$b2o9b2obobo3b2o11bo2bo13b2o2bo3bo5b2o$13bob\n        2o5b2o11b2o15bobobobo6bo$14b3o4bo29bo5bo$18b2o7bo24bobo$18b2o5bo3bo23b\n        o$30bo$25bo4bo21b2o8b6o$26b5o19bo4bo5bo5bo$56bo10bo$50bo5bo4bo4bo$33bo\n        17b6o6b2o$31b2o$32b2o!`,\n        group: patternGroups.puffer\n    },\n    'space-rake': {\n        name: 'Космические грабли, с/2',\n        code: `11b2o5b4o$9b2ob2o3bo3bo$9b4o8bo$10b2o5bo2bob2$8bo13b$7b2o8b2o3b$6bo9bo\n        2bo2b$7b5o4bo2bo2b$8b4o3b2ob2o2b$11bo4b2o4b4$18b4o$o2bo13bo3bo$4bo16bo\n        $o3bo12bo2bob$b4o!`,\n        group: patternGroups.puffer\n    },\n    '3-engine-cordership-rake': {\n        name: 'Грабли для трёхмоторного эсминца, c/2',\n        code: `142b2o317b$126b2o13b2ob2o315b$125b4o13b4o315b$124b2ob2o14b2o316b$125b\n        2o334b$147bo313b$146b3o312b$130bo11bo3b2obo311b$128b4o10bo6bo311b$127b\n        ob5o14bo6bo305b$126b2o6bo18b2o306b$127b3obo3bo18b2o305b$128b3o3bo326b$\n        133bo327b$160bo5b2o293b$126b2o30b2o5b2ob3o290b$125b4o4b4o22b2o5b5o290b\n        $124b2ob2o4bo3bo3bo2bo22b3o291b$125b2o6bo6bo320b$134bo2bo2bo3bo20bo\n        295b$140b4o9b2o8b2o296b$146b3o5b2o8b2o295b$146b2ob2o6b3o301b$146b3o5b\n        2o305b$140b4o9b2o306b$140bo3bo316b$140bo320b$141bo2bo316b$159bo2bo298b\n        $158bo302b$158bo3bo298b$100b2o56b4o299b$99b4o68bo289b$98b2ob2o68bo289b\n        $82b2o15b2o58b3o3bo295b$81b2ob2o72b5o2bo7bo287b$82b4o71b2ob4obo7bo287b\n        $83b2o73b2o301b$103bo357b$97b2o3b3o356b$85b3o9b3ob5o355b$84b2o3bo9b3o\n        8bobo348b$83b2o2bobo9b3o8b2o46b4o299b$84bo5bo9bo10bo46bo3bo298b$85b2o\n        2bo11bo56bo302b$89bo34b3o32bo2bo298b$87bo27bobo5b5o333b$91bo2bo20b2o5b\n        2ob3o333b$82b2o6bo25bo6b2o336b$81b2ob2o4bo3bo366b$82b4o4b4o3b4o360b$\n        83b2o12bo3bo9bo8bobo338b$97bo11b2o9b2o14bo324b$98bo2bo2b2o5b3o7bo12bo\n        3bo322b$103b3o6b3o18bo327b$98bo2bo2b2o5b3o19bo4bo322b$97bo11b2o22b5o\n        323b$97bo3bo9bo349b$97b4o360b2$115b2o344b$114b2ob2o342b$115b4o17b2o\n        323b$116b2o17b3o323b$117bo18b2o323b$115bo3bo2b2o13bobo321b$114bo5bob2o\n        14b2o321b$114bo5b4o337b$114b6o341b2$130b2o46bo2bo279b$129b2ob2o43bo\n        283b$130b4o5b2o36bo3bo279b$131b2o5b2ob4o15b4o13b4o280b$139b6o15bo3bo\n        296b$140b4o16bo300b$161bo2bo296b$181b3o277b$165bo10bobobo3bo276b$163b\n        3o10bo7bo27bobo10bo235b$162bo3bo15b2o5bo22b2o9b2o236b$162bo4b3o19bobo\n        21bo10b2o235b$162b2obob3o8bo10b2o270b$164bo3b2o34bo256b$165bobo34bo3bo\n        254b$194bo6bo259b$194bobo4bo4bo254b$160b4o5b2o23b2o5b5o255b$160bo3bo3b\n        2ob2o4b2o282b$160bo8b4o3b4o281b$161bo2bo5b2o3b2ob2o9bo9bo261b$176b2o\n        11bo9bobo259b$182bobo4b2o2bo5b2o260b$181b2o2bo7bo267b$182bobo4b2o2bo\n        267b$176b2o11bo271b$175b2ob2o9bo271b$176b4o281b$177b2o282b$68b2o125b2o\n        264b$66bo4bo122b4o263b$65bo127b2ob2o263b$57bo2bo4bo5bo68bo2bo50b2o265b\n        $56bo8b6o68bo64bo256b$56bo3bo78bo3bo59bobo255b$56b4o62b4o13b4o55b2o2b\n        2ob3o6bo246b$42b4o76bo3bo66b12ob2o6bobo244b$41b7o4b2o68bo70bo7bo2bo9b\n        2o245b$40b2ob3ob2o2bobo69bo2bo66bo6b2o3b2o254b$41b2o3b2o2bo2b2o93bo45b\n        o266b$50bo2bo73b2o19bobo45b2o263b$44b2o4bobo72b5o18b2o311b$42bo8bo72bo\n        4bo2b3obo63b2o259b$41bo82bo2b3o3bo3b2o60b4o258b$41bo3bo78b2o2bo7bobo\n        14bo44b2ob2o258b$41b4o81b2o7b2obo14bobo10bo32b2o260b$25b2o109b2o15b2o\n        9bo3bo292b$24b4o108bo26bo297b$23b2ob2o135bo4bo292b$24b2o5b2ob3o85b4o5b\n        2o25bo4b5o293b$30bo5b2o84bo3bo3b2ob2o4b2o17bobo300b$29b2o7bo10bo72bo8b\n        4o3b4o16b2o301b$30bo5b2o9bo2bo72bo2bo5b2o3b2ob2o9bo309b$24b2o5b2ob3o\n        10b2o89b2o11bo11b2o296b$9bo2bo5b2o3b2ob2o116bobo4b2o2bo7b2o296b$8bo8b\n        4o3b4o115b2o2bo7bo18b2o285b$8bo3bo3b2ob2o4b2o16b2o99bobo4b2o2bo17b2ob\n        3o282b$8b4o5b2o24bobo3b5o84b2o11bo22b5o282b$43bo5bo4bo82b2ob2o9bo23b3o\n        283b$49bo88b4o319b$50bo3bo21b2o61b2o320b$19b2o17b2o12bo22b2ob4o73b4o\n        302b$10b3o7b2o16bobo26b2o7b6o73bo3bo14b2o285b$10bo6bo2bo17bo27b2ob2o6b\n        4o74bo19b2o284b$10bobo6bo34b2o11b4o85bo17bo286b$11b2o3b2o34bo15b2o88b\n        2o301b$33b2o16bo6bo103b3o296b$33bo17bo8bo94b2o3b2o3bo295b$9bo2bo20bo\n        17b8obo93b2ob3obo2bo296b$8bo22b2o23b2o97b9o108bobo10bo175b$8bo3bo143b\n        4o112b2o9b2o176b$8b4o13b4o118bo22b4o99bo10b2o175b$25bo3bo22b2o94b2o20b\n        o3bo286b$25bo25b2ob2o91b2o21bo8b6o276b$26bo2bo22b4o115bo2bo4bo5bo275b$\n        35bo2bo14b2o124bo281b$34bo28b2o115bo4bo275b$34bo3bo7bo15b2o118b2o277b$\n        34b4o4bo3b3o15bo396b$40b2o5b2o412b$40b3o6bo8bo402b$40b2o5b2o9b2o401b$\n        34b4o4bo3b3o9b2o401b$28bo2bo2bo3bo7bo414b$19b2o6bo6bo426b$18b2ob2o4bo\n        3bo3bo2bo22b3o397b$19b4o4b4o22b2o5b5o396b$20b2o30b2o5b2ob3o396b$54bo5b\n        2o399b$27bo433b$22b3o3bo78b2o352b$21b3obo3bo18b2o56bobo352b$20b2o6bo\n        18b2o59bo156bo195b$21bob5o14bo6bo215bobo193b$22b4o10bo6bo75bo21bo123b\n        2o194b$24bo11bo3b2obo74b2o22bo131bo186b$40b3o75bobo19b3o131bobo184b$\n        41bo10b3o219b2o185b$19b2o30b5o405b$18b2ob2o14b2o11b2ob3o405b$19b4o13b\n        4o11b2o408b$20b2o13b2ob2o421b$36b2o17b2o404b$54b3o31b4o369b$55b2o2b2o\n        26b9o365b$59b2o25b2ob3obo2bo364b$50b2o3bo31b2o3b2o3bo363b$49b2ob4obo\n        36b3o364b$50b7o33b2o369b$51b2o35bo15bo356b$87bo15bobo355b$37b4o46bo3bo\n        13bo355b$36b7o44b4o13bo356b$35b2ob3ob3o416b$36b2o3b2obo416b$69b4o388b$\n        39b2o28bo3bo387b$37bo31bo7bo383b$36bo33bo2bo2b7o378b$36bo3bo34b2ob3o2b\n        o10bo366b$36b4o30bo2bo2b7o9b3o366b$49bo19bo7bo15bobo365b$48b2o5b2o12bo\n        3bo387b$18b4o26bobo3b4o4b4o3b4o388b$18bo3bo10bo19b2ob2o4bo3bo22bo371b$\n        18bo7b2o4bobo19b2o6bo25b2o5b2o364b$19bo2bo2b4o3bo2b2o26bo2bo21bobo3b2o\n        b3o361b$24b2o3bo5bob2o56b5o361b$19bo2bo2b4o3bo2b2o59b3o362b$18bo7b2o4b\n        obo29b2o18bo247bobo10bo115b$4b2o12bo3bo10bo22b2o7bo17b2o247b2o9b2o116b\n        $3b4o4b4o3b4o17bo15b2o5bo2bo17bobo241bo5bo10b2o115b$2b2ob2o4bo3bo22b2o\n        16b2o4b3o263b2o131b$3b2o6bo26bobo3b2o11bo3b2o15bo248b2o132b$12bo2bo27b\n        2ob3o29bo382b$44b5o27bobo382b$16b2o16bo10b3o7b2o20bo383b$6b2o8b2o15b2o\n        19b4o18b2o383b$5bo2bo5bo3bo14bobo17b2ob2o403b$4b2o2bo4bo3bo36b2o15b2o\n        388b$5b2o2bo2bo4bo52b2ob2o386b$6b4o3bobo13bo41b4o210bobo173b$28b2o42b\n        2o212b2o173b$28bobo255bo174b$4b2o335b2o118b$3b4o334bobo117b$2b2ob2o63b\n        2o269bo119b$3b2o15b2o32b2o13b2ob2o387b$19b2ob2o29b4o13b4o387b$20b4o28b\n        2ob2o14b2o388b$21b2o30b2o406b2$325bo135b$67b2o4bo251bobo133b$56b2o9b2o\n        3b3o7bo38b2o198bo3b2o134b$55bo2bo12b2ob2o4b2o23b2o13b2ob2o197bo11bo\n        126b$54b2o2bo11b3ob3o4b2o21b4o13b4o195b3o11bobo124b$55b2o2bo11b2ob3o\n        26b2ob2o14b2o210b2o125b$56b4o12bobo29b2o355b$87bo373b$85b2o7b2o365b$\n        54b2o30b2o5b2ob3o17b2o14bo328b$53b4o4b4o29b5o16bo2bo11b2o329b$52b2ob2o\n        4bo3bo3bo2bo22b3o8b2o13b3o7b2o328b$53b2o6bo6bo23bo12b2o5bo8bo2bo336b$\n        62bo2bo2bo3bo11b2o4b2o14b2o4bo3bo3b2ob2o336b$68b4o11bo7b2o14bo3bo4bo\n        20bo323b$74b3o2b2o7bo25bo20b2o324b$74b3o2b2o8bo46b2o7b2o314b$74b3o2b2o\n        7bo8bo7b2o37b2ob3o311b$68b4o11bo11b2o7b4o4b4o29b5o133b2o38b2o136b$68bo\n        3bo11b2o10b2o5b2ob2o4bo3bo3bo2bo18bo3b3o135b2o38b2o135b$68bo35b2o6bo6b\n        o20b2o141bo39bo137b$69bo2bo40bo2bo2bo3bo7bo9b2o318b$19b2o66bo2bo28b4o\n        4bo3b3o255b3o69b$18b4o64bo38b2o5b2o255bo71b$17b2ob2o64bo3bo34b3o6bo\n        255bo70b$b2o15b2o66b4o35b2o5b2o327b$2ob2o92bo21b4o4bo3b3o321b2o4b$b4o\n        90b2obo20bo3bo7bo190b3o129b2ob4o$2b2o83b3o10bo18bo202bo132b6o$26bobo\n        57b5o9bo19bo2bo28bo131bo38bo132b4ob$26b2o42b2o13b2ob4o5bo2bo37bo2bo8b\n        2o132b2o61b2o112b$4b4o3bobo13bo41b4o13b2o5b2o3bo38bo13b2o130bobo61bobo\n        111b$3b2o2bo2bo4bo52b2ob2o39bo24bo3bo205bo113b$2b2o2bo4bo3bo36b2o15b2o\n        39b2o25b4o320b$3bo2bo5bo3bo14bobo17b2ob2o50bo4b2o37bo310b$4b2o8b2o15b\n        2o19b4o18b2o24b2o4bo43bo243b5o62b$14b2o16bo10b3o7b2o20bo23b2ob2o2b2o\n        30b3o3bo249bo4bo61b$42b5o27bobo23b4ob3o29b5o2bo7bo241bo66b$10bo2bo27b\n        2ob3o29bo24b4o3bob2o24b2ob4obo7bo242bo3bo61b$b2o6bo26bobo3b2o11bo3b2o\n        15bo28bob5o25b2o258bo63b$2ob2o4bo3bo22b2o16b2o4b3o41b2ob2o352b$b4o4b4o\n        3b4o17bo15b2o5bo2bo17bobo22bo354b$2b2o12bo3bo10bo22b2o7bo17b2o19b2ob2o\n        354b$16bo7b2o4bobo29b2o18bo18b5o355b$17bo2bo2b4o3bo2b2o59b3o3b2ob3o\n        355b$22b2o3bo5bob2o56b5o3b2o358b$17bo2bo2b4o3bo2b2o26bo2bo21bobo3b2ob\n        3o363b$16bo7b2o4bobo19b2o6bo25b2o5b2o366b$16bo3bo10bo19b2ob2o4bo3bo22b\n        o373b$16b4o26bobo3b4o4b4o3b4o390b$46b2o5b2o12bo3bo389b$47bo19bo7bo15bo\n        bo367b$34b4o30bo2bo2b7o9b3o188b2o178b$34bo3bo34b2ob3o2bo10bo188bobo\n        177b$34bo33bo2bo2b7o200bo179b$35bo31bo7bo385b$37b2o28bo3bo389b$67b4o\n        390b$34b2o3b2obo418b$33b2ob3ob3o418b$34b7o44b4o13bo358b$35b4o46bo3bo\n        13bo357b$85bo15bobo357b$49b2o35bo15bo358b$48b7o33b2o371b$47b2ob4obo36b\n        3o366b$48b2o3bo31b2o3b2o3bo105b2o258b$57b2o25b2ob3obo2bo104bo4bo256b$\n        53b2o2b2o26b9o104bo262b$52b3o31b4o100bo2bo4bo5bo256b$53b2o134bo8b6o\n        257b$40bo2bo145bo3bo267b$39bo9b2o138b4o268b$39bo3bo4b2ob3o121b4o282b$\n        22b4o13b4o6b5o120b7o4b2o274b$22bo3bo23b3o120b2ob3ob2o2bobo274b$22bo93b\n        obo55b2o3b2o2bo2b2o273b$23bo2bo89b2o65bo2bo274b$43b3o71bo25b2o32b2o4bo\n        bo275b$27bo10bobobo3bo97b2o29bo8bo276b$25b3o10bo7bo59bo36bo30bo14b2o\n        270b$24bo3bo15b2o5bo52bobo67bo3bo10bobo269b$24bo4b3o19bobo51b2o67b4o\n        11bo139b3o129b$24b2obob3o8bo10b2o105b2o169bo131b$26bo3b2o34bo90b4o169b\n        o130b$27bobo34bo3bo87b2ob2o9bo23b3o264b$56bo6bo93b2o11bo22b5o263b$56bo\n        bo4bo4bo94bobo4b2o2bo17b2ob3o64b3o196b$22b4o5b2o23b2o5b5o94b2o2bo7bo\n        18b2o67bo198b$22bo3bo3b2ob2o4b2o122bobo4b2o2bo88bo197b$22bo8b4o3b4o\n        115b2o11bo8b2o106b2o172b$23bo2bo5b2o3b2ob2o19bo80bo2bo5b2o3b2ob2o9bo8b\n        obo105bobo171b$38b2o5b2ob3o12bo77bo8b4o3b4o18bo107bo173b$44bo5b2o8bobo\n        78bo3bo3b2ob2o4b2o301b$43b2o7bo8bo79b4o5b2o30b5o274b$44bo5b2o122b2o6bo\n        4bo273b$38b2o5b2ob3o15bo107bobo5bo56bo221b$37b2ob2o24bobo92bo12bo8bo3b\n        o42b6obo3bo219b$38b4o24b2o77b2o13bo2bo21bo32b2o10bo5bo3b3o218b$39b2o\n        102b2ob2o11bo3bo53b2ob2o8bo5bo5bo218b$55b4o84bo2bo12bo3bo5b2o47b4o9bo\n        3bo3b2obo218b$55bo3bo83bo2bo12bo3bo5bobo47b2o12bo5b3o219b$55bo88b2o9b\n        2o3bobo6bo62b2o227b$56bo98b2o4bo69b4o226b$58b2o170b2ob2o226b$142bo2bo\n        85b2o228b$55b2o3b2obo77bo319b$54b2ob3ob3o77bo3bo315b$55b7o79b4o13b4o\n        51b2o246b$56b4o98bo3bo49b2ob2o8bo235b$70b4o84bo54b4o3bo4bobo233b$70bo\n        3bo84bo2bo51b2o3bo5bo2bo232b$70bo8b6o133bo2bo6bo232b$71bo2bo4bo5bo128b\n        2o3bo5bo2bo8bo223b$79bo133b4o3bo4bobo9b2o222b$80bo4bo126b2ob2o8bo235b$\n        82b2o113b4o5b2o5b2o26bo219b$197bo3bo3b2ob2o22b3o4bo3bo217b$197bo8b4o\n        22bo5bo222b$198bo2bo5b2o24bo4bo4bo217b$238b5o218b$210bo250b$200b2o8b2o\n        15b3o231b$199bo2bo9bo14bo233b$199bo2bo4b5o16bo232b$199b2ob2o3b4o250b$\n        201b2o4bo253b$222b3o236b$222bo238b$223bo237b$197b4o260b$197bo3bo13bo2b\n        o6b2o234b$197bo16bo8bo237b$198bo2bo12bo3bo3bo6b2o3b2o225b$214b4o4bo7bo\n        2bo227b$222b12ob2o224b$227b2o2b2ob3o224b$232bobo226b$233bo227b$223b2o\n        236b$222b2ob2o234b$223b4o234b$224b2o43b3o189b$206b2o61bo191b$205b4o61b\n        o190b$204b2ob2o252b$205b2o5b2ob3o243b$211bo5b2o242b$210b2o7bo241b$211b\n        o5b2o242b$205b2o5b2ob3o9b2o232b$190bo2bo5b2o3b2ob2o18bobo231b$189bo8b\n        4o3b4o18bo233b$189bo3bo3b2ob2o4b2o253b$189b4o5b2o30b5o226b$222b2o6bo4b\n        o225b$222bobo5bo230b$209bo12bo8bo3bo225b$193b2o13bo2bo21bo227b$191b2ob\n        2o11bo3bo249b$191bo2bo12bo3bo5b2o242b$191bo2bo12bo3bo5bobo241b$192b2o\n        9b2o3bobo6bo243b$203b2o4bo24bo226b$225b6obo3bo224b$190bo2bo31bo5bo3b3o\n        223b$189bo35bo5bo5bo223b$189bo3bo32bo3bo3b2obo223b$189b4o13b4o18bo5b3o\n        224b$206bo3bo16b2o232b$206bo19b4o231b$207bo2bo14b2ob2o231b$226b2o11b3o\n        219b$239bo221b$240bo220b$208b2o251b$207b2ob2o8bo240b$208b4o3bo4bobo\n        238b$209b2o3bo5bo2bo237b$213bo2bo6bo237b$209b2o3bo5bo2bo237b$208b4o3bo\n        4bobo238b$207b2ob2o8bo8b3o229b$192b4o5b2o5b2o19bo6bo224b$192bo3bo3b2ob\n        2o25bo3bo3bo222b$192bo8b4o28bo227b$193bo2bo5b2o29bo4bo222b$224b3o6b5o\n        223b$224bo236b$195b2o7bo20bo235b$194bobo3b2o7b5o247b$194bo18bo247b$\n        194b3o13b3o6b3o239b$205b2o4bo7bo241b$205b2o13bo240b3$192b4o265b$192bo\n        3bo13bo2bo247b$192bo16bo251b$193bo2bo12bo3bo247b$209b4o!`,\n        group: patternGroups.puffer\n    },\n    'gosper-glider-gun': {\n        name: 'Планерное ружьё Госпера',\n        code: `24bo11b$22bobo11b$12b2o6b2o12b2o$11bo3bo4b2o12b2o$2o8bo5bo3b2o14b$2o8b\n        o3bob2o4bobo11b$10bo5bo7bo11b$11bo3bo20b$12b2o!`,\n        group: patternGroups.gun\n    },\n    'simkin-glider-gun': {\n        name: 'Планерное ружьё Симкина',\n        code: `2o5b2o$2o5b2o2$4b2o$4b2o5$22b2ob2o$21bo5bo$21bo6bo2b2o$21b3o3bo3b2o$\n        26bo4$20b2o$20bo$21b3o$23bo!`,\n        group: patternGroups.gun\n    },\n    'ak-94': {\n        name: 'AK-94',\n        code: `7bo7bo7b2o$7b3o5b3o5b2o$10bo7bo$9b2o6b2o16b2o$30b2o2bo2bo$30bobo2b2o$\n        33b2o$5bo28bo$5b3o26bob2o$8bo22b2obo2bo$7b2o22b2ob2o3$17bo$2b2ob2o9bob\n        o10b2o$o2bob2o8bo3bo9bo$2obo11bo3bo10b3o$3bo11bo3bo12bo$3b2o11bobo$b2o\n        2bobo9bo$o2bo2b2o$b2o16b2o$19bo$13b2o5b3o$13b2o7bo!`,\n        group: patternGroups.gun\n    },\n    'slide-gun': {\n        name: 'Скользящее ружьё',\n        code: `56b2o51b$56b2o51b2$78bo30b$78bobo28b$81b2o6b2o18b$38b2o27b2o12b2o4bo3b\n        o17b$38b2o16b3o8b2o12b2o3bo5bo8b2o6b$78bobo4b2obo3bo8b2o6b$56bobo19bo\n        7bo5bo16b$55b5o27bo3bo17b$54b2o3b2o4b2o22b2o18b$54b2o3b2o3bo2bo11bo29b\n        $64bo12b2o30b$64bo13b2o29b$64bob2o41b$66b2o41b2$83b2o24b$59b2o4b2o15b\n        2o10bobo12b$59bo5b2o17bo8bo2bo12b$60b3o16b2o11b2o10b2o3b$62bo16bobo8b\n        2o3bo8b2o3b$74b2o6bo9b2o5b2o8b$73bo2bo2bo2bo10bo2bo4bo7b$73b3o6bo11bob\n        o12b$46b3o22b3o5bobo27b$48bo15bo5bobo6b2o28b$47bo14b2o6bo38b$63b2o4b2o\n        38b$55bo53b$35b2o17bobo52b$35bo18b2obo14b2o35b$24bo8bobo18b2ob2o14bo\n        35b$24b4o5b2o19b2obo15bobo10bo22b$8bo16b4o15b2o8bobo4b2o11b2o9b4o20b$\n        7bobo5b2o8bo2bo14bobo9bo5bobo7bo12b2ob4o5b2o11b$5b2o3bo14b4o14bo19bo6b\n        2o11b3ob2o3bo3bo2bo9b$2o3b2o3bo4bobob2o3b4o14b2o19b2o5bobo11b2ob2o3bo\n        7bo8b$2o3b2o3bo5b2o3bo2bo60b5o3bo6bo6b2o$7bobo10bo18b2o45bo3b3o7bo6b2o\n        $8bo8bo2bo10b3o4bobo27b2o26bo2bo9b$33bo3b3o28bo2bo24b2o11b$32bo4b2o70b\n        $40b2o26bo2bo12bo24b$27bo11b3o25bo2bo11b2o25b$28bo38bobo12b3o24b$28bo\n        39bo11b3o26b$24bo2bo11b2o39b2o27b$6bo5b2o9bo15b2o27b2o39b$4bo3bo3b3o\n        10bo42b2o16b2o9bo11b$8bo5b2obo11bo55b4o7bobo10b$3bo5bo4bo2bo10b2o50bob\n        o2bo2b3o5b2obo9b$3b2o9b2obo9b2o4b2o2b2o40bo2bo2b2o9b2ob2o3b2o3b$12b3o\n        11b3o4b2o2b2o31b2o6b2o9bo6b2obo4b2o3b$12b2o13b2o4b2o35b2o4b2o3bo8bo5bo\n        bo10b$28b2o48b2o10bo6bo11b$29bo49bo2bo26b$80bobo!`,\n        group: patternGroups.gun\n    },\n    block: {\n        name: 'Блок, 1',\n        code: `2o$2o!`,\n        group: patternGroups.oscillator\n    },\n    blinker: {\n        name: 'Мигалка, 2',\n        code: `3o!`,\n        group: patternGroups.oscillator\n    },\n    'figure-8': {\n        name: 'Фигура 8, 8',\n        code: `2o4b$2obo2b$4bob$bo4b$2bob2o$4b2o!`,\n        group: patternGroups.oscillator\n    },\n    '43P18': {\n        name: '43P18, 18',\n        code: `4bo$4obo$3obobo$5bobo$6bo$5b2o$5b2o3bo$5b2o2bobob2o$13b2o3$7bo2bo$7bo$\n        6bo4bo$5bobo2b2o$3b2obo3$3bo2bo$5b2o!`,\n        group: patternGroups.oscillator\n    },\n    beluchenko: {\n        name: 'Осциллятор Белученко, 37',\n        code: `11b2o11b2o11b$11b2o11b2o11b3$6bo23bo6b$5bobo5bo9bo5bobo5b$4bo2bo5bob2o\n        3b2obo5bo2bo4b$5b2o10bobo10b2o5b$15bobobobo15b$16bo3bo16b2$2o33b2o$2o\n        33b2o$5b2o23b2o5b2$6bobo19bobo6b$6bo2bo17bo2bo6b$7b2o19b2o7b2$7b2o19b\n        2o7b$6bo2bo17bo2bo6b$6bobo19bobo6b2$5b2o23b2o5b$2o33b2o$2o33b2o2$16bo\n        3bo16b$15bobobobo15b$5b2o10bobo10b2o5b$4bo2bo5bob2o3b2obo5bo2bo4b$5bob\n        o5bo9bo5bobo5b$6bo23bo6b3$11b2o11b2o11b$11b2o11b2o!`,\n        group: patternGroups.oscillator\n    },\n    '60P312': {\n        name: '60P312, 312',\n        code: `20b2o$20b2o4$9b2o$8bo2bo10b2o$9b2o11bo$22bo12bo$23bo10bobo$34bobo$35bo\n        7$32bo2bo$33b3o$2o38b2o$2o38b2o$6b3o$6bo2bo7$6bo$5bobo$5bobo10bo$6bo\n        12bo$19bo11b2o$18b2o10bo2bo$31b2o4$20b2o$20b2o!`,\n        group: patternGroups.oscillator\n    }\n};\n\nconst cache = {};\nfunction getDataFromRLE(RLEString) {\n    if (RLEString in cache) {\n        return cache[RLEString];\n    }\n    const s = RLEString.replace(/\\s|\\n/g, '').split('!')[0];\n    const rows = s.split('$');\n    const result = [];\n    let j = 0; // номер строки\n    let maxI = 0;\n    for (const row of rows) {\n        const parts = row.match(/\\d*[bo]/g);\n        let i = 0; // номер столбца\n        for (const part of parts) {\n            // 5bobo10bo -> 5, 1, 1, 1, 10, 1\n            const l = part.length === 1 ? 1 : Number(part.slice(0, -1));\n            if (part.endsWith('o')) {\n                // живые клетки записываем явно\n                const end = i + l;\n                while (i < end) {\n                    result.push([j, i]);\n                    i++;\n                }\n            } else {\n                // мёртвые пропускаем\n                i += l;\n            }\n        }\n        if (i > maxI) {\n            maxI = i;\n        }\n        const linesCount = row.match(/\\d+$/);\n        if (linesCount) {\n            // пропускаем пустые строки\n            j += Number(linesCount[0]);\n        } else {\n            j++;\n        }\n    }\n    const data = {array: result, width: maxI, height: j}\n    cache[RLEString] = data;\n    return data;\n}\n\n\nlet gameTimeout;\n\nconst Game = Component.Game(({\n    props,\n    state,\n    hooks\n}) => {\n    const {\n        H = 500, W = 1000\n    } = props();\n    state.init({\n        i: 0,\n        size: 0,\n        stop: true,\n        H,\n        W,\n        paint: false,\n        rule: {\n            new: {\n                2: true,\n                3: true\n            },\n            old: {\n                3: true\n            }\n        },\n        custom: false,\n        pattern: '3-engine-cordership-rake'\n    });\n\n    let canvas, img_data, data, ctx, fieldState, fieldStateNext;\n\n\n    hooks.didMount(() => {\n        const {\n            H,\n            W,\n            pattern\n        } = state();\n\n        if (gameTimeout) {\n            window.clearTimeout(gameTimeout);\n            gameTimeout = null;\n        }\n\n        fieldState = new Array(H * W);\n        fieldStateNext = new Array(H * W);\n        for (let i = 0; i < H * W; i++) {\n            fieldState[i] = false;\n            fieldStateNext[i] = false;\n        }\n\n        const startData = getDataFromRLE(patterns[pattern].code);\n        set_life(startData.array, startData.height, startData.width);\n\n        canvas = document.getElementById('field');\n        ctx = canvas.getContext('2d', {\n            alpha: false\n        });\n        img_data = ctx.getImageData(0, 0, W, H);\n        data = img_data.data;\n        for (let k = 0; k < H * W * 4; k++) {\n            data[k] = (k + 1) % 4 == 0 ? 255 : 0;\n        }\n\n        draw();\n        state.set({size: fieldState.reduce((sum, x) => sum += x)});\n    });\n\n    function paintControl() {\n        const {paint} = state();\n        if (!paint) {\n            canvas.onmousedown = null;\n            canvas.onmouseup = null;\n            canvas.onmouseout = null;\n            canvas.onmousemove = null;\n            return;\n        }\n        canvas.onmousedown = startDrawing;\n        canvas.onmouseup = stopDrawing;\n        canvas.onmouseout = stopDrawing;\n        canvas.onmousemove = draw;\n\n        let context = ctx;\n        let isDrawing;\n\n        context.strokeStyle = 'rgb(255,0,0)';\n        context.lineWidth = 1;\n\n        let pause = false;\n        const {x, y} = canvas.getBoundingClientRect();\n\n        function startDrawing(e) {\n\n            // Начинаем рисовать\n            isDrawing = true;\n            if (!state().stop) {\n                state.set({stop: true});\n                pause = true;\n            }\n\n            // Создаем новый путь (с текущим цветом и толщиной линии)\n            context.beginPath();\n\n            // Нажатием левой кнопки мыши помещаем \"кисть\" на холст\n            context.moveTo(e.clientX - x, e.clientY - y);\n        }\n\n\n        function draw(e) {\n            if (isDrawing == true) {\n                // Определяем текущие координаты указателя мыши\n                var xd = e.clientX - x;\n                var yd = e.clientY - y;\n\n                // Рисуем линию до новой координаты\n                context.lineTo(xd, yd);\n                context.stroke();\n            }\n        }\n\n        function stopDrawing() {\n            isDrawing = false;\n\n            const {W, H} = state();\n            img_data = ctx.getImageData(0, 0, W, H);\n            data = img_data.data;\n            for (let k = 0; k < H * W; k++) {\n                fieldState[k] = data[k * 4] === 255;\n            }\n\n            if (pause) {\n                state.set({stop: false, i: 0}, life);\n                pause = false;\n            }\n        }\n    }\n\n\n    function torsum(i, j) {\n        const {\n            H,\n            W\n        } = state();\n        // положение строки над текущей клеткой\n        const i_top_W = (i ? i - 1 : H - 1) * W;\n        // положение строки под текущей клеткой\n        const i_down_W = (H - 1 - i ? i + 1 : 0) * W;\n        // положение строки текущей клетки\n        const i_W = i * W;\n        // столбец слева от текущей клетки\n        const j_l = j ? j - 1 : W - 1;\n        // столбец справа от текущей клетки\n        const j_r = W - 1 - j ? j + 1 : 0;\n        return (\n            +fieldState[i_top_W + j_l] +\n            fieldState[i_top_W + j] +\n            fieldState[i_top_W + j_r] +\n            fieldState[i_W + j_l] +\n            fieldState[i_W + j_r] +\n            fieldState[i_down_W + j_l] +\n            fieldState[i_down_W + j] +\n            fieldState[i_down_W + j_r]\n        );\n    }\n\n    function set_life(array, height, width) {\n        const {W, H} = state();\n        const getMiddle = x => (x - x % 2) / 2;\n        const startX = getMiddle(W - (width || 0));\n        const startY = getMiddle(H - (height || 0));\n        for (const e of array) {\n            const index = (startY + e[0]) * W + startX + e[1];\n            fieldState[index] = true;\n            fieldStateNext[index] = true;\n        }\n        state.set({size: array.length});\n    }\n\n    function clear() {\n        const {W, H} = state();\n        for (let k = 0; k < H * W * 4; k++) {\n            data[k] = (k + 1) % 4 === 0 ? 255 : 0;\n        }\n        for (let k = 0; k < H * W; k++) {\n            fieldState[k] = (data[k * 4] === 255);\n        }\n        ctx.putImageData(img_data, 0, 0);\n        state.set({stop: true, i: 0, size: 0});\n    }\n\n    function draw() {\n        const {H, W} = state();\n        for (let k = 0; k < H * W; k++) {\n            if (+fieldState[k] !== !data[k * 4 + 1]) {\n                data[k * 4] = fieldState[k] ? 255 : 0;\n            }\n        }\n        ctx.putImageData(img_data, 0, 0);\n    }\n\n    function step() {\n        const {rule, H, W} = state();\n        let i, j, k = 0;\n        for (i = 0; i < H; i++) {\n            for (j = 0; j < W; j++) {\n                const sum = torsum(i, j);\n                if (fieldState[k]) {\n                    fieldStateNext[k] = Boolean(rule.new[String(sum)]);\n                } else {\n                    fieldStateNext[k] = Boolean(rule.old[String(sum)]);\n                }\n                k++;\n            }\n        }\n        for (k = 0; k < H * W; k++) {\n            fieldState[k] = fieldStateNext[k];\n        }\n    }\n\n    function one_step() {\n        step();\n        draw();\n        state.set(prevState => ({i: prevState.i + 1}));\n    }\n\n    function life() {\n        const {stop} = state();\n        if (!stop) {\n            one_step();\n            state.set({size: fieldState.reduce((sum, x) => sum += x)});\n            gameTimeout = setTimeout(life, 0);\n        } else if (gameTimeout) {\n            window.clearTimeout(gameTimeout);\n            gameTimeout = null;\n        }\n    }\n\n    function onRuleChange(type, i, e) {\n        const index = String(i);\n        let prevStop;\n        state.set(prev => {\n            prevStop = prev.stop;\n            return {\n                ...prev,\n                stop: true,\n                rule: {\n                    ...prev.rule,\n                    [type]: {\n                        ...prev.rule[type],\n                        [index]: !prev.rule[type][index]\n                    }\n                }\n            };\n        }, () => state.set({stop: prevStop}));\n    }\n\n    function getRuleCaption(type) {\n        const {rule} = state();\n        const result = [];\n        for (const key of Object.keys(rule[type])) {\n            if (rule[type][key]) {\n                result.push(key);\n            }\n        }\n        return result.join('');\n    }\n\n    return () => {\n        const {\n            stop,\n            H,\n            W,\n            i,\n            size,\n            rule,\n            paint,\n            custom,\n            pattern\n        } = state();\n\n        return E.div(\n            Breadcrumbs.items([['Проекты', 'projects'], ['Игра «Жизнь»']]),\n            E.div.class(b())(\n                E.div(\n                    'Начальная конфигурация',\n                    E.br,\n                    E.sup('имеет смысл для классической версии, правила B3/S23'),\n                    E.br,\n                    E.div.style`\n                        margin: 4px 0;\n                        margin-right: 8px;\n                        display: inline-block;\n                    `(\n                        Select.onChange(e => {\n                            const value = e.target.value;\n                            state.set({pattern: value});\n                        })\n                            .values(Object.keys(patterns).map(patternKey => ({\n                                value: patternKey,\n                                title: patterns[patternKey].name,\n                                group: patterns[patternKey].group,\n                                selected: state().pattern === patternKey\n                            })))\n                    ),\n                    Button.onClick(() => {\n                        const {pattern} = state();\n                        const data = getDataFromRLE(patterns[pattern].code);\n                        clear();\n                        set_life(data.array, data.height, data.width);\n                        draw();\n                    })('Установить'),\n                    E.div(\n                        Checkbox\n                            .checked(custom)\n                            .onClick(() => state.set(prev => ({custom: !prev.custom})))\n                            ('код конфигурации'),\n                        E.br,\n                        custom && E.textarea.style`\n                            height: 4em;\n                            min-height: 4em;\n                            max-height: 50vh;\n                            width: ${W}px;\n                            min-width: ${W}px;\n                            max-width: ${W}px;\n                        `(\n                            patterns[state().pattern].code\n                                .replace(/\\s|\\n/g, '')\n                                .split('!')[0]\n                        )\n                    )\n                ),\n                E.div.class(b('actions'))(\n                    Button.onClick(() => {\n                        state.set(prevState => ({\n                            stop: !prevState.stop\n                        }), life);\n                    })(\n                        E.div.title(stop ? 'play' : 'stop').style`\n                            width: 1em;\n                            height: 1em;\n                            margin: 4px 8px;\n                        `(stop ? Icon.Play : Icon.Pause)\n                    ),\n                    Button.disabled(!stop).onClick(() => one_step())(\n                        E.div.title('single step')(\n                            E.div.style`\n                                width: 1em;\n                                height: 1em;\n                                margin: 4px 8px;\n                                margin-right: 2px;\n                                display: inline-block\n                            `(Icon.StepForward),\n                            E.sup('1'),\n                        )\n                    ),\n                    Button.class(b('paint', {active: paint})).onClick(() => {\n                        state.set(prev => ({paint: !prev.paint}), paintControl);\n                    })(\n                        E.div.title('paint').style`\n                            width: 1em;\n                            height: 1em;\n                            margin: 4px 8px;\n                        `(Icon.PencilAlt)\n                    ),\n                    Button.onClick(() => clear())(\n                        E.div.title('clear').style`\n                            width: 1em;\n                            height: 1em;\n                            margin: 4px 8px;\n                        `(Icon.Ban)\n                    ),\n                    E.div.style`\n                        display: inline-grid;\n                        grid-template-columns: repeat(2, auto);\n                        margin-left: 1em; gap: 8px;\n                    `(\n                        E.div`Поколение`,\n                        E.div(E.b(`${i}`)),\n                        E.div`Популяция`,\n                        E.div(E.b(`${size}`)),\n                    ),\n                ),\n                E.br,\n                E.canvas.id('field').width(W).height(H).class(b('canvas', {paint})),\n                E.p(`Текущее правило: B${getRuleCaption('old')}/S${getRuleCaption('new')}`),\n                E.br,\n                E.div(\n                    E.p('Зарождение жизни'),\n                    range(0, 8).map(i =>\n                        Checkbox\n                            .checked(rule.old[`${i}`])\n                            .onChange(onRuleChange.bind(this, 'old', i))\n                        (`${i}`)\n                    )\n                ),\n                E.div(\n                    E.p('Продление жизни'),\n                    range(0, 8).map(i =>\n                        Checkbox\n                            .checked(rule.new[`${i}`])\n                            .onChange(onRuleChange.bind(this, 'new', i))\n                        (`${i}`)\n                    )\n                ),\n                E.br,\n                E.p`\n                    Представлена расширенная версия клеточного автомата ${E.a.href('https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life')('Игра Жизнь')}.\n                    Правила касаются общей суммы клеток в окрестности Мура.\n                    Начальные конфигурации взяты с ${E.a.href('https://www.conwaylife.com/wiki/Main_Page')('тематического вики-сайта')}.\n                    Подробнее о реализации читайте в ${E.a.href('/?/blog/6')('блоге')}.\n                `\n            )\n        );\n    }\n});\n\nexport default Game;\n","import {\n    E,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\nimport {Button} from '../../blocks/index.js';\n\nimport './About.less';\n\nconst b = block('about');\n\nconst about = E.div.class(b())(\n    E.p('Программирую'),\n    E.p(E`Работаю в ${E.a.href('https://yandex.ru')('Яндексе')}`),\n    E.p('Люблю математику'),\n    E.p(E`Мой ${E.a.href('https://github.com/nikalexxx')('Github')}`)\n);\n\nexport default about;\n","import {About, Blog, Colors, Design, GameOfLife, Page404, Physics, Post, Projects, StandardModel, Unicode} from \".\";\n\nimport { Page404Symbol } from \"../utils/router\";\n\nexport const routes = (params) => ({\n    '/': Blog,\n    about: About,\n    design: Design,\n    'design/colors': Colors,\n    // 'my/:state': E.div(\n    //     E.ul(\n    //         E.li`шейдеры gpu для параллельных вычислений`,\n    //         E.li`фракталы`,\n    //         E.li`Комментарии через github api`,\n    //         E.li`Калькулятор`,\n    //         E.li`Построитель графиков`,\n    //         E.li`Схема метро(позже интерактивная)`\n    //     )\n    // ),\n    blog: Blog,\n    'blog/:id': Post.id(params.id),\n    projects: Projects,\n    'projects/unicode': Unicode,\n    'projects/game-of-life': GameOfLife,\n    physics: Physics,\n    'physics/standard-model': StandardModel,\n    [Page404Symbol]: Page404,\n});\n","import './App.less';\n\nimport {\n    Component,\n    E,\n    M,\n    RouteLink,\n    Switch,\n    block,\n    getRouterState,\n    style,\n} from '../../utils/index.js';\n\nimport { Button } from '../../blocks/index.js';\nimport { Icon } from '../../icons/index.js';\nimport { routes } from '../routes';\n\nconst b = block('app');\n\n\nconst Menu = Component.Menu(({ state }) => {\n    const path = () => getRouterState(routes).path;\n    state.init({ i: 0 });\n    window.addEventListener('historyUpdate', () =>\n        state.set((prev) => ({ i: prev.i++ }))\n    );\n    function renderLink(href, title) {\n        const current =\n            (typeof path() === 'string') &&\n            (path().startsWith(href) || (path() === '/' && href === 'blog'));\n        return RouteLink.href(href)(\n            E.div.class(b('menu-link', { current })).onClick(() => {\n                if (document.documentElement.clientWidth < 700) {\n                    document.documentElement.classList.toggle('mobile-visible');\n                }\n            })(title)\n        );\n    }\n    return () =>\n        E.div(\n            renderLink('blog', 'Блог'),\n            renderLink('about', 'Кто я?'),\n            renderLink('projects', 'Проекты'),\n            renderLink('physics', 'Физика'),\n            renderLink('design', 'Дизайн'),\n            // renderLink('my/ok', 'тест'),\n            E.div.class(b('collapse-menu'))(\n                Button.onClick(() => {\n                    document.documentElement.classList.toggle('mobile-visible');\n                })('свернуть меню')\n            )\n        );\n});\n\nconst Header = Component.Header(({ state, hooks }) => {\n    state.init({\n        theme: 'dark',\n    });\n\n    hooks.didMount(() => {\n        const savedTheme = localStorage.getItem('theme');\n        if (savedTheme) {\n            state.set({ theme: savedTheme });\n        }\n        setTheme();\n    });\n\n    function setTheme() {\n        const { theme } = state();\n        localStorage.setItem('theme', theme);\n        const classList = document.body.classList;\n        if (theme === 'light') {\n            classList.add('theme_light');\n        } else {\n            classList.remove('theme_light');\n        }\n        window.dispatchEvent(new CustomEvent('theme', { detail: { theme } }));\n    }\n\n    function toogleTheme() {\n        state.set(\n            (prevState) => ({\n                theme: prevState.theme === 'dark' ? 'light' : 'dark',\n            }),\n            () => setTheme()\n        );\n    }\n\n    function getIcon() {\n        const { theme } = state();\n        return {\n            dark: () => E.div.style('width: 1em; height: 1em;')(Icon.Moon),\n            light: () => E.div.style('width: 1em; height: 1em;')(Icon.Sun),\n        }[theme]();\n    }\n\n    return () =>\n        E.header.class(b('header'))(\n            E.div.class(b('menu-toggle'))(\n                Button.onClick(() => {\n                    document.documentElement.classList.toggle('mobile-visible');\n                })(E.div.style('width: 1em; height: 1em;')(Icon.Bars))\n            ),\n            RouteLink.href('/')(\n                E.h1.style(style({ textAlign: 'center' }))(\n                    'Александр Николаичев'\n                )\n            ),\n            Button.onClick(toogleTheme)(getIcon())\n        );\n});\n\nconst Page = E.div.class(b())(\n    // E.div.class(b('header-menu'))(\n    //     E.div('Alexandr Nikolaichev'),\n    //     E.div.class(b('scroll-top')).onClick(() => window.scrollTo({top: 0}))('▲ ▲ ▲')\n    // ),\n    Header,\n    E.nav.class(b('menu'))(Menu),\n    E.div\n        .class(b('menu-close-area'))\n        .onClick(() =>\n            document.documentElement.classList.toggle('mobile-visible')\n        ),\n    E.main.class(b('content'))(Switch.routes(routes)),\n    E.footer.class(b('footer'))('© 2019-2020 Alexandr Nikolaichev')\n);\n\nexport default Page;\n","        export {default as Breadcrumbs} from './Breadcrumbs/Breadcrumbs.js';\n        export {Page404} from './Page404/Page404';\n    export {default as Post} from './Post/Post.js';\n    export {default as Blog} from './Blog/Blog.js';\n    export {default as Physics} from './Physics/Physics.js';\n    export {default as StandardModel} from './StandardModel/StandardModel.js';\n    export {default as Projects} from './Projects/Projects.js';\n    export {default as Colors} from './Colors/Colors.js';\n    export {default as Unicode} from './Unicode/Unicode.js';\n    export {default as Design} from './Design/Design.js';\n    export {default as GameOfLife} from './GameOfLife/GameOfLife.js';\n    export {default as About} from './About/About.js';\nexport {default as App} from './App/App.js';\n","import './services/syntaxHighlighter';\n\nimport {logAllLevels, setLogger} from './utils/logger.js';\n\nimport {App} from './components/index.js';\nimport {DOM} from './utils/element.js';\n\nsetLogger({\n    component: {\n        props: {\n            [logAllLevels]: true\n        },\n        [logAllLevels]: true\n    }\n});\nsetLogger(false); // for production\n\ndocument.getElementById('root').append(DOM(App));\n\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","var wasm;const __exports = {};\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} regex_source\n* @param {string} text\n* @returns {boolean}\n*/\n__exports. check_regex = function(regex_source, text) {\n    var ptr0 = passStringToWasm0(regex_source, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(text, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.check_regex(ptr0, len0, ptr1, len1);\n    return ret !== 0;\n}\n\n\n\n      function init(wasm_path) {\n          const fetchPromise = fetch(wasm_path);\n          let resultPromise;\n          if (typeof WebAssembly.instantiateStreaming === 'function') {\n              resultPromise = WebAssembly.instantiateStreaming(fetchPromise, { './hello_wasm_bg.js': __exports });\n          } else {\n              resultPromise = fetchPromise\n              .then(response => response.arrayBuffer())\n              .then(buffer => WebAssembly.instantiate(buffer, { './hello_wasm_bg.js': __exports }));\n          }\n          return resultPromise.then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      };\n      function init_node(wasm_path) {\n          const fs = require('fs');\n          return new Promise(function(resolve, reject) {\n              fs.readFile(__dirname + wasm_path, function(err, data) {\n                  if (err) {\n                      reject(err);\n                  } else {\n                      resolve(data.buffer);\n                  }\n              });\n          })\n          .then(data => WebAssembly.instantiate(data, { './hello_wasm_bg': __exports }))\n          .then(({instance}) => {\n              wasm = init.wasm = instance.exports;\n              __exports.wasm = wasm;\n              return;\n          });\n      }\n      const wasm_bindgen = Object.assign(false ? init_node : init, __exports);\n      module.exports = function loadWASMBundle(bundle) {\n            return wasm_bindgen(bundle).then(() => __exports)\n      }\n    "]}