{"version":3,"sources":["utils/bem.js","utils/style.js","utils/symbols.js","utils/clone.js","utils/element.js","utils/css.js","utils/children.js","utils/logger.js","utils/component.js","utils/router.js","utils/custom.js","utils/consoleStyle.js","utils/index.js","components/Breadcrumbs/Breadcrumbs.js","data/blog/index.js","blocks/Button/Button.js","blocks/index.js","utils/book.js","components/Post/Post.js","components/Blog/Blog.js","components/Colors/Colors.js","components/Design/Design.js","components/GameOfLife/GameOfLife.js","components/About/About.js","MyComponent.js","map.js","components/Page/Page.js","components/index.js","index.js"],"names":["block","blockName","String","element","modifiers","mixin","cssStack","elementName","mod","push","value","join","props","cssProps","prop","name","replace","x","toLowerCase","elementSymbol","Symbol","componentSymbol","getClone","cloneNode","Error","nodeType","clone","E","tagName","Object","keys","eventListeners","length","eventName","listeners","listener","addEventListener","Array","from","childNodes","child","cloneChild","append","getElement","namespace","Proxy","strings","list","i","get","target","tag","create","children","document","createElementNS","slice","setAttribute","prepare","node","isArray","map","e","nodes","filter","stableElement","description","apply","thisArg","argArray","SVG","M","getDirPath","fileUrl","URL","pathname","split","sourceUrl","relativePath","type","includes","pathRelative","test","fullPath","Promise","resolve","link","rel","href","head","querySelector","less","script","src","update","window","setTimeout","getChildren","_log","condition","f","console","log","loggerSymbol","logAllLevels","setLogger","settings","getCondition","levels","current","level","createLogProxy","Component","set","state","arg","newObject","assign","getProps","attributes","attr","logAdd","color","backgroundColor","logRemove","getElem","component","fragment","createDocumentFragment","isTypeChanged","newElement","nodeName","componentConstructor","componentName","handlerErrors","makeComponent","componentNameSymbol","didMountEvent","source","dispatchEvent","CustomEvent","detail","willUnmountEvent","getElements","group","replaceWith","remove","groupEnd","changeProps","elementProps","newElementProps","Set","table","oldProp","newProp","removeEventListener","removeAttribute","changeChildren","elementChildLength","newElementChildLength","max","Math","min","diff","newChildNodes","removeChildren","start","end","removeChild","dataset","addChildren","div","handlerIndex","handlers","count","indexes","bump","initState","startState","error","setState","newState","rerender","renderElem","getRenderElem","firstChild","getState","stateClass","init","didMount","firstAppend","elements","mo","MutationObserver","mutations","observer","closest","first","innerHTML","disconnect","observe","childList","subtree","render","callback","onDidMount","event","elem","historyUpdate","pushState","data","title","url","history","replaceState","getRouterState","routes","location","search","params","path","stack","URLSearchParams","param","resultParams","resultPath","pathStack","equal","RouteLink","a","onClick","preventDefault","Switch","getCustom","CustomElement","HTMLElement","attachShadow","mode","slot","customName","customElements","define","Custom","css","text","consoleStyle","textList","args","styles","s","v","local","mix","background","_key","_func","_var","_const","_op","S","key","func","_b","_i","_pre","_h","l","text1","styles1","Breadcrumbs","b","class","items","last","span","style","creationTime","tags","Button","size","button","createBook","to","types","html","V","stringElements","result","brs","match","tail","br","indexOf","subbrs","j","t","code","h","n","p","img","alt","markdown","repeat","browserConsole","Post","id","blog","fetch","then","blob","default","catch","template","iframe","iframeElem","getElementById","height","contentWindow","body","clientHeight","h2","em","Date","toLocaleString","year","month","day","timezone","hour","minute","second","Blog","sort","keyA","keyB","getMs","Number","h3","Colors","colors","getComputedStyle","documentElement","getPropertyValue","trim","rgb","hex","parseInt","contrast","border","colorNode","Design","padding","fontSize","fontWeight","Game","range","H","W","stop","canvas","img_data","ctx","fieldState","fieldStateNext","rule","new","old","torsum","i_top_W","i_down_W","i_W","j_l","j_r","draw","k","putImageData","one_step","step","sum","prevState","life","reduce","startFieldState","set_life","array","getContext","alpha","getImageData","width","input","clear","label","initGame","about","MyComponent","show","visible","ok","Page","About","book","GameOfLife","Menu","renderLink","prev","scrollTo","top","header","h1","textAlign","nav","main","footer"],"mappings":"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","file":"index.1.0.0.js","sourceRoot":"..","sourcesContent":["const block = blockName => {\n    const block = String(blockName);\n    return function(element, modifiers, mixin) {\n        const cssStack = [];\n        const elementName = block + (element ? `__${element}` : '');\n        cssStack.push(elementName);\n        for (const mod in modifiers) {\n            const value = modifiers[mod];\n            if (typeof value === 'boolean') {\n                if (value) {\n                    cssStack.push(`${elementName}_${mod}`);\n                }\n            } else {\n                cssStack.push(`${elementName}_${mod}_${value}`);\n            }\n        }\n        return cssStack.join(' ');\n    };\n}\n\nexport default block;\n","export default function (props = {}) {\n    const cssProps = [];\n    for (const prop in props) {\n        const name = prop.replace(/[A-Z]/g, x => '-' + x.toLowerCase());\n        cssProps.push(`${name}: ${props[prop]};`);\n    }\n    return cssProps.join(' ');\n}\n","export const elementSymbol = Symbol('element');\nexport const componentSymbol = Symbol('component');\n","import {elementSymbol, componentSymbol} from './symbols.js';\nimport {E} from './element.js';\n\nexport const getClone = element => {\n    // console.log('clone', element);\n    if (!element.cloneNode) {\n        throw new Error('clone не удался')\n        return element;\n    }\n    // console.log({element});\n    if (element.nodeType === 3) {\n        return element.cloneNode(false);\n    }\n    let clone = E[element.tagName.toLowerCase()];\n    if (elementSymbol in element) {\n        clone = clone[Symbol('props')](element[elementSymbol].props)();\n        // clone[elementSymbol] = element[elementSymbol];\n    } else {\n        clone = clone();\n    }\n    if (componentSymbol in element) {\n        clone[componentSymbol] = element[componentSymbol];\n        clone[componentSymbol].element = clone;\n        // element[componentSymbol].element = clone;\n    }\n    if (element[elementSymbol] && Object.keys(element[elementSymbol].eventListeners).length > 0) {\n        for (const eventName of Object.keys(element[elementSymbol].eventListeners)) {\n            const listeners = element[elementSymbol].eventListeners[eventName];\n            for (const listener of listeners) {\n                clone.addEventListener(eventName, listener, false);\n            }\n        }\n    }\n    for (const child of Array.from(element.childNodes)) {\n        const cloneChild = getClone(child);\n        clone.append(cloneChild);\n    }\n    return clone;\n}\n","import {getClone} from './clone.js';\n\nimport {elementSymbol} from './symbols.js';\n\nconst getElement = namespace => new Proxy((strings, ...elements) => {\n    const list = [strings[0]];\n    for (let i = 1; i < strings.length; i++) {\n        list.push(elements[i-1], strings[i]);\n    }\n    return list;\n}, {\n    get(target, tag) {\n        const create = (tagName = 'div', props = {}, children = []) => {\n            const element = document.createElementNS(namespace, tagName);\n            element[elementSymbol] = {eventListeners: {}, props};\n            // console.log(props);\n            for (const prop in props) {\n                if (prop.length > 2 && prop.slice(0, 2) === 'on') {\n                    const eventName = prop[2].toLowerCase() + prop.slice(3);\n                    const listener = props[prop];\n                    element.addEventListener(eventName, listener, false);\n                    if (eventName in element[elementSymbol].eventListeners) {\n                        element[elementSymbol].eventListeners[eventName].push(listener);\n                    } else {\n                        element[elementSymbol].eventListeners[eventName] = [listener];\n                    }\n                } else {\n                    element.setAttribute(prop, props[prop]);\n                }\n            }\n            const prepare = node => {\n                if (Array.isArray(node)) {\n                    return node.map(e => prepare(e));\n                } else if (typeof node === 'function') {\n                    return prepare(node());\n                } else {\n                    return node;\n                }\n            }\n            const nodes = [];\n            for (let node of children.filter(e => e)) {\n                node = prepare(node);\n                if (Array.isArray(node)) {\n                    nodes.push(...node);\n                } else {\n                    nodes.push(node);\n                }\n            }\n            if (nodes.length) {\n                element.append(...nodes.filter(e => e));\n            }\n            return element;\n        }\n        function stableElement(name, props) {\n            return new Proxy((...children) => create(name, {}, children), {\n                get(target, prop) {\n                    return function (value) {\n                        if (typeof prop === 'symbol' && prop.description === 'props') {\n                            return stableElement(name, {...props, ...value});\n                        }\n                        return stableElement(name, {...props, [prop]: value});\n                    }\n                },\n                apply(target, thisArg, argArray) {\n                    return create(name, props, argArray);\n                }\n            })\n        }\n        return stableElement(tag, {})\n    }\n});\n\nexport const E = getElement('http://www.w3.org/1999/xhtml');\nexport const SVG = getElement('http://www.w3.org/2000/svg');\nexport const M = getElement('http://www.w3.org/1998/Math/MathML');\n","import {E} from './element.js';\nconst getDirPath = fileUrl => (new URL(fileUrl)).pathname.split('/').slice(0, -1).join('/');\nexport default function(sourceUrl, relativePath) {\n    const type = relativePath.split('.').slice(-1)[0];\n    if (!['css', 'less'].includes(type)) {\n        throw new Error(`Import file type is ${type}, but 'css' or 'less' types are available only.`);\n    }\n    const pathRelative = /^\\.\\.?\\//.test(relativePath);\n    const sourcePath = getDirPath(sourceUrl).split('/').slice(1).join('/');\n    const fullPath = sourcePath + (pathRelative ? relativePath.replace(/^\\.\\.?/, '') : '/' + relativePath);\n\n    return new Promise(resolve => {\n        const link = E.link\n            .rel(`stylesheet${type === 'less' ? '/less' : ''}`)\n            .type('text/css')\n            .href(fullPath)();\n        if (type === 'less') {\n            if (!document.head.querySelector('script[src=\"less.js\"]')) {\n                const less = E.script.src('less.js')();\n                document.head.append(less);\n            }\n            document.head.append(link);\n            function update() {\n                const style = document.head.querySelector(`style[id$=${fullPath.split('.')[0].replace(/\\//g, '-')}]`);\n                if (style) {\n                    window.setTimeout(resolve, 100);\n                } else {\n                    window.setTimeout(update, 10);\n                }\n            }\n            update();\n        } else {\n            document.head.append(link);\n            link.addEventListener('load', () => resolve());\n        }\n    });\n}\n","export const getChildren = children => {\n    const nodes = [];\n    for (const node of children) {\n        if (Array.isArray(node)) {\n            nodes.push(...node);\n        } else if ((typeof node) === 'function') {\n            nodes.push(node());\n        } else {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\n","const _log = condition => f => {\n    if (condition) {\n        if (typeof f === 'function') {\n            f();\n        } else {\n            console.log(f);\n        }\n    }\n}\nconst loggerSymbol = Symbol('logger');\nexport const logAllLevels = Symbol('all');\nwindow[loggerSymbol] = {};\n\nexport const setLogger = settings => {\n    window[loggerSymbol] = settings;\n};\n\nfunction getCondition(levels) {\n    let current = window[loggerSymbol];\n    for (const level of levels) {\n        if(current && logAllLevels in current) {\n            return true;\n        }\n        if (!(current && level in current)) {\n            return false;\n        }\n        current = current[level];\n    }\n    return true;\n}\n\nfunction createLogProxy(levels) {\n    return new Proxy(f => _log(getCondition(levels))(f), {\n        get: (target, level) => createLogProxy([...levels, level])\n    });\n}\n\nexport const log = createLogProxy([]);\n\n","import {E} from './element.js';\nimport {getClone} from './clone.js';\nimport {\n    getChildren\n} from './children.js';\nimport style from './style.js';\nimport {log} from './logger.js';\nimport {elementSymbol, componentSymbol} from './symbols.js';\n\nconst set = state => arg => {\n    let newObject;\n    if (typeof arg === 'object') {\n        newObject = arg;\n    } else if (typeof arg === 'function') {\n        newObject = arg(state);\n    }\n    return Object.assign({}, state, newObject);\n}\n\nfunction getProps(element) {\n    if (element.nodeType === 3) { // textNode\n        return {};\n    }\n    const props = {};\n    for (let i = 0; i < element.attributes.length; i++) {\n        const attr = element.attributes[i];\n        props[attr.name] = attr.value;\n    }\n    return props;\n}\n\nfunction logAdd(element) {\n    console.log('%c + ', style({\n        color: 'green',\n        backgroundColor: '#dfd'\n    }), element);\n}\n\nfunction logRemove(element) {\n    console.log('%c - ', style({\n        color: 'red',\n        backgroundColor: '#fdd'\n    }), element);\n}\n\nfunction getElem(component) {\n    if (Array.isArray(component)) {\n        const fragment = document.createDocumentFragment();\n        fragment.append(...component.map(e => getElem(e)));\n        return fragment;\n    }\n    return (typeof component === 'function') ? component() : component;\n}\n\nfunction isTypeChanged(element, newElement) {\n    if (element && !newElement) {\n        return true;\n    }\n    if (element.nodeType !== newElement.nodeType) {\n        return true;\n    }\n    if (element.nodeName !== newElement.nodeName) {\n        return true;\n    }\n    return false;\n}\n\nfunction componentConstructor(componentName) {\n    const handlerErrors = new Proxy({}, {\n        get(target, name) {\n            if (!(name in target)) {\n                target[name] = {};\n            }\n            return target[name];\n        }\n    })\n\n    return function (makeComponent) {\n        const create = (props = {}, children = []) => {\n            // уникальный идентификатор для созданного элемента\n            const componentNameSymbol = Symbol(componentName);\n\n            function didMountEvent(element, source) {\n                // console.group(`didMount[${source}]`);\n                // console.log(element);\n                // console.groupEnd();\n                window.dispatchEvent(new CustomEvent('didMount', {\n                    detail: {\n                        componentNameSymbol: element[componentSymbol].componentNameSymbol\n                    }\n                }));\n            }\n\n            function willUnmountEvent(element, source) {\n                // console.group(`willUnmount[${source}]`);\n                // console.log(element);\n                // console.groupEnd();\n                window.dispatchEvent(new CustomEvent('willUnmount', {\n                    detail: {\n                        componentNameSymbol: element[componentSymbol].componentNameSymbol\n                    }\n                }));\n            }\n\n            // обновление DOM\n            function update(getElements) {\n                const [element, newElement] = getElements();\n                if (!element) {\n                    throw new Error(`Element is ${element}`);\n                }\n                const newElementSource = newElement;\n                const change = isTypeChanged(element, newElement);\n                // console.log('update', {change, element, newElement});\n                if (change) {\n                    log.component(() => console.group('replace'));\n                    log.component(() => logRemove(element));\n                    if (newElement) {\n                        log.component(() => logAdd(newElement));\n                        if (componentSymbol in element) {\n                            willUnmountEvent(element, 'replace');\n                        }\n                        // console.log({element, newElement});\n                        if (componentSymbol in newElement) {\n                            didMountEvent(newElement, 'replace');\n                        }\n                        delete element[elementSymbol];\n                        delete element[componentSymbol];\n                        element.replaceWith(newElement);\n                    } else {\n                        element.remove();\n                    }\n                    log.component(() => console.groupEnd());\n                } else {\n                    if (componentSymbol in newElement) {\n                        // element[componentSymbol].element = element;\n                        // console.log({data: newElement[componentSymbol], element});\n                        newElement[componentSymbol].element = element;\n                        element[componentSymbol] = newElement[componentSymbol];\n                    }\n                    // if (newElement.parentNode) {\n                        // if (componentSymbol in newElement.parentNode) {\n                    //         element.parentNode[componentSymbol] = newElement.parentNode[componentSymbol];\n                    //         element.parentNode[componentSymbol].element = element.parentNode;\n                            // newElement.parentNode[componentSymbol].element = element.parentNode;\n                        // }\n                    //     changeProps(element.parentNode, newElement.parentNode);\n                    // }\n                    changeProps(element, newElement);\n                    changeChildren(element, newElement);\n\n                }\n            }\n\n            function changeProps(element, newElement) {\n                const elementProps = (element[elementSymbol] || {}).props || {};\n                const newElementProps = (newElement[elementSymbol] || {}).props || {};\n                const list = [...new Set([\n                    ...Object.keys(elementProps),\n                    ...Object.keys(newElementProps)\n                ])];\n                // console.log({element, newElement, elementProps: Object.keys(elementProps), newElementProps: Object.keys(newElementProps), list});\n                log.component.props(() => {\n                    const table = {};\n                    for (const prop of list) {\n                        if (elementProps[prop] !== newElementProps[prop]) {\n                            const oldProp = elementProps[prop];\n                            const newProp = newElementProps[prop];\n                            table[prop] = {\n                                oldProp,\n                                newProp\n                            };\n                        }\n                    }\n                    if (Object.keys(table).length) {\n                        console.table(table);\n                    }\n                });\n                log.component.props(() => console.group('props'));\n                for (const prop of list) {\n                    if (prop in elementProps) {\n                        if (prop in newElementProps) {\n                            if (elementProps[prop] !== newElementProps[prop]) {\n                                if (prop.slice(0, 2) === 'on') {\n                                    const eventName = prop[2].toLowerCase() + prop.slice(3);\n                                    element.removeEventListener(eventName, elementProps[prop], false);\n                                    element.addEventListener(eventName, newElementProps[prop], false);\n                                } else {\n                                    element.setAttribute(prop, newElementProps[prop]); // изменение\n                                }\n                                element[elementSymbol].props[prop] = newElement[elementSymbol].props[prop];\n                                log.component.props(() => console.group(prop));\n                                log.component.props(() => {\n                                    logRemove(elementProps[prop]);\n                                    logAdd(newElementProps[prop]);\n                                });\n                                log.component.props(() => console.groupEnd());\n                                if (prop === 'data-component') {\n                                    willUnmountEvent(element, `change prop ${elementProps[prop]}`);\n                                    didMountEvent(element[componentSymbol].element, `change prop ${newElementProps[prop]}`);\n                                }\n                            }\n                        } else {\n                            if (prop.slice(0, 2) === 'on') {\n                                const eventName = prop[2].toLowerCase() + prop.slice(3);\n                                element.removeEventListener(eventName, elementProps[prop], false);\n                                log.component.props(`remove listener for ${eventName}`, elementProps[prop]);\n                            } else {\n                                element.removeAttribute(prop); // удаление\n                            }\n                            log.component.props(() => console.group(prop));\n                            log.component.props(() => {\n                                logRemove(elementProps[prop]);\n                            });\n                            log.component.props(() => console.groupEnd());\n                            delete element[elementSymbol].props[prop];\n                            if (prop === 'data-component') {\n                                willUnmountEvent(element, `remove prop ${elementProps[prop]}`);\n                            }\n                        }\n                    } else {\n                        element[elementSymbol].props[prop] = newElement[elementSymbol].props[prop];\n                        if (prop.slice(0, 2) === 'on') {\n                            const eventName = prop[2].toLowerCase() + prop.slice(3);\n                            element.addEventListener(eventName, newElementProps[prop], false);\n                        } else {\n                            element.setAttribute(prop, newElementProps[prop]); // добавление\n                        }\n                        log.component.props(() => console.group(prop));\n                        log.component.props(() => {\n                            logAdd(newElementProps[prop]);\n                        });\n                        log.component.props(() => console.groupEnd());\n                        if (prop === 'data-component') {\n                            didMountEvent(element[componentSymbol].element, `add prop ${newElementProps[prop]}`);\n                        }\n                    }\n                }\n                log.component.props(() => console.groupEnd());\n            }\n\n            // рекурсивное обновление поддерева\n            function changeChildren(element, newElement) {\n                const elementChildLength = element.childNodes.length;\n                const newElementChildLength = newElement.childNodes.length;\n                const max = Math.max(elementChildLength, newElementChildLength);\n                const min = Math.min(elementChildLength, newElementChildLength);\n                const diff = elementChildLength - newElementChildLength;\n                const newChildNodes = Array.from(newElement.childNodes);\n                if (max > 0) {\n                    for (let i = 0; i < min; i++) {\n                        update(() => [element.childNodes[i], newChildNodes[i]]);\n                    }\n                    if (diff > 0) {\n                        removeChildren(element, min, max);\n                    } else {\n                        addChildren(element, newChildNodes, min, max);\n                    }\n                } else if (element.nodeType === 3) {\n                    element.replaceWith(newElement); // заменяем текстовые узлы\n                    log.component(() => {\n                        logRemove(element);\n                        logAdd(newElement);\n                    });\n                }\n            }\n\n            function removeChildren(element, start, end) {\n                const list = [];\n                for (let i = start; i < end; i++) {\n                    list.push(element.childNodes[i]);\n                }\n                log.component(() => console.group('remove'));\n                for (const child of list) {\n                    log.component(() => logRemove(child));\n                    element.removeChild(child);\n                    if (element.dataset.component) {\n                        willUnmountEvent(element, 'remove');\n                    }\n                }\n                log.component(() => console.groupEnd());\n            }\n\n            function addChildren(element, newChildNodes, min, max) {\n                log.component(() => console.group('add'));\n                const list = [];\n                for (let i = min; i < max; i++) {\n                    const node = newChildNodes[i];\n                    list.push(node);\n                    if (node && (node.dataset||{}).component) {\n                        didMountEvent(node, 'add');\n                    }\n                    log.component(() => logAdd(node));\n                }\n                element.append(...list);\n                log.component(() => console.groupEnd());\n            }\n\n            // состояние компонента\n            let state = {};\n\n            // элемент DOM, который будет возвращён\n            // TODO: инлайн компоненты, вложенные в одном узле, у списка это родитель\n            const element = E.div['data-component'](componentName)();\n            element[componentSymbol] = {\n                componentName,\n                componentNameSymbol,\n                props,\n                element\n            };\n\n            // вызванные обработчики\n            let handlerIndex = 0;\n            const handlers = new Proxy({}, {\n                get(target, name) {\n                    if (!(name in target)) {\n                        target[name] = {\n                            count: 0,\n                            indexes: [],\n                        };\n                        target[name].bump = () => {\n                            handlerIndex++;\n                            target[name].count++;\n                            target[name].indexes.push(handlerIndex);\n                        }\n                    }\n                    return target[name];\n                }\n            });\n            // TODO: отслеживать вызовы и гарантировать порядок\n\n            function initState(startState) {\n                if (handlers.initState.count !== 0) {\n                    if (!handlerErrors.initState.count) {\n                        handlerErrors.initState.count = 1;\n                        console.error(new Error('Повторный вызов инициализации состояния'));\n                    }\n                }\n                handlers.initState.bump();\n                state = startState;\n            }\n\n            function setState(newState) {\n                state = set(state)(newState);\n                rerender();\n            }\n            const getState = () => state;\n\n            const stateClass = () => state;\n            stateClass.set = setState;\n            stateClass.init = initState;\n\n            element[componentNameSymbol] = true;\n\n            const didMount = callback => {\n                function onDidMount(event) {\n                    // console.log('DIDMOUNT', event);\n                    if (event.detail.componentNameSymbol === componentNameSymbol) {\n                        log.component(() => {\n                            // console.group('didMount -- event!!!');\n                            // console.log(element[componentSymbol].element);\n                            // console.log(componentName);\n                            // console.log(event);\n                            // console.log(callback);\n                            // console.groupEnd();\n                        });\n                        callback();\n                        // window.removeEventListener(didMountListener);\n                    }\n                }\n\n                handlers.didMount.bump();\n                const didMountListener = window.addEventListener('didMount', onDidMount, false);\n                element[elementSymbol].props.onDidMount = onDidMount;\n                element[elementSymbol].eventListeners.didMount = [onDidMount];\n            }\n\n            let firstAppend = true;\n\n            const storage = {};\n            const elements = [];\n\n            const mo = new MutationObserver(function (mutations, observer) {\n                // console.info('Observer');\n                // console.log({mutations, observer});\n                // console.log('didMount', firstAppend, componentName, element);\n                // console.log(handlers);\n                if (element[componentSymbol].element.closest('html')) {\n                    // element = false;\n                    // const componentDOMSymbol = Symbol('componentDOMSymbol');\n                    // if(!storage[componentDOMSymbol]) { // первый рендер\n                    //     storage[componentDOMSymbol] = {first: true};\n                    elements[Object.keys(elements).length] = {\n                        first: true,\n                        element: element.innerHTML\n                    };\n                    // console.log(elements);\n                    // }\n                    // if (storage[componentDOMSymbol].first) {\n                    // console.log('есть', element);\n                    // console.log({storage});\n                    // storage[componentDOMSymbol].first = false;\n                    if (firstAppend) {\n                        window.dispatchEvent(new CustomEvent('didMount', {\n                            detail: {\n                                componentNameSymbol: componentNameSymbol\n                            }\n                        }));\n                        firstAppend = false;\n                        // mo.disconnect();\n                    }\n                    // }\n                } else {\n                    // console.log('нет', element);\n                    firstAppend = true;\n                    mo.disconnect();\n                }\n            });\n            mo.observe(document, {\n                attributes: true,\n                childList: true,\n                subtree: true\n            });\n\n\n            const nodes = getChildren(children);\n            props.children = nodes;\n            const render = makeComponent({\n                props,\n                initState,\n                getState,\n                setState,\n                state: stateClass,\n                didMount\n            });\n\n            const getRenderElem = function() {\n                const elem = render();\n                return getClone(getElem(elem));\n            }\n            function rerender() {\n                const renderElem = getRenderElem();\n                // console.log('rerender', componentName, element[componentSymbol].element.firstChild, renderElem);\n\n                // console.log(componentName, {element, child: element[componentSymbol].element.firstChild, render: renderElem});\n                // console.log(componentName, {elem: getRenderElem()});\n                update(() => [element[componentSymbol].element.firstChild, renderElem]);\n            }\n            // element.append(E.p());\n            // update(() => [element[componentSymbol].element.firstChild, getRenderElem()]);\n            // console.log(componentName, {elem: getRenderElem()});\n            element.append(getRenderElem());\n            return element;\n        }\n\n        function stableElement(props) {\n            return new Proxy((...children) => create({}, children), {\n                get(target, prop) {\n                    return function (value) {\n                        // console.log(`added prop ${prop} = ${value}`)\n                        return stableElement({\n                            ...props,\n                            [prop]: value\n                        });\n                    }\n                },\n                apply(target, thisArg, argArray) {\n                    return create(props, argArray);\n                }\n            })\n        }\n        return stableElement({});\n    };\n}\n\nconst Component = new Proxy({}, {\n    get: function (target, componentName) {\n        return componentConstructor(componentName)\n    }\n});\n\nexport default Component;\n","import {\n    E,\n    Component,\n    Custom\n} from './index.js';\n\n\nconst historyUpdate = new CustomEvent('historyUpdate');\n\nfunction pushState(data, title, url) {\n    history.pushState(data, title, url);\n    window.dispatchEvent(historyUpdate);\n}\n\nfunction replaceState(data, title, url) {\n    history.replaceState(data, title, url);\n    window.dispatchEvent(historyUpdate);\n}\n\nwindow.addEventListener('popstate', () => window.dispatchEvent(historyUpdate));\n\nexport const getRouterState = (routes) => {\n    if (!document.location.search) {\n        return {params: {}, path: '/', routes: routes('')}\n    }\n    const params = new URLSearchParams(document.location.search);\n    const stack = [];\n    for (const [param] of params) {\n        if (param[0] === '/') {\n            stack.push(...param.slice(1).split('/'));\n        }\n    }\n    let resultParams = {};\n    let resultPath = null;\n    for (const path in routes({})) {\n        const pathStack = path.split('/');\n        const params = {};\n        let equal = true;\n        for (let i = 0; i < pathStack.length; i++) {\n            if (i === stack.length) {\n                equal = false;\n                break;\n            }\n            const level = pathStack[i];\n            if (level[0] === ':') {\n                params[level.slice(1)] = stack[i];\n            } else if (level !== stack[i]) {\n                equal = false;\n                break;\n            }\n        }\n        if (equal) {\n            resultParams = params;\n            resultPath = path;\n        }\n    }\n    return {params: resultParams, path: resultPath, routes: routes(resultParams)};\n}\n\nexport const RouteLink = Component.RouteLink(({props: {href, children}}) => {\n    return () => {\n        const onLinkClick = (event) => {\n            event.preventDefault();\n            if (href === '/') {\n                pushState({stack: []}, '', '/');\n                return;\n            }\n            if (((window.history.state || {}).stack || []).join('/') === href) {\n                return;\n            }\n            pushState({\n                stack: href.split('/')\n            }, '', '?/' + href);\n        };\n        return E.a.href(href).onClick(onLinkClick)(children);\n    };\n})\n\n\nexport const Switch = Component.Switch(({props, getState, setState, initState}) => {\n    initState(getRouterState(props.routes));\n    window.addEventListener('historyUpdate', function () {\n        setState(getRouterState(props.routes));\n    });\n    return () => {\n        const {path, routes} = getState();\n        return routes[path];\n    }\n});\n","import {E, Component} from './index.js';\n\nlet count  = 0;\nfunction getCustom(name, elements, didMount) {\n    class CustomElement extends HTMLElement {\n        constructor() {\n            super();\n\n            const shadow = this.attachShadow({mode: 'open'});\n            shadow.append(E.slot.name('element-slot')())\n        }\n\n        connectedCallback() {\n            didMount(elements)\n        }\n    }\n    count++;\n    const customName = `custom-${name}-${count}`;\n    customElements.define(customName, CustomElement);\n    return E[customName](\n        E.div.slot('element-slot')(\n            elements\n        )\n    );\n}\n\nexport default Component.Custom(() => {\n    return ({name, children, didMount}) => {\n        return getCustom(name, children, didMount);\n    }\n});\n","export const css = new Proxy({}, {\n    get: (target, name) => text => [`%c${text}%c`, name, '']\n});\n\nexport const color = new Proxy({}, {\n    get: (target, name) => text => css[`color:${name}`](text)\n});\n\n\nexport function consoleStyle(textList, ...args) {\n    const styles = [];\n    const text = [];\n    for (let i = 0; i < textList.length - 1; i++) {\n        const s = textList[i];\n        const v = args[i][0];\n        text.push(s, v);\n        const local = args[i][1];\n        styles.push(...(Array.isArray(local) ? local : [local, args[i][2]]));\n    }\n    text.push(textList[textList.length - 1]);\n    return [text.join(''), styles];\n}\n\nexport const mix = new Proxy({}, {\n    get: (target, name) => styles => styles.map(e => `${e};${name}`)\n});\n\nconst background = color => e => mix[`background-color:${color}`](e);\n\n\nconst _key = text => color['#a53bbb'](text);\nconst _func = text => color['#35a0ed'](text);\nconst _var = text => color['#de4d57'](text);\nconst _const = text => color['#e0994a'](text);\nconst _op = text => color['#4ba6b1'](text);\nconst S = {\n    key: _key,\n    func: _func\n}\n\nconst [text, styles] = consoleStyle`\n${S.key`export`} ${S.key`function`} ${S.func`consoleStyle`}(${_var('textList')}, ...${_var('args')}) {\n    ${_key('const')} ${_var('styles')} ${_op('=')} [];\n    ${_key('const')} ${_var('text')} ${_op('=')} [];\n    ${_key('for')} (${_key('let')} ${_var('i')} ${_op('=')} ${_const('0')}; ${_var('i')} ${_op('<')} ${_var('textList')}.${_var('length')} ${_op('-')} ${_const('1')}; ${_var('i')}${_op('++')}) {\n        ${_key('const')} ${_var('s')} ${_op('=')} ${_var('textList')}[${_var('i')}];\n        ${_key('const')} ${_var('v')} ${_op('=')} ${_var('args')}[${_var('i')}][${_const('0')}];\n        ${_var('text')}.${_op('push')}(${_var('s')}, ${_var('v')});\n        ${_var('styles')}.${_op('push')}(${_var('args')}[${_var('i')}][${_const('1')}], ${_var('args')}[${_var('i')}][${_const('2')}]);\n    }\n    ${_var('text')}.${_op('push')}(${_var('textList')}[${_var('textList')}.${_var('length')} ${_op('-')} ${_const('1')}]);\n    ${_key('return')} [${_var('text')}.${_op('join')}(${_var(`''`)}), ${_var('styles')}];\n}\n`;\n// console.log(text, ...styles);\n\nexport const _b = text => css['font-weight: bold'](text);\nexport const _i = text => css['font-style: italic'](text);\nexport const _pre = text => css['font-family: monospace'](text);\nexport const _h = l => text => css[`font-size: ${21 - l}px`](text);\n\nconst [text1, styles1] = consoleStyle`${_h(1)('Документация')}\nsee http://127.0.0.1:5500/?/blog/1\n${_b('bold')} and ${_i('italic')} and ${_pre('pre')}\n`;\n// console.log(text1, ...styles1);\n\n","export {default as block} from './bem.js';\nexport {default as style} from './style.js';\nexport {default as css} from './css.js';\nexport {E, SVG, M} from './element.js';\nexport {default as Component} from './component.js';\nexport {Switch, RouteLink, getRouterState} from './router.js';\nexport {default as Custom} from './custom.js';\nexport {log, setLogger, logAllLevels} from './logger.js';\nexport {consoleStyle} from './consoleStyle.js';\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport './Breadcrumbs.less';\n\nconst b = block('breadcrumbs');\n\nconst Breadcrumbs = Component.Breadcrumbs(({props}) => {\n    return () => E.div.class(b())(\n        props.items\n        .map(([name, href], i) => {\n            const last = i === props.items.length - 1;\n            return E.span(\n                E.div.style('display: inline-block')(\n                    last ? name : RouteLink.href(href)(name)\n                ),\n                last ? '' : ' / '\n            );\n        })\n    );\n});\n\nexport default Breadcrumbs;\n","export default {\n    0: {\n        type: 'js',\n        creationTime: '2020-01-15T17:31:44',\n        title: 'Я создал этот сайт',\n        tags: ['web', 'site']\n    },\n    1: {\n        type: 'html',\n        creationTime: '2020-03-09T14:09:41',\n        title: 'Создаём приложение на Filemaker',\n        tags: ['filemaker', 'tutorial']\n    },\n    2: {\n        type: 'js',\n        creationTime: '2020-03-28T22:01:49',\n        title: 'Отказ от нативных es6 модулей в пользу Parcel',\n        tags: ['es6', 'parcel']\n    }\n}\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    getRouterState,\n    Switch,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport './Button.less';\n\nconst b = block('button');\n\nconst Button = Component.Button(({props: {children, size}}) => {\n    return () => E.button.class(b())(\n        children\n    )\n})\n\nexport default Button;\n","export {default as Button} from './Button/Button.js';\n","import {E} from './element.js';\nimport { consoleStyle, _b, _i, _pre, _h } from './consoleStyle.js';\n\nexport function createBook(f) {\n    return {\n        to: type => {\n            const types = {\n                html: () => ({\n                    V: (strings, ...elements) => {\n                        const stringElements = strings.map(s => {\n                            const result = [];\n                            const brs = s.match(/\\n\\n+/g);\n                            if (!brs) {\n                                return s;\n                            }\n                            let tail = s;\n                            let i;\n                            for (const br of brs) {\n                                i = tail.indexOf(br);\n                                const subbrs = [];\n                                if (br.length === 2) {\n                                    subbrs.push(E.br())\n                                } else {\n                                    for (let j = 0; j < 2 * br.length - 4; j++) {\n                                        subbrs.push(E.br());\n                                    }\n                                }\n                                result.push(tail.slice(0, i), ...subbrs);\n                                tail = tail.slice(i + br.length);\n                            }\n                            result.push(tail);\n\n                            return result;\n                        })\n                        const list = [...stringElements[0]];\n                        for (let i = 1; i < strings.length; i++) {\n                            list.push(elements[i-1], ...stringElements[i]);\n                        }\n                        return list;\n                    },\n                    b: t => E.b(t),\n                    i: t => E.i(t),\n                    code: t => E.code(t),\n                    h: l => t => E[`h${l}`](t),\n                    n: E.br,\n                    p: t => E.p(t),\n                    img: (src, alt) => E.img.src(src).alt(alt),\n                    a: href => text => E.a.href(href)(text)\n                }),\n                markdown: () => ({\n                    V: (strings, ...elements) => {\n                        const list = [strings[0]];\n                        for (let i = 1; i < strings.length; i++) {\n                            list.push(elements[i-1], strings[i]);\n                        }\n                        return list.join('');\n                    },\n                    b: t => `**${t}**`,\n                    i: t => `_${t}_`,\n                    code: t => `\\`${t}\\``,\n                    h: l => t => `${'#'.repeat(l)} ${t}`,\n                    n: '  \\n',\n                    p: t => `\\n\\n${t}\\n\\n`,\n                    img: (src, alt) => `![${alt || ''}](${src})`,\n                    a: href => text => `[${text || ''}](${href})`\n                }),\n                browserConsole: () => ({\n                    V: consoleStyle,\n                    b: _b,\n                    i: _i,\n                    code: _pre,\n                    h: _h,\n                    n: '\\n',\n                    p: t => t,\n                    img: (src, alt) => [`IMG[${src || ''}]: ${alt || ''}`, []],\n                    a: href => text => [`${href} (${text})`, []]\n                })\n            };\n            if (type && type in types) {\n                return f(types[type]());\n            } else {\n                throw new Error(`Invalid type. Available types: ${Object.keys(types).join()}`);\n            }\n        }\n    }\n}\n\n// const bookTemplate = createBook(({b, i, h, code, n, p, img, a, V}) =>\n// V`\n// ${h(1)('Header')}\n// ${p(V`\n// ${b('жирный')} текст ${n}\n// ${i('курсивный')} текст\n// ${img('../assets/images/favicon/favicon-32x32.png', 'favicon')}\n// `)}\n// блок ${code('программного кода')} ${n}\n// ${a('https://github.com')('Гитхаб')} - ссылка\n// `);\n\n// export const book = bookTemplate.to('html');\n\n// console.log(bookTemplate.to('markdown'));\n\n// const [text, styles] = bookTemplate.to('browserConsole');\n// console.log(text, ...styles);\n\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport blog from '../../data/blog/index.js';\nimport {Button} from '../../blocks/index.js';\nimport {Breadcrumbs} from '../index.js';\nimport {createBook} from '../../utils/book.js';\n\nimport './Post.less';\n\nconst b = block('post');\n\nconst Post = Component.Post(({props, getState, setState, initState, didMount}) => {\n    initState({\n        text: null\n    })\n    didMount(() => {\n        const {id} = props;\n        const {type} = blog[id];\n        const path = `../data/blog/data/${id}/index.${type}`;\n        if (type === 'html') {\n            fetch(path).then(e => {\n                // console.log(e.clone().blob());\n                return e.blob()\n            }).then(data => {\n                return 'html' || data.text();\n\n            }).then(text => {\n                // console.log(text);\n                setState({text: text});\n            });\n        } else if (type === 'js') {\n            import(path).then(data => {\n                // console.log(data);\n                setState({text: createBook(data.default).to('html')})\n            }).catch(e => {\n                console.error(e);\n                setState({text: 'Ошибка загрузки контента'});\n            });\n        }\n    })\n\n    return () => {\n        const {id} = props;\n        const {type} = blog[id];\n        const {text} = getState();\n        const {title, creationTime} = blog[id];\n        const template = E.div.class(b('content'));\n        let elem;\n        if (type === 'html') {\n            const iframe = E.iframe.id(`iframe-post-${id}`).src(`/data/blog/data/${id}/index.${type}`).style('width: 100%; border:none; object-fit: fill; height: 100vh;')\n            setTimeout(() => {\n                const iframeElem = document.getElementById(`iframe-post-${id}`);\n                iframeElem.style.height = (iframeElem.contentWindow.document.body.clientHeight + 100) + 'px';\n            }, 300)\n            elem = template(iframe);\n        } else if (type === 'js') {\n            elem = template(text);\n        } else {\n            elem = 'Ошибка несоответствия типа контента'\n        }\n        return E.div.class(b())(\n            Breadcrumbs.items([['Блог', 'blog'], [title, `blog/${id}`]]),\n            E.h2(title),\n            E.em((new Date(creationTime)).toLocaleString('ru', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                timezone: 'UTC',\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            })),\n            elem\n        );\n    }\n});\n\nexport default Post;\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport blog from '../../data/blog/index.js';\nimport {Button} from '../../blocks/index.js';\n\nimport './Blog.less';\n\nconst b = block('blog');\n\nconst Blog = Component.Blog(({getState, setState, initState}) => {\n    const total = Object.keys(blog).length;\n    // console.log(`total ${total}`);\n\n    return () => E.div.class(b())(\n        Object.keys(blog).sort((keyA, keyB) => {\n            const getMs = key => Number(new Date(blog[key].creationTime));\n            return getMs(keyB) - getMs(keyA);\n        })\n        .map(key => {\n            const {type, creationTime, title, tags} = blog[key];\n            return E.div.class(b('post-card'))(\n                E.h3.class(b('title'))(\n                    title,\n                    E.div.class(b('read-button'))(\n                        RouteLink.href(`blog/${key}`)(\n                            Button('Читать')\n                        )\n                    )\n                ),\n                E.p(\n                    E.span.class(b('time'))(\n                        (new Date(creationTime)).toLocaleString('ru', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: 'numeric',\n                            timezone: 'UTC',\n                            hour: 'numeric',\n                            minute: 'numeric',\n                            second: 'numeric'\n                        })\n                    )\n                ),\n                E.p(\n                    tags.map(tag => E.div.class(b('tag'))(tag))\n                )\n            )\n        })\n    );\n});\n\nexport default Blog;\n","import {\n    block,\n    E,\n    css,\n    style,\n    Component\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\n\nimport './Colors.less';\n\nconst colors = [\n    'area',\n    'menu',\n    'menu-active',\n    'menu-hover',\n    'menu-folder',\n    'element-active',\n    'string-number',\n    'syntax-variable',\n    'syntax-number',\n    'syntax-operator',\n    'syntax-gray',\n    'syntax-dark-gray',\n    'syntax-keyword',\n    'syntax-class',\n    'syntax-function',\n    'syntax-string',\n    'syntax-inline',\n    'input-text',\n    'input-area',\n    'md-link',\n    'atom-link',\n    'atom-button',\n    'atom-button-hover',\n    'atom-black-line'\n];\n\nconst b = block('colors');\n\nconst Colors = Component.Colors(() => {\n    return () => E.div(\n        Breadcrumbs.items([['Дизайн', 'design'], ['Цвета']]),\n        E.div.class(b())(\n            colors.map(color => {\n                const code = getComputedStyle(document.documentElement).getPropertyValue(`--color-${color}`).trim();\n                const rgb = (s => [s.slice(0,2), s.slice(2,4),s.slice(4)].map(hex => parseInt(hex, 16)))(code.slice(1))\n                const v = Math.max(...rgb);\n                const contrast = v > 162 ? 'black' : 'white';\n                const border = v > 38 && v < 78 ? 'solid 1px #abb2de' : '';\n                const colorNode = E.div(\n                    E.div\n                        .class(b('area', {color}))\n                        .style(style({\n                            border,\n                            color: contrast\n                        }))\n                    (\n                        E.div.class(b('name'))(code)\n                    ),\n                    E.div(color)\n                );\n                return colorNode;\n            })\n        )\n    );\n});\n\n\nexport default Colors;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Design.less';\n\nconst b = block('design');\n\nconst Design = Component.Design(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Дизайн'),\n            RouteLink.href('design/colors')(\n                Button(\n                    E.div.style(style({padding: '24px', fontSize: '64px', fontWeight: '500'}))(\n                        E.span.style('color: #bc514a')('Ц'),\n                        E.span.style('color: #99c27c')('в'),\n                        E.span.style('color: #65b0ed')('е'),\n                        E.span.style('color: #c57bdb')('т'),\n                        E.span.style('color: #d0996a')('а'),\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Design;\n","import {\n    E,\n    block,\n    Component,\n    css\n} from '../../utils/index.js';\n\nimport './GameOfLife.less';\n\nconst b = block('game-of-life');\n// console.log('game of life!!!!!!!!!')\n\nconst range = (start, end) => {\n    const result = [];\n    for (let i = start; i <= end; i++) {\n        result.push(i);\n    }\n    return result;\n}\n\nconst Game = Component.Game(({\n    props,\n    getState,\n    setState,\n    initState,\n    didMount\n}) => {\n    const {\n        H = 200, W = 400\n    } = props;\n    initState({\n        i: 0,\n        size: 0,\n        stop: true,\n        H,\n        W\n    });\n\n    let canvas, img_data, data, ctx, rule = {\n        new: [2,3],\n        old: [3]\n    }, fieldState, fieldStateNext;\n\n\n    didMount(() => {\n        const {\n            startFieldState\n        } = props;\n        const {\n            H,\n            W\n        } = getState();\n\n        fieldState = new Array(H * W);\n        fieldStateNext = new Array(H * W);\n        for (let i = 0; i < H * W; i++) {\n            fieldState[i] = false;\n            fieldStateNext[i] = false;\n        }\n\n        if (startFieldState) {\n            set_life(startFieldState);\n        }\n        canvas = document.getElementById('field');\n        ctx = canvas.getContext('2d', {\n            alpha: false\n        });\n        img_data = ctx.getImageData(0, 0, W, H);\n        data = img_data.data;\n        for (let k = 0; k < H * W * 4; k++) {\n            data[k] = (k + 1) % 4 == 0 ? 255 : 0;\n        }\n\n        // paint();\n        // rules();\n\n        draw();\n        life();\n    })\n\n\n    function torsum(i, j) {\n        const {\n            H,\n            W,\n            fieldState: state\n        } = getState();\n        // положение строки над текущей клеткой\n        const i_top_W = (i ? i - 1 : H - 1) * W;\n        // положение строки под текущей клеткой\n        const i_down_W = (H - 1 - i ? i + 1 : 0) * W;\n        // положение строки текущей клетки\n        const i_W = i * W;\n        // столбец слева от текущей клетки\n        const j_l = j ? j - 1 : W - 1;\n        // столбец справа от текущей клетки\n        const j_r = W - 1 - j ? j + 1 : 0;\n        return (\n            +state[i_top_W + j_l] +\n            state[i_top_W + j] +\n            state[i_top_W + j_r] +\n            state[i_W + j_l] +\n            state[i_W + j_r] +\n            state[i_down_W + j_l] +\n            state[i_down_W + j] +\n            state[i_down_W + j_r]\n        );\n    }\n\n    function set_life(array) {\n        const {\n            W\n        } = getState();\n        for (const e of array) {\n            fieldState[(e[1] + 50) * W + e[0] + 50] = true;\n            fieldStateNext[(e[1] + 50) * W + e[0] + 50] = true;\n        }\n    }\n\n    function clear() {\n        const {W, H} = getState();\n        for (let k = 0; k < H * W * 4; k++) {\n            data[k] = (k + 1) % 4 === 0 ? 255 : 0;\n        }\n        for (let k = 0; k < H * W; k++) {\n            fieldState[k] = (data[k * 4] === 255);\n        }\n        ctx.putImageData(img_data, 0, 0);\n        setState({stop: true, i: 0});\n    }\n\n    function draw() {\n        const {H, W} = getState();\n        console.log(ctx);\n        for (let k = 0; k < H * W; k++) {\n            if (+fieldState[k] !== !data[k * 4 + 1]) {\n                data[k * 4] = fieldState[k] ? 255 : 0;\n            }\n        }\n        ctx.putImageData(img_data, 0, 0);\n    }\n\n    function step() {\n        let i, j, sum, k = 0;\n        for (i = 0; i < H; i++) {\n            for (j = 0; j < W; j++) {\n                sum = torsum(i, j);\n                if (fieldState[k]) {\n                    fieldStateNext[k] = rule.new.includes(sum);\n                } else {\n                    fieldStateNext[k] = rule.old.includes(sum);\n                }\n                k++;\n            }\n        }\n        for (k = 0; k < H * W; k++) {\n            fieldState[k] = fieldStateNext[k];\n        }\n    }\n\n    function one_step() {\n        step();\n        draw();\n        setState(prevState => ({i: prevState.i + 1}));\n    }\n\n    function life() {\n        const {stop} = getState();\n        if (!stop) {\n            one_step();\n        }\n        setState({size: fieldState.reduce((sum, x) => sum += x)});\n        setTimeout(life, 1000);\n    }\n\n    function rules() {\n        document.getElementById('cells_new').addEventListener('click', update_rule);\n        document.getElementById('cells_old').addEventListener('click', update_rule);\n\n        update(document.getElementById('cells_new').querySelector('input'));\n        update(document.getElementById('cells_old').querySelector('input'));\n\n        function update_rule(e) {\n            let elem = e.target;\n            if (elem.tagName !== 'INPUT') return;\n            update(elem);\n        }\n\n        function update(elem) {\n            type = elem.name;\n            list = elem.closest(`#cells_${type}`).querySelectorAll('input');\n            list = Array.from(list).filter(x => x.checked).map(x => +x.id);\n            rule[type] = list;\n        }\n    }\n\n    function update(elem) {\n        type = elem.name;\n        list = elem.closest(`#cells_${type}`).querySelectorAll('input');\n        list = Array.from(list).filter(x => x.checked).map(x => +x.id);\n        rule[type] = list;\n    }\n\n    return () => {\n        const {\n            stop,\n            H,\n            W,\n            i,\n            size\n        } = getState();\n        return E.div.class(b())(\n            E.canvas.id('field').width(W).height(H),\n            E.p('Поколение ', E.span.id('old')(i)),\n            E.p('Популяция ', E.span.id('size')(size)),\n            E.input.type('button')\n            .value(stop ? '>' : '||')\n            .onClick(() => {\n                setState(prevState => ({\n                    stop: !prevState.stop\n                }))\n            }).id('play'),\n            E.input.type('button').value('1>').onClick(() => one_step()),\n            E.input.type('button').value('X').onClick(() => clear()).id('btn_clear'),\n            E.br,\n            E.div.id('cells_new')(\n                E.p('Рождение'),\n                range(0, 8).map(i =>\n                    E.label(\n                        E.input.type('checkbox').name('new').id(i),\n                        i\n                    )\n                )\n            ),\n            E.br,\n            E.div.id('cells_old')(\n                E.p('Смерть'),\n                range(0, 8).map(i => E.label(E.input.type('checkbox').name('old').id(i), i))\n            )\n        );\n    }\n}).startFieldState([\n    [3, 0],\n    [4, 1],\n    [0, 2],\n    [4, 2],\n    [1, 3],\n    [2, 3],\n    [3, 3],\n    [4, 3],\n    [0, 7],\n    [1, 8],\n    [2, 8],\n    [2, 9],\n    [2, 10],\n    [1, 11],\n    [3, 14],\n    [4, 15],\n    [0, 16],\n    [4, 16],\n    [1, 17],\n    [2, 17],\n    [3, 17],\n    [4, 17]\n]);\n\n\n\n\nfunction initGame() {\n\n\n    function paint() {\n        canvas.onmousedown = startDrawing;\n        canvas.onmouseup = stopDrawing;\n        canvas.onmouseout = stopDrawing;\n        canvas.onmousemove = draw;\n\n        let context = ctx;\n        let isDrawing;\n\n        context.strokeStyle = 'rgb(255,0,0)';\n        context.lineWidth = 1;\n\n        let pause = false;\n\n        function startDrawing(e) {\n\n            // Начинаем рисовать\n            isDrawing = true;\n            if (!stop) {\n                stop = true;\n                pause = true;\n            }\n\n            // Создаем новый путь (с текущим цветом и толщиной линии)\n            context.beginPath();\n\n            // Нажатием левой кнопки мыши помещаем \"кисть\" на холст\n            context.moveTo(e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop);\n        }\n\n\n        function draw(e) {\n            if (isDrawing == true) {\n                // Определяем текущие координаты указателя мыши\n                var x = e.pageX - canvas.offsetLeft;\n                var y = e.pageY - canvas.offsetTop;\n\n                // Рисуем линию до новой координаты\n                context.lineTo(x, y);\n                context.stroke();\n            }\n        }\n\n        function stopDrawing() {\n            isDrawing = false;\n            if (pause) {\n                stop = false;\n                pause = false;\n            }\n\n\n            img_data = ctx.getImageData(0, 0, W, H);\n            data = img_data.data;\n            for (let k = 0; k < H * W; k++) {\n                state[k] = (data[k * 4] == 255);\n            }\n        }\n    }\n\n    function rules() {\n        document.getElementById('cells_new').addEventListener('click', update_rule);\n        document.getElementById('cells_old').addEventListener('click', update_rule);\n\n        update(document.getElementById('cells_new').querySelector('input'));\n        update(document.getElementById('cells_old').querySelector('input'));\n\n        function update_rule(e) {\n            let elem = e.target;\n            if (elem.tagName !== 'INPUT') return;\n            update(elem);\n\n        }\n\n        function update(elem) {\n            type = elem.name;\n            list = elem.closest(`#cells_${type}`).querySelectorAll('input');\n            list = Array.from(list).filter(x => x.checked).map(x => +x.id);\n            rule[type] = list;\n        }\n    }\n}\n\nexport default Game;\n","import {\n    E,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\nimport {Button} from '../../blocks/index.js';\n\nimport './About.less';\n\nconst b = block('about');\n\nconst about = E.div.class(b())(\n    E.p('Программирую'),\n    E.p(E`Работаю в ${E.a.href('https://yandex.ru')('Яндексе')}`),\n    E.p('Люблю математику'),\n    E.p(E`Мой ${E.a.href('https://github.com/nikalexxx')('Github')}`)\n);\n\nexport default about;\n","import {\n    E,\n    Component,\n    block,\n    style\n} from './utils/index.js';\n\nimport {Button} from './blocks/index.js';\n\nconst b = block('my-component');\n\nconst MyComponent = Component.MyComponent(({props, state}) => {\n    state.init({show: true});\n\n    return () => {\n        const {state: visible} = props;\n        const {show} = state();\n        const elem = show ? E.span('elem') : null;\n        return E.div.class(b())(\n            elem,\n            E.span\n                .style(style({color: {ok: 'green', error: 'red'}[visible]}))\n                .class(b('state'))(\n                    visible\n                ),\n            E.span.onClick((e) => {\n                // console.log({show});\n                state.set(prevState => ({show: !prevState.show}));\n            })((show ? 'hide' : 'show'))\n        )\n    }\n});\n\nexport default MyComponent;\n","const map = {\n\t\"\": {},\n\t\"design\": {\n\t\t\"colors\": {\n\t\t\t\":color\": {}\n\t\t}\n    },\n    \"sandbox\": {\n        \":id\": {}\n    },\n    \"games\": {\n        \"gameOfLife\": {}\n    }\n};\n\nexport default map;\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    getRouterState,\n    Switch,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\nimport {\n    Colors,\n    GameOfLife,\n    Design,\n    Blog,\n    Post,\n    About\n} from '../index.js';\nimport {Button} from '../../blocks/index.js'\nimport MyComponent from '../../MyComponent.js';\nimport map from '../../map.js';\nimport {book} from '../../utils/book.js';\n\nimport './Page.less';\n\nconst b = block('page');\n\nconst routes = params => ({\n    '/': Blog,\n    'about': About,\n    'book': E.div(book),\n    'design': Design,\n    'design/colors': Colors,\n    'my/:state': E.div(\n        MyComponent.state(params.state),\n        MyComponent.state('ok'),\n        MyComponent.state('error'),\n    ),\n    'gameOfLife': GameOfLife,\n    'blog': Blog,\n    'blog/:id': Post.id(params.id)\n})\n\nconst Menu = Component.Menu(({setState, initState}) => {\n    const path = () => getRouterState(routes).path;\n    initState({i: 0});\n    window.addEventListener('historyUpdate', () => setState(prev => ({i: prev.i++})));\n    function renderLink(href, title) {\n        const current = href === path();\n        // console.log(href, path());\n        return RouteLink.href(href)(\n            E.div.class(b('menu-link', {current}))(\n                title\n            )\n        );\n    }\n    return () => E.div(\n        renderLink('blog', 'Блог'),\n        renderLink('about', 'Кто я?'),\n        // renderLink('book', 'Книга'),\n        renderLink('design', 'Дизайн'),\n        // renderLink('gameOfLife', 'Игра Жизнь'),\n        // renderLink('my/ok', 'тест')\n    )\n});\n\nconst Page = E.div.class(b())(\n    E.div.class(b('header-menu'))(\n        E.div('Alexandr Nikolaichev'),\n        E.div.class(b('scroll-top')).onClick(() => window.scrollTo({top: 0}))('▲ ▲ ▲')\n    ),\n    E.header.class(b('header'))(\n        RouteLink.href('/')(\n            E.h1.style(style({textAlign: 'center'}))('Александр Николаичев')\n        )\n    ),\n    E.nav.class(b('menu'))(Menu),\n    E.main.class(b('content'))(Switch.routes(routes)),\n    E.footer.class(b('footer'))('© 2019-2020 Alexandr Nikolaichev')\n);\n\nexport default Page;\n","        export {default as Breadcrumbs} from './Breadcrumbs/Breadcrumbs.js';\n    export {default as Post} from './Post/Post.js';\n    export {default as Blog} from './Blog/Blog.js';\n    export {default as Colors} from './Colors/Colors.js';\n    export {default as Design} from './Design/Design.js';\n    export {default as GameOfLife} from './GameOfLife/GameOfLife.js';\n    export {default as About} from './About/About.js';\nexport {default as Page} from './Page/Page.js';\n","import {Page} from './components/index.js';\nimport {setLogger, logAllLevels} from './utils/logger.js';\n\nsetLogger({\n    component: {\n        props: {\n            [logAllLevels]: true\n        }\n    }\n});\nsetLogger(false); // for production\n\ndocument.getElementById('root').append(Page);\n"]}