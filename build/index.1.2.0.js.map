{"version":3,"sources":["utils/bem.js","utils/style.js","utils/symbols.js","utils/clone.js","utils/diff.js","utils/element.js","utils/css.js","utils/children.js","utils/logger.js","utils/component.js","utils/router.js","utils/custom.js","utils/consoleStyle.js","utils/class.js","utils/index.js","components/Breadcrumbs/Breadcrumbs.js","data/blog/index.js","blocks/Button/Button.js","blocks/index.js","utils/book.js","components/Post/Post.js","components/Blog/Blog.js","components/Physics/Physics.js","components/StandardModel/StandardModel.js","components/Projects/Projects.js","components/Colors/Colors.js","components/Unicode/Unicode.js","components/Design/Design.js","components/GameOfLife/GameOfLife.js","components/About/About.js","MyComponent.js","map.js","components/Page/Page.js","components/index.js","index.js"],"names":["block","blockName","String","element","modifiers","mixin","cssStack","elementName","mod","push","value","join","props","cssProps","prop","name","replace","x","toLowerCase","elementSymbol","Symbol","componentSymbol","getClone","cloneNode","Error","nodeType","clone","E","tagName","Object","keys","eventListeners","length","eventName","listeners","listener","addEventListener","Array","from","childNodes","child","cloneChild","append","diffObject","t","delete","primitive","array","raw","D","meta","new","isPrimitive","diff","A","B","toString","isArray","lA","lB","max","min","result","i","indexDiff","key","keyDiff","symbols","namespaceKeys","namespaces","getNode","node","elem","strToArray","strings","list","DOM","elementObject","document","createTextNode","namespace","children","createElementNS","startsWith","setAttribute","values","map","e","dom","parent","ref","patchDOM","upd","parentNode","remove","undefined","nodeValue","replaceWith","newDom","removeAttribute","removeEventListener","deleteListeners","updatedChildKeys","_key","removeChild","newChildren","example","div","class","id","style","span","p","elementStructure","T","Number","data","diffStructure","diffFunctionStructure","Function","params","diffElements","_forceUpdate","_update","diffProps","diffEventListeners","diffChildren","k","diffItems","getProps","attributes","attrs","getChildren","hasAttribute","getAttribute","getElementFromDOM","domElement","namespaceURI","getElement","Proxy","get","target","tag","create","toUpperCase","slice","console","error","nodes","filter","dublicatedKeys","Set","index","add","size","stableElement","items","apply","thisArg","argArray","S","M","getDirPath","fileUrl","URL","pathname","split","sourceUrl","relativePath","type","includes","pathRelative","test","fullPath","Promise","resolve","link","rel","href","head","querySelector","less","script","src","update","window","setTimeout","_log","condition","f","log","loggerSymbol","logAllLevels","setLogger","settings","getCondition","levels","current","level","createLogProxy","Component","set","state","arg","newObject","assign","attr","logAdd","color","backgroundColor","logRemove","getElem","component","fragment","createDocumentFragment","isTypeChanged","newElement","nodeName","componentConstructor","componentName","handlerErrors","makeComponent","componentNameSymbol","handlerIndex","handlers","count","indexes","bump","changedStateFields","changeState","stateClass","setState","newState","newStateObject","componentData","diffElement","change","render","init","initState","startState","onChange","names","didMount","firstAppend","elements","mo","MutationObserver","mutations","observer","closest","first","innerHTML","dispatchEvent","CustomEvent","detail","disconnect","observe","childList","subtree","hooks","callback","onDidMount","event","setComponentData","historyUpdate","pushState","title","url","history","replaceState","getRouterState","routes","location","search","path","stack","URLSearchParams","param","resultParams","resultPath","pathStack","equal","RouteLink","a","onClick","preventDefault","Switch","getCustom","CustomElement","HTMLElement","attachShadow","mode","slot","customName","customElements","define","Custom","css","text","consoleStyle","textList","args","styles","s","v","local","mix","background","_func","_var","_const","_op","func","_b","_i","_pre","_h","l","text1","styles1","Class","createClass","fields","field","getter","initialValues","constructor","o","object","Breadcrumbs","b","last","creationTime","tags","Button","button","createBook","to","types","html","V","stringElements","brs","match","tail","br","indexOf","subbrs","j","code","pre","h","n","img","alt","external","markdown","repeat","browserConsole","Post","blog","appVersion","fetch","then","blob","default","catch","template","iframe","iframeElem","getElementById","height","contentWindow","body","clientHeight","h2","em","Date","toLocaleString","year","month","day","timezone","hour","minute","second","Blog","sort","keyA","keyB","getMs","h3","Physics","padding","sup","StandardModel","particles","symbol","sub","charge","spin","mass","group","interaction","modifier","category","renderTile","view","firstChild","dataset","prev","strong","fermions","bosons","anti","normal","vector","scalar","leptons","quarks","part","start","Projects","Colors","colors","getComputedStyle","documentElement","getPropertyValue","trim","rgb","hex","parseInt","Math","contrast","border","colorNode","Unicode","limit","getUnicodeList","end","table","fromCharCode","startI","endI","active","Design","fontSize","fontWeight","Game","range","getState","H","W","stop","canvas","img_data","ctx","fieldState","fieldStateNext","rule","old","torsum","i_top_W","i_down_W","i_W","j_l","j_r","draw","putImageData","one_step","step","sum","prevState","life","reduce","startFieldState","set_life","getContext","alpha","getImageData","width","input","clear","label","initGame","about","MyComponent","show","visible","ok","Page","About","book","GameOfLife","Menu","renderLink","header","h1","textAlign","nav","main","footer"],"mappings":";AAoBeA,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EApBf,IAAMA,EAAQ,SAAAC,GACJD,IAAAA,EAAQE,OAAOD,GACd,OAAA,SAASE,EAASC,EAAWC,GAC1BC,IAAAA,EAAW,GACXC,EAAcP,GAASG,EAAeA,KAAAA,OAAAA,GAAY,IAEnD,IAAA,IAAMK,KADXF,EAASG,KAAKF,GACIH,EAAW,CACnBM,IAAAA,EAAQN,EAAUI,GACH,kBAAVE,EACHA,GACAJ,EAASG,KAAQF,GAAAA,OAAAA,EAAeC,KAAAA,OAAAA,IAGpCF,EAASG,KAAQF,GAAAA,OAAAA,EAAeC,KAAAA,OAAAA,EAAOE,KAAAA,OAAAA,IAGxCJ,OAAAA,EAASK,KAAK,OAIdX,EAAAA,EAAAA,QAAAA,QAAAA;;ACbd,aAPc,SAAsB,IAAZY,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACvBC,EAAW,GACZ,IAAA,IAAMC,KAAQF,EAAO,CAChBG,IAAAA,EAAOD,EAAKE,QAAQ,SAAU,SAAAC,GAAK,MAAA,IAAMA,EAAEC,gBACjDL,EAASJ,KAAQM,GAAAA,OAAAA,EAASH,MAAAA,OAAAA,EAAME,GAAhC,MAEGD,OAAAA,EAASF,KAAK,KACxB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACNM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,QAAA,mBAAA,EADA,IAAMQ,EAAgBC,OAAO,WAC7B,QAAA,cAAA,EAAA,IAAMC,EAAkBD,OAAO,aAA/B,QAAA,gBAAA;;ACEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAHP,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,gBAEO,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,IAAME,EAAW,SAAXA,EAAWnB,GAEhB,IAACA,EAAQoB,UACH,MAAA,IAAIC,MAAM,mBAIhBrB,GAAqB,IAArBA,EAAQsB,SACDtB,OAAAA,EAAQoB,WAAU,GAEzBG,IAAAA,EAAQC,EAAExB,EAAAA,EAAQyB,QAAQV,eAY1Bf,GAVAuB,EADAP,EAAiBhB,iBAAAA,EACTuB,EAAMN,OAAO,UAAUjB,EAAQgB,EAAD,eAAgBP,MAA9Cc,GAGAA,IAERL,EAAmBlB,mBAAAA,IACnBuB,EAAML,EAAD,iBAAoBlB,EAAQkB,EAAD,iBAChCK,EAAML,EAAD,iBAAkBlB,QAAUuB,GAGjCvB,EAAQgB,EAAD,gBAAmBU,OAAOC,KAAK3B,EAAQgB,EAAD,eAAgBY,gBAAgBC,OAAS,EAC9DH,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,KAAK3B,EAAQgB,EAAD,eAAgBY,gBAAiB,EAAA,EAAA,OAAA,IAAA,CAAjEE,IAAiE,EAAjEA,EAAN,EAAA,GAEsBC,EAAAA,EADL/B,EAAQgB,EAAD,eAAgBY,eAAeE,IADgB,IAEtC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAvBE,IAAAA,EAAuB,EAAA,MAC9BT,EAAMU,iBAAiBH,EAAWE,GAAU,IAHwB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAO5DE,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,MAAMC,KAAKnC,EAAQoC,YAAa,EAAA,EAAA,OAAA,IAAA,CAAzCC,IACDC,EAAanB,EADlB,EAAA,IAEDI,EAAMgB,OAAOD,GAEVf,OAAAA,GAlCJ,QAAA,SAAA;;ACsHP,aAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,MAAA,IAAA,OAAA,OAAA,OAAA,iBAAA,EAAA,CAAA,IAAA,CAAA,MAAA,OAAA,OAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,EAAA,QAAA,IAAA,QAAA,iBAAA,EAxHA,IAAMiB,EAAa,SAAbA,EAAaC,GAAC,IAAA,EAAI,MAAA,CACpBA,EAAEC,OACFD,EAAEE,WAEGF,EAAAA,GAAAA,EAAAA,EAAAA,EAAEG,MAAQH,EAAA,IAAAA,EAAK,IACfA,EAAAA,EAAAA,EAAEI,IAAMJ,EAAA,IAAAA,EAAK,IACbA,EAAAA,EAAAA,EAAE1C,QAAU0C,EAAA,IAAAA,CAAKD,IACjBC,EAAAA,EAAAA,EAAExB,QAAUwB,EAAA,IAAAA,CAAKD,IAPN,KAWdM,EAAI,CACNJ,OAAQzB,OAAO,UACf2B,MAAO3B,OAAO,SACd4B,IAAK5B,OAAO,OACZ8B,KAAM9B,OAAO,QACb+B,IAAK/B,OAAO,QAGHgC,EAAc,SAAA1C,GAChBA,OAAAA,IAAU,IAAImB,OAAOnB,IAoGhC,QAAA,YAAA,EAjGO,IAAMsC,EAAM,SAAAtC,GACX0C,OAAAA,EAAY1C,GACLA,GAOXA,EAAMuC,EAAED,MAAO,EACftC,EAAMuC,EAAEE,KAAOzC,EACRA,IAKJ,SAAS2C,EAAKC,EAAGC,GAChBD,GAAAA,IAAMC,EACC,MAAA,GAEPH,GAAAA,EAAYE,GACRF,OAAAA,EAAYG,GACLA,EAEAP,EAAIO,GAGXH,GAAAA,EAAYG,GACLA,OAAAA,EAEH,GAAa,mBAAND,EACHA,OAAAA,IAAMC,EACC,GACAD,EAAEE,aAAeD,EAAEC,WACnB,GAEJR,EAAIO,GACR,GAAIlB,MAAMoB,QAAQH,GAAI,CACrBjB,GAAAA,MAAMoB,QAAQF,GAAI,CAMb,IALCG,IAAAA,EAAKJ,EAAEtB,OACP2B,EAAKJ,EAAEvB,OACP4B,EAAMF,EAAKC,EAAKD,EAAKC,EACrBE,EAAMH,EAAKC,EAAKD,EAAKC,EACrBG,EAAS,GACNC,EAAI,EAAGA,EAAIH,EAAKG,IACjBA,GAAAA,EAAIF,EAAK,CACHG,IAAAA,EAAYX,EAAKC,EAAES,GAAIR,EAAEQ,KAC3BX,EAAYY,IAAcA,IAAcf,EAAEJ,QAAUhB,OAAOC,KAAKkC,GAAWhC,OAAS,GAAKgC,EAAUf,EAAED,QACrGc,EAAO5D,OAAO6D,IAAMC,QAGxBF,EAAO5D,OAAO6D,IADPL,EAAKC,EACQJ,EAAEQ,GAEFd,EAAEJ,OAMvBiB,OAHHjC,OAAOC,KAAKgC,GAAQ9B,OAAS,IAC7B8B,EAAOb,EAAEF,QAAS,GAEfe,EAEAd,OAAAA,EAAIO,GAGX,GAAa,mBAANA,GAAoBlB,MAAMoB,QAAQF,GAClCP,OAAAA,EAAIO,GAGO1B,IADZiC,IAAAA,EAAS,GACGjC,EAAAA,EAAAA,EAAAA,OAAOC,KAAKyB,GAAI,EAAA,EAAA,OAAA,IAAA,CAAvBU,IAAAA,EAAN,EAAA,GACKA,KAAOX,IACTQ,EAAOG,GAAOjB,EAAIO,EAAEU,KAGVpC,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,KAAKwB,GAAI,EAAA,EAAA,OAAA,IAAA,CAAvBW,IAAAA,EAAN,EAAA,GACGA,GAAAA,KAAOV,EAAG,CACJW,IAAAA,EAAUb,EAAKC,EAAEW,GAAMV,EAAEU,KAC3Bb,EAAYc,IAAYA,IAAYjB,EAAEJ,QAAUhB,OAAOC,KAAKoC,GAASlC,OAAS,GAAKkC,EAAQjB,EAAED,QAC7Fc,EAAOG,GAAOC,QAGlBJ,EAAOG,GAAOhB,EAAEJ,OAGjBiB,OAAAA,EAc3B,QAAA,IAAA,EAPAT,EAAKc,QAAUlB;;ACmaf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAAA,QAAA,SAAA,EAAA,QAAA,aAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,EAAA,QAAA,SAAA,EArhBA,IAAA,EAAA,QAAA,cAEA,EAAA,QAAA,gBAEA,EAAA,QAAA,aAihBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yeAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,KAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,OAAA,KAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,QAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,YAAA,KAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,SAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,YAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,OAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,MAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,MAAA,IAAA,OAAA,OAAA,OAAA,iBAAA,EAAA,CAAA,IAAA,CAAA,MAAA,OAAA,OAAA,OAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA7gBA,IAAMmB,EAAgB,CACc,+BAAA,EACF,6BAAA,EACQ,qCAAA,GAGpCC,EAAa,CACV,EAAA,+BACA,EAAA,6BACA,EAAA,sCAIF,SAASC,EAAQC,GAChBlC,GAAAA,MAAMoB,QAAQc,GAAO,CACfT,IADe,EACfA,EAAS,GACIS,EAAAA,EAAAA,GAFE,IAEI,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAdC,IAAAA,EAAc,EAAA,MACjBnC,MAAMoB,QAAQe,GACdV,EAAOrD,KAAPqD,MAAAA,EAAeQ,EAAAA,EAAQE,KAEvBV,EAAOrD,KAAK6D,EAAQE,KANP,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IASdV,OAAAA,EACJ,MAAoB,mBAATS,EACPD,EAAQC,KAERA,EAIf,IAAME,EAAa,SAACC,GAEX,IADCC,IAAAA,EAAO,CAACD,EAAQ,IACbX,EAAI,EAAGA,EAAIW,EAAQ1C,OAAQ+B,IAChCY,EAAKlE,KAAcsD,EAAE,EAAFA,EAAAA,GAAAA,UAAAA,QAAAA,EAAE,EAAFA,OAAAA,EAAAA,UAAAA,EAAE,EAAIW,GAAAA,EAAQX,IAE9BY,OAAAA,GAGEC,EAAM,SAANA,EAAMC,GACX,IAAA,EAAYA,EAAAA,aAAAA,GACLC,OAAAA,SAASC,eAAeF,GAE5BG,IAAAA,EAAuDH,EAAvDG,UAAWpD,EAA4CiD,EAA5CjD,QAAShB,EAAmCiE,EAAnCjE,MAAOqE,EAA4BJ,EAA5BI,SAAUlD,EAAkB8C,EAAlB9C,eACtC5B,EAAU2E,SAASI,gBAAgBb,EAAWnE,OAAO8E,IAAapD,GAEnE,IAAA,IAAMd,KADXX,EAAQgB,EAAD,eAAkB,GACNP,EACXE,EAAKqE,WAAW,KAChBhF,EAAQgB,EAAD,eAAgBL,GAAQF,EAAME,GAErCX,EAAQiF,aAAatE,EAAMZ,OAAOU,EAAME,KAGxBe,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,KAAKC,GAAiB,EAAA,EAAA,OAAA,IAAA,CAA1CE,IAAAA,EAAN,EAAA,GACKE,EAAWJ,EAAeE,GAChC9B,EAAQiC,iBAAiBH,EAAWE,GAAU,GAa3ChC,OAXH0B,OAAOC,KAAKmD,GAAUjD,QACtB7B,EAAQuC,OAARvC,MAAAA,EAAkB0B,EAAAA,OAAOwD,OAAOJ,GAAUK,IAAI,SAAAC,GACpCC,IAAAA,EAAMZ,EAAIW,GAITC,OAHF,EAAYD,EAAAA,aAAAA,KACbA,EAAEC,IAAIC,OAAStF,GAEZqF,MAGfX,EAAcW,IAAM,CAACE,IAAKvF,GAC1BA,EAAQgB,EAAD,eAAkB0D,EAClB1E,GAGJ,SAASwF,EAASH,EAAK7C,GACpBiD,IAAAA,EAAMJ,EAAIK,WACZlD,GAAAA,IAAeU,EAAKc,KAAAA,QAAQtB,OACxB+C,OAAAA,UACOJ,EAAIrE,EAAD,oBACVqE,EAAIM,eAGGC,EAGX,IAAA,EAAYpD,EAAAA,aAAAA,GAER6C,OAAiB,IAAjBA,EAAI/D,SACA+D,EAAIQ,YAAc9F,OAAOyC,QAClBoD,EAEHH,OACAJ,EAAIQ,UAAY9F,OAAOyC,IAGhBmC,SAASC,eAAepC,GAInCiD,OACAJ,EAAIS,YAAYnB,SAASC,eAAepC,IAGjCmC,SAASC,eAAepC,GAIuCA,IAAAA,EAAAA,EAA3E/B,MAAAA,OAAQ,IAAA,EAAA,GAjCuB,EAiC4C+B,EAAAA,EAA/DsC,SAAAA,OAAW,IAAA,EAAA,GAjCQ,EAiC4CtC,EAAAA,EAAhDZ,eAAAA,OAAiB,IAAA,EAAA,GAjCb,EAkClCiB,GAD8EL,EAA1BU,EAAKc,KAAAA,QAAQnB,KAC5D,CACD4C,GAAAA,EAAK,CACCM,IAAAA,EAAStB,EAAIjC,GAOnB,OANA6C,EAAIS,YAAYC,GACXvD,EAAWU,EAAKc,KAAAA,QAAQhB,KAAKqC,MAC9B7C,EAAWU,EAAKc,KAAAA,QAAQhB,KAAKqC,IAAM,SAEvC7C,EAAWU,EAAKc,KAAAA,QAAQhB,KAAKqC,IAAIE,IAAMQ,GAIhCtB,OAAAA,EAAIjC,GAKd,IAAA,IAAM7B,KAAQF,EACXA,EAAME,KAAUuC,EAAKc,KAAAA,QAAQtB,OACzB/B,EAAKqE,WAAW,YACTK,EAAIrE,EAAD,eAAgBL,GAE1B0E,EAAIW,gBAAgBrF,GAGpBA,EAAKqE,WAAW,KAChBK,EAAIrE,EAAD,eAAgBL,GAAQF,EAAME,GAEjC0E,EAAIJ,aAAatE,EAAMF,EAAME,IAMjBe,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,KAAKC,GAAiB,EAAA,EAAA,OAAA,IAAA,CAA1CE,IAAAA,EAAN,EAAA,GACKE,EAAWJ,EAAeE,GAC5BE,IAAakB,EAAKc,KAAAA,QAAQtB,OAC1B2C,EAAIY,oBAAoBnE,EAAWF,EAAesB,EAAKc,KAAAA,QAAQjB,MAAMmD,gBAAgBpE,KAEhFE,EAASkB,EAAKc,KAAAA,QAAQnB,MACvBwC,EAAIY,oBAAoBnE,EAAWF,EAAesB,EAAKc,KAAAA,QAAQjB,MAAMmD,gBAAgBpE,IAEzFuD,EAAIpD,iBAAiBH,EAAWE,GAAU,IAO7C,IAFCwC,IAAAA,EAAOtC,MAAMC,KAAKkD,EAAIjD,YACtB+D,EAAmB,GAChBvC,EAAI,EAAGA,EAAIY,EAAK3C,OAAQ+B,IAAK,CAC5BvB,IAAAA,EAAQmC,EAAKZ,GACbE,GAAOzB,EAAMrB,EAAD,gBAAmB,IAAIoF,MAAQrG,OAAO6D,GACpDE,KAAOgB,IACHA,EAAShB,KAASZ,EAAKc,KAAAA,QAAQtB,OAC/B2C,EAAIgB,YAAYhE,IAEhBmD,EAASnD,EAAOyC,EAAShB,IACzBqC,EAAiBrC,IAAO,IAM9BwC,IAAAA,EAAc,GACf,IAAA,IAAMxC,KAAOgB,GACRA,EAAShB,GAAKZ,EAAKc,KAAAA,QAAQnB,OAAS,EAAYiC,EAAAA,aAAAA,EAAShB,MAAUgB,EAAShB,KAASZ,EAAKc,KAAAA,QAAQtB,SAGlGoB,KAAOqC,GACTG,EAAYhG,KAAKmE,EAAIK,EAAShB,MAYlC,OATAwC,EAAYzE,OAAS,GACrBwD,EAAI9C,OAAJ8C,MAAAA,EAAciB,GAGb9D,EAAWU,EAAKc,KAAAA,QAAQhB,KAAKqC,MAC9B7C,EAAWU,EAAKc,KAAAA,QAAQhB,KAAKqC,IAAM,IAEvC7C,EAAWU,EAAKc,KAAAA,QAAQhB,KAAKqC,IAAIE,IAAMF,EAElCI,OAAD,EACOJ,EAmVf,QAAA,IAAA,EA/UA,IAAMkB,EAAU,SAAA/E,GAAKA,OAAAA,EAAEgF,IAAIC,MAAeC,KAAAA,GAAOC,KAAAA,MAAMA,OAAO,cAC1D,KAAA,WAAA,EAAA,CAAA,SACAnF,EAAEoF,KACFpF,KAAAA,EAAEqF,EAAE,OACJrF,EAAaA,IAAAA,EAAEoF,KAAK,IACpB,CACIpF,EAAEgF,IAAIG,MACNnF,KAAAA,EAAEgF,IAAIG,MAAmB,IAAzBnF,CAAyB,OACzBA,EAAEgF,IAAIG,MACNnF,IADAA,CACAA,KAAAA,EAAEgF,IAAIG,MAAyBnF,IAA/BA,CAA+BA,IAAAA,EAAEoF,KAAK,IACtCpF,EAAEgF,IAAIG,MAAmBnF,IAAzBA,CAAyBA,EAAOA,IAAAA,EAAEoF,KAAK,OAExC,OAAA,EAAA,CAAC,EAAE,EAAE,GAAGzB,IAAI,SAAAvB,GAAKpC,OAAAA,EAAEoC,EAAEwC,KAAKxC,EAATpC,CAAYoC,MAChC,CAAA,CAAC,EAAE,EAAE,GAAGuB,IAAI,SAAAvB,GAAKpC,OAAAA,EAAEoC,EAAEwC,KAAKxC,EAATpC,CAAYoC,SAK3BkD,EAAmB,SAAnBA,EAAmBC,GAAM,MAAA,CAC3BzF,SAAUyF,EAAEC,QACZnC,UAAWkC,EAAEhH,QACb0B,QAASsF,EAAEhH,QACXU,MAAOsG,EAAA,IAAAA,CACFA,EAAAA,GAAAA,EAAEhH,QAAUgH,EAAEhH,UAEnB+E,SAAUiC,EAAA,IAAAA,CAAKrF,OAALqF,CAAaA,EAAED,IACzBG,KAAMF,EAAEhH,UAGNmH,EAAgB,SAAhBA,EAAgBzE,GAAM,MAAA,CACxBnB,SAAUmB,EAAA,IAAAA,CAAKuE,QACfnC,UAAWpC,EAAA,IAAAA,CAAK1C,QAChB0B,QAASgB,EAAA,IAAAA,CAAK1C,QACdU,MAAOgC,EAAA,IAAAA,CACFA,EAAAA,GAAAA,EAAE1C,QAAU,CAAC0C,EAAE1C,QAAS0C,EAAE,SAE/BqC,SAAUrC,EAAA,IAAAA,CAAKf,OAALe,CAAaA,EAAEyE,IACzBD,KAAMxE,EAAA,IAAAA,CAAK1C,QACX2C,OAAQD,EAAA,IAAAA,EAAK,KAGX0E,EAAwB,SAAA1E,GAAKA,OAAAA,EAAE2E,SAAF3E,CAAY,SAAA,GAAE4E,EAAAA,OAC7C5E,OAAAA,EAAE,CACE4E,OAAQ,CACJlE,EAAGV,EAAEqE,GACL1D,EAAGX,EAAEqE,KAHbrE,CAKGA,EAAEyE,OAULtD,EAAI,EACD,SAAS0D,EAAanE,EAAGC,GAExB,IAACA,EACMF,OAAAA,EAAKc,KAAAA,QAAQtB,OAEpB,IAAA,EAAYS,EAAAA,aAAAA,GACR,OAAA,EAAYC,EAAAA,aAAAA,GACRD,IAAMC,GACC,EAAIA,EAAAA,KAAAA,GAEJ,IAGJ,EAAIA,EAAAA,KAAAA,GAGf,IAAA,EAAYA,EAAAA,aAAAA,GACL,OAAA,EAAIA,EAAAA,KAAAA,GAEXD,GAAAA,EAAE7B,WAAa8B,EAAE9B,SACV,OAAA,EAAI8B,EAAAA,KAAAA,GAEXD,GAAAA,EAAE0B,YAAczB,EAAEyB,UACX,OAAA,EAAIzB,EAAAA,KAAAA,GAEXD,GAAAA,EAAE1B,UAAY2B,EAAE3B,QACT,OAAA,EAAI2B,EAAAA,KAAAA,GAEXA,GAAAA,EAAE3C,MAAM8G,aACD,OAAA,EAAInE,EAAAA,KAAAA,GAEX,GAAA,YAAaA,EAAE3C,QAAU2C,EAAE3C,MAAM+G,QAC1B,MAAA,GAOa9F,IAJlB+F,IAAAA,GAAY,EAAKtE,EAAAA,MAAAA,EAAE1C,MAAO2C,EAAE3C,OAG5BiH,GAAqB,EAAKvE,EAAAA,MAAAA,EAAEvB,eAAgBwB,EAAExB,gBAC5BF,EAAAA,EAAAA,EAAAA,OAAOC,KAAK+F,GAAqB,EAAA,EAAA,OAAA,IAAA,CAA9C5F,IAAAA,EAAN,EAAA,GACG4F,EAAmB5F,KAAeoB,EAAKc,KAAAA,QAAQtB,SAC1CgF,EAAmBxE,EAAKc,KAAAA,QAAQjB,QACjC2E,EAAmBxE,EAAKc,KAAAA,QAAQjB,MAAQ,CAACmD,gBAAiB,KAE9DwB,EAAmBxE,EAAKc,KAAAA,QAAQjB,MAAMmD,gBAAgBpE,GAAaqB,EAAEvB,eAAeE,IAQ1EJ,IADZiG,IAAAA,EAAe,GACHjG,EAAAA,EAAAA,EAAAA,OAAOC,KAAKyB,EAAE0B,UAAW,EAAA,EAAA,OAAA,IAAA,CAAhChB,IAAAA,EAAN,EAAA,GACKA,KAAOX,EAAE2B,WACX6C,EAAa7D,IAAO,EAAIV,EAAAA,KAAAA,EAAE0B,SAAShB,KAGzBpC,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAOC,KAAKwB,EAAE2B,UAAW,EAAA,EAAA,OAAA,IAAA,CAAhChB,IAAAA,EAAN,EAAA,GACGA,GAAAA,KAAOV,EAAE0B,SAAU,GACnBlB,EACMgE,IAEAC,EAAYP,EAAanE,EAAE2B,SAAShB,GAAMV,EAAE0B,SAAShB,MACvD,EAAY+D,EAAAA,aAAAA,IAAcA,IAAc3E,EAAKc,KAAAA,QAAQtB,QAAUhB,OAAOC,KAAKkG,GAAWhG,OAAS,KAC/F8F,EAAa7D,GAAO+D,QAIxBF,EAAa7D,GAAOZ,EAAKc,KAAAA,QAAQtB,OAMnCiB,IAAAA,EAAS,GAaRA,OAZHjC,OAAOC,KAAK8F,GAAW5F,OAAS,IAChC8B,EAAOlD,MAAQgH,GAEf/F,OAAOC,KAAK+F,GAAoB7F,OAAS,IACzC8B,EAAO/B,eAAiB8F,GAExBhG,OAAOC,KAAKgG,GAAc9F,OAAS,IACnC8B,EAAOmB,SAAW6C,GAEtBhE,EAAOT,EAAKc,KAAAA,QAAQhB,KAAOI,EAGpBO,EAGX,SAASmE,EAASC,GACV,IAACA,EACM,MAAA,GAIiBC,IAFtBA,IACArE,EAAS,GACaqE,EAAAA,EAAAA,EAFd9F,MAAMC,KAAK4F,GAEU,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAvBnH,EAAAA,EAAAA,KAAML,EAAAA,EAAAA,MACdoD,EAAO/C,GAAQL,EAEZoD,OAAAA,EAGX,SAASsE,EAAY7F,GACb,IAACA,EACM,MAAA,GAIN,IAFC0C,IAAAA,EAAW5C,MAAMC,KAAKC,GACtBuB,EAAS,GACNC,EAAI,EAAGA,EAAIkB,EAASjD,OAAQ+B,IAAK,CAChCvB,IAAAA,EAAQyC,EAASlB,GAEvBD,EADYtB,EAAM6F,cAAgB7F,EAAM6F,aAAa,YAAc7F,EAAM8F,aAAa,YAAcpI,OAAO6D,IAC7FwE,EAAkB/F,GAE7BsB,OAAAA,EAGX,SAASyE,EAAkBC,GAChB,MAAA,CACH/G,SAAU+G,EAAW/G,SACrBuD,UAAWZ,EAAcoE,EAAWC,cACpC7G,QAAS4G,EAAW5G,QACpBhB,MAAOqH,EAASO,EAAWN,YAC3BjD,SAAUmD,EAAYI,EAAWjG,YACjC6E,KAAMoB,EAAWpB,MAQzB,IAAMsB,EAAa,SAAA1D,GAAa,OAAA,IAAI2D,MAAMlE,EAAY,CAClDmE,IAAIC,SAAAA,EAAQC,GACFC,IAAAA,EAAS,WAACnH,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,MAAOhB,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAIqE,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAC9C9E,EAAU,CACZ6E,UAAWZ,EAAcY,GACzBpD,QAAAA,EACAhB,MAAO,GACPqE,SAAU,GACVlD,eAAgB,IAEf,IAAA,IAAMjB,KAAQF,EACXE,GAAAA,EAAKkB,OAAS,GAAKlB,EAAKqE,WAAW,OAASrE,EAAK,KAAOA,EAAK,GAAGkI,cAAe,CACzE/G,IAAAA,EAAYnB,EAAK,GAAGI,cAAgBJ,EAAKmI,MAAM,GAC/C9G,EAAWvB,EAAME,GACnB,GAAoB,mBAAbqB,EAAyB,CAChC+G,QAAQC,MAAM,IAAI3H,MAASS,GAAAA,OAAAA,EAA3B,+BACA,SAEJ9B,EAAQ4B,eAAeE,GAAaE,OAEpChC,EAAQS,MAAME,GAASF,EAAME,GAG/BsI,IArBqD,EAqBrDA,EAAQ,GACGnE,EAAAA,EAAAA,EAASoE,OAAO,SAAA9D,GAAKA,OAAAA,KAtBqB,IAsBjB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjChB,IAAAA,EAAiC,EAAA,MACtCA,EAAOD,EAAQC,GACXlC,MAAMoB,QAAQc,GACd6E,EAAM3I,KAAN2I,MAAAA,EAAc7E,EAAAA,EAAK8E,OAAO,SAAA9D,GAAKA,OAAAA,MAE/B6D,EAAM3I,KAAK8D,IA3BwC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA+BtD,IADC+E,IAAAA,EAAiB,IAAIC,IAClBxF,EAAI,EAAGA,EAAIqF,EAAMpH,OAAQ+B,IAAK,CAC7BQ,IAAAA,EAAO6E,EAAMrF,GACbE,EAAMM,EAAK3D,OAAS2D,EAAK3D,MAAM2F,MAAQrG,OAAOqE,EAAK3D,MAAM2F,MACzDiD,EAAQtJ,OAAO6D,IACjBE,GAASA,KAAO9D,EAAQ8E,UAGpBhB,KAAO9D,EAAQ8E,UACfqE,EAAeG,IAAIxF,GAEvB9D,EAAQ8E,SAASuE,GAASjF,GAL1BpE,EAAQ8E,SAAShB,GAAOM,EAWzBpE,OAHHmJ,EAAeI,KAAO,GACtBR,QAAQC,MAAM,IAAI3H,MAAkB8H,QAAAA,OAAAA,EAAAA,GAApC,2BAEGnJ,GA4BJwJ,OA1BEA,SAAAA,EAAc5I,EAAMH,GAClB,OAAA,IAAI+H,MAAM,WAAI1D,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAa,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAbA,EAAa,GAAA,UAAA,GAC1B5C,OAAAA,MAAMoB,QAAQwB,EAAS,KAAO,QAASA,EAAS,GACzC8D,EAAOhI,EAAMH,EAAO6D,EAAA,WAAcQ,EAAAA,IAEtC8D,EAAOhI,EAAMH,EAAOqE,IAC5B,CACC2D,IAAIC,SAAAA,EAAQ/H,GACD,OAAA,SAAUJ,GACTI,GAAS,WAATA,EACO6I,OAAAA,EAAc5I,EAAUH,EAAAA,GAAAA,EAAUF,GAAAA,IAEzC2B,GAAAA,MAAMoB,QAAQ/C,IAAU,QAASA,EAAO,CAJrBkJ,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAIqB,IAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAJrBA,EAIqB,EAAA,GAAA,UAAA,GACjCD,OAAAA,EAAc5I,EAAUH,EAAAA,GAAAA,EAAQE,EAAAA,GAAAA,EAAO2D,EAAA,WAAW/D,EAAAA,CAAAA,GAAUkJ,OAAAA,IAAOjJ,KAAK,OAE5EgJ,OAAAA,EAAc5I,EAAUH,EAAAA,GAAAA,EAAQE,EAAAA,GAAAA,EAAOJ,OAGtDmJ,MAAMhB,SAAAA,EAAQiB,EAASC,GACf1H,OAAAA,MAAMoB,QAAQsG,EAAS,KAAO,QAASA,EAAS,GACzChB,EAAOhI,EAAMH,EAAO6D,EAAA,WAAcsF,EAAAA,EAAAA,KAEtChB,EAAOhI,EAAMH,EAAOmJ,MAIhCJ,CAAcb,EAAK,QAIrBnH,EAAI+G,EAAW,gCAiE5B,QAAA,EAAA,EAhEO,IAAMsB,EAAItB,EAAW,8BAgE5B,QAAA,EAAA,EA/DO,IAAMuB,GAAIvB,EAAW,sCA+D5B,QAAA,EAAA;;AChfC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EArCD,IAAA,EAAA,QAAA,gBACMwB,EAAa,SAAAC,GAAY,OAAA,IAAIC,IAAID,GAAUE,SAASC,MAAM,KAAKrB,MAAM,GAAI,GAAGtI,KAAK,MACxE,SAAS4J,EAAAA,EAAWC,GACzBC,IAAAA,EAAOD,EAAaF,MAAM,KAAKrB,OAAO,GAAG,GAC3C,IAAC,CAAC,MAAO,QAAQyB,SAASD,GACpB,MAAA,IAAIjJ,MAA6BiJ,uBAAAA,OAAAA,EAAvC,oDAEEE,IAAAA,EAAe,WAAWC,KAAKJ,GAE/BK,EADaX,EAAWK,GAAWD,MAAM,KAAKrB,MAAM,GAAGtI,KAAK,MACnCgK,EAAeH,EAAaxJ,QAAQ,SAAU,IAAM,IAAMwJ,GAElF,OAAA,IAAIM,QAAQ,SAAAC,GACTC,IAAAA,GAAO,EAAIrJ,EAAAA,KAAAA,EAAEqJ,EAAAA,KACdC,IAAiBR,aAAAA,OAAS,SAATA,EAAkB,QAAU,KAC7CA,KAAK,YACLS,KAAKL,EAHOlJ,IAIb8I,GAAS,SAATA,EAAiB,CACb,IAAC3F,SAASqG,KAAKC,cAAc,yBAA0B,CACjDC,IAAAA,EAAO1J,EAAE2J,EAAAA,OAAOC,IAAI,UAAb5J,GACbmD,SAASqG,KAAKzI,QAAO,EAAI2I,EAAAA,KAAAA,IAE7BvG,SAASqG,KAAKzI,OAAOsI,GACZQ,SAAAA,IACS1G,SAASqG,KAAKC,cAA4BP,cAAAA,OAAAA,EAASP,MAAM,KAAK,GAAGtJ,QAAQ,MAAO,KAA9F,OAGIyK,OAAOC,WAAWX,EAAS,KAE3BU,OAAOC,WAAWF,EAAQ,IAGlCA,QAEA1G,SAASqG,KAAKzI,OAAOsI,GACrBA,EAAK5I,iBAAiB,OAAQ,WAAM2I,OAAAA;;AClCzC,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAAA,IAAM3C,EAAc,SAAAnD,GACjBmE,IAD6B,EAC7BA,EAAQ,GACKnE,EAAAA,EAAAA,GAFgB,IAEN,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBV,IAAAA,EAAkB,EAAA,MACrBlC,MAAMoB,QAAQc,GACd6E,EAAM3I,KAAN2I,MAAAA,EAAc7E,EAAAA,IACW,mBAAVA,EACf6E,EAAM3I,KAAK8D,KAEX6E,EAAM3I,KAAK8D,IARgB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAW5B6E,OAAAA,GAXJ,QAAA,YAAA;;ACqCA,aAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,QAAA,UAAA,QAAA,kBAAA,EArCP,IAAMuC,EAAO,SAAAC,GAAa,OAAA,SAAAC,GAClBD,IACiB,mBAANC,EACPA,IAEA3C,QAAQ4C,IAAID,MAIlBE,EAAe3K,OAAO,UACf4K,EAAe5K,OAAO,OA2B5B,QAAA,aAAA,EA1BPqK,OAAOM,GAAgB,GAEhB,IAAME,EAAY,SAAAC,GACrBT,OAAOM,GAAgBG,GAG3B,SAASC,EAAaC,GACdC,IADsB,EACtBA,EAAUZ,OAAOM,GACDK,EAAAA,EAAAA,GAFM,IAEE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBE,IAAAA,EAAiB,EAAA,MACrBD,GAAAA,GAAWL,KAAgBK,EACnB,OAAA,EAEP,KAAEA,GAAWC,KAASD,GACf,OAAA,EAEXA,EAAUA,EAAQC,IATI,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWnB,OAAA,EAGX,SAASC,EAAeH,GACb,OAAA,IAAIzD,MAAM,SAAAkD,GAAKF,OAAAA,EAAKQ,EAAaC,GAAlBT,CAA2BE,IAAI,CACjDjD,IAAK,SAACC,EAAQyD,GAAUC,OAAAA,EAAmBH,GAAAA,OAAAA,EAAAA,GAAQE,CAAAA,QAIpD,QAAA,UAAA,EAAA,IAAMR,EAAMS,EAAe,IAA3B,QAAA,IAAA;;ACqUQC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1Wf,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,cACA,EAAA,QAAA,iBAGA,EAAA,EAAA,QAAA,eACA,EAAA,QAAA,eACA,EAAA,QAAA,gBAmWeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,KAAAA,GAAAA,GAAAA,OAAAA,sBAAAA,CAAAA,IAAAA,EAAAA,OAAAA,sBAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,SAAAA,GAAAA,OAAAA,OAAAA,yBAAAA,EAAAA,GAAAA,cAAAA,EAAAA,KAAAA,MAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,UAAAA,OAAAA,IAAAA,CAAAA,IAAAA,EAAAA,MAAAA,UAAAA,GAAAA,UAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,OAAAA,IAAAA,GAAAA,QAAAA,SAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,MAAAA,OAAAA,0BAAAA,OAAAA,iBAAAA,EAAAA,OAAAA,0BAAAA,IAAAA,EAAAA,OAAAA,IAAAA,QAAAA,SAAAA,GAAAA,OAAAA,eAAAA,EAAAA,EAAAA,OAAAA,yBAAAA,EAAAA,MAAAA,OAAAA,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,SAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,MAAAA,EAAAA,OAAAA,UAAAA,CAAAA,GAAAA,MAAAA,QAAAA,KAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAAA,aAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,OAAAA,CAAAA,MAAAA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,SAAAA,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yIAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,OAAAA,aAAAA,EAAAA,WAAAA,IAAAA,EAAAA,EAAAA,OAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,KAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,wIAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,OAAAA,MAAAA,KAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,mBAAAA,QAAAA,iBAAAA,OAAAA,SAAAA,SAAAA,GAAAA,cAAAA,GAAAA,SAAAA,GAAAA,OAAAA,GAAAA,mBAAAA,QAAAA,EAAAA,cAAAA,QAAAA,IAAAA,OAAAA,UAAAA,gBAAAA,IAAAA,GAjWf,IAAMC,EAAM,SAAAC,GAAS,OAAA,SAAAC,GACbC,IAAAA,EAMG/K,MALY,WAAf,EAAO8K,GACPC,EAAYD,EACU,mBAARA,IACdC,EAAYD,EAAID,IAEb7K,OAAOgL,OAAO,GAAIH,EAAOE,KAGpC,SAAS3E,EAAS9H,GACVA,GAAqB,IAArBA,EAAQsB,SACD,MAAA,GAGN,IADCb,IAAAA,EAAQ,GACLmD,EAAI,EAAGA,EAAI5D,EAAQ+H,WAAWlG,OAAQ+B,IAAK,CAC1C+I,IAAAA,EAAO3M,EAAQ+H,WAAWnE,GAChCnD,EAAMkM,EAAK/L,MAAQ+L,EAAKpM,MAErBE,OAAAA,EAGX,SAASmM,EAAO5M,GACZ+I,QAAQ4C,IAAI,SAAS,EAAM,EAAA,SAAA,CACvBkB,MAAO,QACPC,gBAAiB,SACjB9M,GAGR,SAAS+M,EAAU/M,GACf+I,QAAQ4C,IAAI,SAAS,EAAM,EAAA,SAAA,CACvBkB,MAAO,MACPC,gBAAiB,SACjB9M,GAGR,SAASgN,EAAQC,GACT/K,GAAAA,MAAMoB,QAAQ2J,GAAY,CACpBC,IAAAA,EAAWvI,SAASwI,yBAEnBD,OADPA,EAAS3K,OAAT2K,MAAAA,EAAmBD,EAAAA,EAAU9H,IAAI,SAAAC,GAAK4H,OAAAA,EAAQ5H,OACvC8H,EAEH,MAAqB,mBAAdD,EAA4BA,IAAcA,EAG7D,SAASG,EAAcpN,EAASqN,GACxBrN,SAAAA,GAAYqN,KAGZrN,EAAQsB,WAAa+L,EAAW/L,UAGhCtB,EAAQsN,WAAaD,EAAWC,UAMxC,SAASC,EAAqBC,GACpBC,IAAAA,EAAgB,IAAIjF,MAAM,GAAI,CAChCC,IAAIC,SAAAA,EAAQ9H,GAID8H,OAHD9H,KAAQ8H,IACVA,EAAO9H,GAAQ,IAEZ8H,EAAO9H,MAIf,OAAA,SAAU8M,GACP9E,IAAAA,EAAS,WAACnI,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAIqE,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAE7B6I,EAAsB1M,OAAOuM,GAyB/BjB,IAAAA,EAAQ,GAURvM,EAAU,GAGV4N,EAAe,EACbC,EAAW,IAAIrF,MAAM,GAAI,CAC3BC,IAAIC,SAAAA,EAAQ9H,GAYD8H,OAXD9H,KAAQ8H,IACVA,EAAO9H,GAAQ,CACXkN,MAAO,EACPC,QAAS,IAEbrF,EAAO9H,GAAMoN,KAAO,WAChBJ,IACAlF,EAAO9H,GAAMkN,QACbpF,EAAO9H,GAAMmN,QAAQzN,KAAKsN,KAG3BlF,EAAO9H,MAgBlBqN,IAAAA,EAAqB,GAenBC,IASAC,EAAa,WAAM5B,OAAAA,GACzB4B,EAAW7B,IAvBF8B,SAASC,GACF9B,EAGQ7K,IAFd4M,IAuHAjB,EAEAhI,EACAkJ,EAEAC,EA5HAF,EAAqC,mBAAbD,EAA0BA,EAAS9B,GAAS8B,EACpEI,EAAS,GACK/M,EAAAA,EAAAA,EAAAA,OAAOC,KAAK2M,GAAiB,EAAA,EAAA,OAAA,IAC7CG,EADC,EAAA,KACe,EAEpBR,EAAqBQ,EAErBlC,EAAQD,EAAIC,EAAJD,CAAW+B,GAgHbhB,GAAa,EAAQqB,EAAAA,SAAAA,KAErBrJ,EAAMrF,EAAQqF,IACdkJ,EAAgBvO,EAAQiN,UAExBuB,GAAc,EAAaxO,EAAAA,cAAAA,EAASqN,IAM1CrN,EAAUqN,GAEFJ,UAAYsB,EAGhBlJ,IAGArF,EAAQqF,IAAMA,GAGLA,EAAAA,EAAAA,UAAAA,EAAIE,IAAKiJ,KAvH1BL,EAAWQ,KArCFC,SAAUC,GACkB,IAA7BhB,EAASe,UAAUd,QACdL,EAAcmB,UAAUd,QACzBL,EAAcmB,UAAUd,MAAQ,EAChC/E,QAAQC,MAAM,IAAI3H,MAAM,8CAGhCwM,EAASe,UAAUZ,OACnBzB,EAAQsC,GA8BZV,EAAWW,SAZS,WAAIC,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAU,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAVA,EAAU,GAAA,UAAA,GACXA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAO,EAAA,EAAA,OAAA,IAAA,CAAfnO,IAAAA,EAAN,EAAA,GACGqN,GAAAA,EAAmBrN,GACZ,OAAA,EAGR,OAAA,GAkBXZ,EAAQ2N,IAAuB,EAEzBqB,IAuBFC,GAAc,EAGZC,EAAW,GAEXC,EAAK,IAAIC,iBAAiB,SAAUC,EAAWC,GAK7CtP,EAAQqF,KAAOrF,EAAQqF,IAAIE,IAAIgK,QAAQ,SAKvCL,EAASxN,OAAOC,KAAKuN,GAAUrN,QAAU,CACrC2N,OAAO,EACPxP,QAASA,EAAQyP,WAQjBR,IACA3D,OAAOoE,cAAc,IAAIC,YAAY,WAAY,CAC7CC,OAAQ,CACJjC,oBAAqBA,MAG7BsB,GAAc,EACdE,EAAGU,gBAKPZ,GAAc,EACdE,EAAGU,gBAGXV,EAAGW,QAAQnL,SAAU,CACjBoD,YAAY,EACZgI,WAAW,EACXC,SAAS,IAIbvP,EAAMqE,SAAWA,EACX4J,IAAAA,EAAShB,EAAc,CACzBjN,MAAAA,EACA8L,MAAO4B,EACP8B,MAAO,CACHjB,SA5ES,SAAAkB,GAiBbrC,EAASmB,SAAShB,OACO1C,OAAOrJ,iBAAiB,WAjBxCkO,SAAWC,GAEZA,EAAMR,OAAOjC,sBAAwBA,IACjCV,EAAAA,IAAAA,UAAU,cAQdiD,OAMiE,OA6FzEhO,GAFJlC,GAAU,EAAQ0O,EAAAA,SAAAA,KAEdxM,MAAMoB,QAAQtD,GAAU,CACLA,IADK,EACLA,EAAAA,EAAAA,GADK,IACI,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CACxBqQ,EADwB,EAAA,MACD,CAACzN,OAAO,KAFX,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,UAKxByN,EAAiBrQ,GAGZqQ,SAAAA,EAAiBrQ,GAA2B,IAAjB4C,GAAiB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAAjBA,MAAAA,OAAQ,IAAA,GAAa,EAChD5C,EAAQiN,YACTjN,EAAQiN,UAAY,CAACd,MAAO,IAE1BA,IAAAA,EAAQnM,EAAQiN,UAAUd,MAChCnM,EAAQiN,UAAUlN,OAAOoM,IAAU,CAC/BvJ,MAAAA,EACAhC,KAAM4M,EACN/M,MAAAA,EACA8L,MAAAA,GAEJvM,EAAQiN,UAAUd,QAcf,OAAA,WAAMnM,OAAAA,IAmBVwJ,OAhBEA,SAAAA,EAAc/I,GACZ,OAAA,IAAI+H,MAAM,WAAI1D,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAJ,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAIA,EAAJ,GAAA,UAAA,GAAiB8D,OAAAA,EAAO,GAAI9D,IAAW,CACpD2D,IAAIC,SAAAA,EAAQ/H,GACD,OAAA,SAAUJ,GAENiJ,OAAAA,EACA/I,EAAAA,GAAAA,EACFE,EAAAA,GAAAA,EAAOJ,OAIpBmJ,MAAMhB,SAAAA,EAAQiB,EAASC,GACZhB,OAAAA,EAAOnI,EAAOmJ,MAI1BJ,CAAc,KAI7B,IAAM6C,EAAY,IAAI7D,MAAM,GAAI,CAC5BC,IAAK,SAAUC,EAAQ8E,GACZD,OAAAA,EAAqBC,MAIrBnB,EAAAA,EAAAA,QAAAA,QAAAA;;AC3RR,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,UAAA,QAAA,oBAAA,EA/EP,IAAA,EAAA,QAAA,cA+EO,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxEP,IAAMiE,EAAgB,IAAIX,YAAY,iBAEtC,SAASY,EAAUtJ,EAAMuJ,EAAOC,GAC5BC,QAAQH,UAAUtJ,EAAMuJ,EAAOC,GAC/BnF,OAAOoE,cAAcY,GAGzB,SAASK,EAAa1J,EAAMuJ,EAAOC,GAC/BC,QAAQC,aAAa1J,EAAMuJ,EAAOC,GAClCnF,OAAOoE,cAAcY,GAGzBhF,OAAOrJ,iBAAiB,WAAY,WAAMqJ,OAAAA,OAAOoE,cAAcY,KAExD,IAAMM,EAAiB,SAACC,GACvB,IAAClM,SAASmM,SAASC,OACZ,MAAA,CAAC1J,OAAQ,GAAI2J,KAAM,IAAKH,OAAQA,EAAO,KAE5CxJ,IAJgC,EAKhC4J,EAAQ,GACQ5J,EAAAA,EAFP,IAAI6J,gBAAgBvM,SAASmM,SAASC,SAJf,IAMR,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,IAAlBI,EAAkB,EAAA,EAAA,MAAA,GAAA,GACT,MAAbA,EAAM,IACNF,EAAM3Q,KAAN2Q,MAAAA,EAAcE,EAAAA,EAAMrI,MAAM,GAAGqB,MAAM,QARL,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWlCiH,IAAAA,EAAe,GACfC,EAAa,KACZ,IAAA,IAAML,KAAQH,EAAO,IAAK,CAItB,IAHCS,IAAAA,EAAYN,EAAK7G,MAAM,KACvB9C,EAAS,GACXkK,GAAQ,EACH3N,EAAI,EAAGA,EAAI0N,EAAUzP,OAAQ+B,IAAK,CACnCA,GAAAA,IAAMqN,EAAMpP,OAAQ,CACpB0P,GAAQ,EACR,MAEEpF,IAAAA,EAAQmF,EAAU1N,GACpBuI,GAAa,MAAbA,EAAM,GACN9E,EAAO8E,EAAMrD,MAAM,IAAMmI,EAAMrN,QAC5B,GAAIuI,IAAU8E,EAAMrN,GAAI,CAC3B2N,GAAQ,EACR,OAGJA,IACAH,EAAe/J,EACfgK,EAAaL,GAGd,MAAA,CAAC3J,OAAQ+J,EAAcJ,KAAMK,EAAYR,OAAQA,EAAOO,KAuB5D,QAAA,eAAA,EApBA,IAAMI,EAAYnF,EAAUmF,UAAAA,UAAU,SAA+B,GAA7B/Q,IAAAA,EAAAA,EAAAA,MAAQsK,EAAAA,EAAAA,KAAMjG,EAAAA,EAAAA,SAClD,OAAA,WAcItD,OAAAA,EAAEiQ,EAAAA,EAAE1G,KAAKA,GAAM2G,QAbF,SAACtB,GACjBA,EAAMuB,iBACO,MAAT5G,IAIEO,OAAOoF,QAAQnE,OAAS,IAAI0E,OAAS,IAAIzQ,KAAK,OAASuK,GAG7DwF,EAAU,CACNU,MAAOlG,EAAKZ,MAAM,MACnB,GAAI,KAAOY,GARVwF,EAAU,CAACU,MAAO,IAAK,GAAI,MAU5BzP,CAAoCsD,MAK5C,QAAA,UAAA,EAAA,IAAM8M,EAASvF,EAAUuF,UAAAA,OAAO,SAAoB,GAAlBnR,IAAAA,EAAAA,EAAAA,MAAO8L,EAAAA,EAAAA,MAKrC,OAJPA,EAAMoC,KAAKiC,EAAenQ,EAAMoQ,SAChCvF,OAAOrJ,iBAAiB,gBAAiB,WACrCsK,EAAMD,IAAIsE,EAAenQ,EAAMoQ,WAE5B,WACoBtE,IAAAA,EAAAA,IAAhByE,EAAAA,EAAAA,KACAH,OADMA,EAAAA,OACCG,MAPf,QAAA,OAAA;;ACrDQ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA1Bf,IAAA,EAAA,QAAA,cA0Be,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,WAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,IAAA,CAAA,IAAA,EAAA,EAAA,MAAA,YAAA,EAAA,QAAA,UAAA,EAAA,UAAA,QAAA,EAAA,EAAA,MAAA,KAAA,WAAA,OAAA,EAAA,KAAA,IAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,IAAA,IAAA,SAAA,EAAA,OAAA,EAAA,SAAA,GAAA,GAAA,OAAA,IAAA,EAAA,GAAA,OAAA,EAAA,GAAA,mBAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,QAAA,IAAA,EAAA,CAAA,GAAA,EAAA,IAAA,GAAA,OAAA,EAAA,IAAA,GAAA,EAAA,IAAA,EAAA,GAAA,SAAA,IAAA,OAAA,EAAA,EAAA,UAAA,EAAA,MAAA,aAAA,OAAA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cAAA,KAAA,EAAA,EAAA,KAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,QAAA,UAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,CAAA,MAAA,EAAA,KAAA,MAAA,EAAA,GAAA,IAAA,EAAA,IAAA,SAAA,KAAA,MAAA,EAAA,IAAA,OAAA,GAAA,EAAA,EAAA,EAAA,WAAA,IAAA,MAAA,KAAA,WAAA,SAAA,IAAA,GAAA,oBAAA,UAAA,QAAA,UAAA,OAAA,EAAA,GAAA,QAAA,UAAA,KAAA,OAAA,EAAA,GAAA,mBAAA,MAAA,OAAA,EAAA,IAAA,OAAA,KAAA,UAAA,SAAA,KAAA,QAAA,UAAA,KAAA,GAAA,gBAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,OAAA,IAAA,SAAA,SAAA,KAAA,GAAA,QAAA,iBAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAxBf,IAAIlD,EAAS,EACb,SAAS+D,EAAUjR,EAAMsO,EAAUF,GACzB8C,IAAAA,EADmC,SAAA,GAAA,EAAA,EACbC,EAAAA,cADa,IAAA,EAAA,EAAA,GAEvB,SAAA,IAAA,IAAA,EAAA,OAAA,EAAA,KAAA,IACV,EAAA,EAAA,KAAA,OAEoBC,aAAa,CAACC,KAAM,SACjC1P,OAAOf,EAAE0Q,EAAAA,KAAKtR,KAAK,eAAZY,IAJJ,EAFuB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,oBASjB,MAAA,WAChBwN,EAASE,OAVwB,EAAA,GAazCpB,IACMqE,IAAAA,EAAuBvR,UAAAA,OAAAA,EAAQkN,KAAAA,OAAAA,GAE9BtM,OADP4Q,eAAeC,OAAOF,EAAYL,GAC3BtQ,EAAE2Q,EAAAA,GACL3Q,EAAEgF,EAAAA,IAAI0L,KAAK,eAAX1Q,CACI0N,IAKG7C,IAAAA,EAAAA,EAAUiG,UAAAA,OAAO,WACrB,OAAA,SAAgC,GAC5BT,OAAAA,EADFjR,EAAAA,KAAMkE,EAAAA,SAAUkK,EAAAA,aADd,QAAA,QAAA;;ACuCf,aAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,GAAA,yCAAA,QAAA,QAAA,OAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,aAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,WAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,IAAA,IAAA,EAAA,EAAA,CAAA,KAAA,IAAA,IAAA,IAAA,QAAA,YAAA,IAAA,IAAA,aAAA,IAAA,IAAA,aAAA,KAAA,IAAA,IAAA,IAAA,KAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,GAAA,gBAAA,IAAA,IAAA,IAAA,IAAA,eAAA,IAAA,IAAA,IAAA,IAAA,KAAA,eAAA,IAAA,IAAA,KAAA,eAAA,IAAA,IAAA,IAAA,KAAA,MAAA,IAAA,KAAA,mBAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,YAAA,KAAA,IAAA,IAAA,MAAA,YAAA,OAAA,EAAA,WAAA,OAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,IAAA,EAAA,EAAA,MAAA,IAAA,OAAA,OAAA,OAAA,iBAAA,EAAA,CAAA,IAAA,CAAA,MAAA,OAAA,OAAA,OAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,6IAAA,SAAA,EAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,CAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,GAAA,QAAA,KAAA,QAAA,GAAA,QAAA,GAAA,QAAA,IAAA,QAAA,MAAA,QAAA,SAAA,EAjEO,IAAMuD,EAAM,IAAI/J,MAAM,GAAI,CAC7BC,IAAK,SAACC,EAAQ9H,GAAS,OAAA,SAAA4R,GAAQ,MAAA,CAAMA,KAAAA,OAAAA,EAAU5R,MAAAA,EAAM,QAgEzD,QAAA,IAAA,EA7DO,IAAMiM,EAAQ,IAAIrE,MAAM,GAAI,CAC/BC,IAAK,SAACC,EAAQ9H,GAAS,OAAA,SAAA4R,GAAQD,OAAAA,EAAa3R,SAAAA,OAAAA,IAAQ4R,OAIjD,SAASC,EAAaC,GAAaC,IAChCC,IAAAA,EAAS,GACTJ,EAAO,GAFyBG,EAAAA,UAAAA,OAAAA,EAAM,IAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAANA,EAAM,EAAA,GAAA,UAAA,GAGvC,IAAA,IAAI/O,EAAI,EAAGA,EAAI8O,EAAS7Q,OAAS,EAAG+B,IAAK,CACpCiP,IAAAA,EAAIH,EAAS9O,GACbkP,EAAIH,EAAK/O,GAAG,GAClB4O,EAAKlS,KAAKuS,EAAGC,GACPC,IAAAA,EAAQJ,EAAK/O,GAAG,GACtBgP,EAAOtS,KAAPsS,MAAAA,EAAgB1Q,EAAAA,MAAMoB,QAAQyP,GAASA,EAAQ,CAACA,EAAOJ,EAAK/O,GAAG,MAG5D,OADP4O,EAAKlS,KAAKoS,EAASA,EAAS7Q,OAAS,IAC9B,CAAC2Q,EAAKhS,KAAK,IAAKoS,GA6C3B,QAAA,MAAA,EA1CO,IAAMI,EAAM,IAAIxK,MAAM,GAAI,CAC7BC,IAAK,SAACC,EAAQ9H,GAAS,OAAA,SAAAgS,GAAUA,OAAAA,EAAOzN,IAAI,SAAAC,GAAQA,MAAAA,GAAAA,OAAAA,EAAKxE,KAAAA,OAAAA,SAyC7D,QAAA,IAAA,EAtCA,IAAMqS,EAAa,SAAApG,GAAS,OAAA,SAAAzH,GAAK4N,OAAAA,EAAwBnG,oBAAAA,OAAAA,IAASzH,KAG5DgB,EAAO,SAAAoM,GAAQ3F,OAAAA,EAAM,WAAW2F,IAChCU,EAAQ,SAAAV,GAAQ3F,OAAAA,EAAM,WAAW2F,IACjCW,EAAO,SAAAX,GAAQ3F,OAAAA,EAAM,WAAW2F,IAChCY,EAAS,SAAAZ,GAAQ3F,OAAAA,EAAM,WAAW2F,IAClCa,EAAM,SAAAb,GAAQ3F,OAAAA,EAAM,WAAW2F,IAC/B3I,EAAI,CACN/F,IAAKsC,EACLkN,KAAMJ,GAGaT,EAAAA,EACrB5I,IAAAA,EAAE/F,IAAe+F,KAAAA,EAAE/F,IAAiB+F,KAAAA,EAAEyJ,KAAsBH,KAAAA,EAAK,YAAmBA,EAAK,QACrF/M,EAAK,SAAY+M,EAAK,UAAaE,EAAI,KACvCjN,EAAK,SAAY+M,EAAK,QAAWE,EAAI,KACrCjN,EAAK,OAAWA,EAAK,OAAU+M,EAAK,KAAQE,EAAI,KAAQD,EAAO,KAASD,EAAK,KAAQE,EAAI,KAAQF,EAAK,YAAeA,EAAK,UAAaE,EAAI,KAAQD,EAAO,KAASD,EAAK,KAAOE,EAAI,MAC/KjN,EAAK,SAAY+M,EAAK,KAAQE,EAAI,KAAQF,EAAK,YAAeA,EAAK,KACnE/M,EAAK,SAAY+M,EAAK,KAAQE,EAAI,KAAQF,EAAK,QAAWA,EAAK,KAASC,EAAO,KAC/ED,EAAK,QAAWE,EAAI,QAAWF,EAAK,KAASA,EAAK,KAClDA,EAAK,UAAaE,EAAI,QAAWF,EAAK,QAAWA,EAAK,KAASC,EAAO,KAAUD,EAAK,QAAWA,EAAK,KAASC,EAAO,KAEzHD,EAAK,QAAWE,EAAI,QAAWF,EAAK,YAAeA,EAAK,YAAeA,EAAK,UAAaE,EAAI,KAAQD,EAAO,KAC5GhN,EAAK,UAAc+M,EAAK,QAAWE,EAAI,QAAWF,EAAgBA,MAAAA,EAAK,WAc7E,EAAA,EAAA,EAAA,GAzBOX,EAAAA,EAAAA,GAAMI,EAcb,EAAA,GAEaW,EAAK,SAAAf,GAAQD,OAAAA,EAAI,qBAAqBC,IASnD,QAAA,GAAA,EARO,IAAMgB,EAAK,SAAAhB,GAAQD,OAAAA,EAAI,sBAAsBC,IAQpD,QAAA,GAAA,EAPO,IAAMiB,EAAO,SAAAjB,GAAQD,OAAAA,EAAI,0BAA0BC,IAO1D,QAAA,KAAA,EANO,IAAMkB,EAAK,SAAAC,GAAK,OAAA,SAAAnB,GAAQD,OAAAA,EAAkB,cAAA,OAAA,GAAKoB,EAAvB,OAA8BnB,KAM7D,QAAA,GAAA,EAJyBC,IAAAA,EAAAA,EAAeiB,IAAAA,EAAG,EAAHA,CAAM,gBAE5CH,EAAG,QAAeC,EAAG,UAAiBC,EAAK,QAE7C,EAAA,EAAA,EAAA,GAJOG,EAAAA,EAAAA,GAAOC,EAId,EAAA;;ACuEA,aAxIO,SAASC,EAAMC,GACZC,IAAAA,EAAS,GACTC,EAAQ,IAAIzL,MAAM,GAAI,CACxBC,IAAIC,SAAAA,EAAQ/H,GACD,OAAA,SAAAuT,GACHF,EAAOrT,GAAQuT,MAIpB,OAAA,SAAAC,GAGI,OADPJ,EAAY,CAACE,MAAAA,EAAOG,YADA,SAAAxL,GAAUA,OAAAA,EAAOuL,MAE9B,IAAI3L,MAAM,GAAI,CACjBC,IAAIC,SAAAA,EAAQ/H,GACDA,OAAAA,KAAQqT,EAASA,EAAOrT,UAAUiF,MA0HzD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,EAJA,IAAMyO,EAAI,CAAC5C,EAAG,GAEd,SAASrM,EAAEkP,IAEXlP,EAAEiP;;AC9HF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,QAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,QAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,MAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,IAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,KAAA,OAAA,eAAA,QAAA,IAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,KAAA,OAAA,eAAA,QAAA,IAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,KAAA,OAAA,eAAA,QAAA,YAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,UAAA,OAAA,eAAA,QAAA,YAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,aAAA,OAAA,eAAA,QAAA,iBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,kBAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,MAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,OAAA,OAAA,eAAA,QAAA,YAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,aAAA,OAAA,eAAA,QAAA,eAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,gBAAA,OAAA,eAAA,QAAA,eAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,gBAAA,OAAA,eAAA,QAAA,QAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,SAAA,OAAA,eAAA,QAAA,OAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,QAVA,IAAA,EAAA,EAAA,QAAA,aACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,aACA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,mBACA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,eACA,EAAA,QAAA,qBACA,EAAA,QAAA,cACA,EAAA,QAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACmBeE,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA7Bf,IAAA,EAAA,QAAA,wBA6BeA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,6IAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,IAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,cAAAA,GAAAA,EAAAA,EAAAA,QAAAA,QAAAA,EAAAA,KAAAA,EAAAA,QAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,IAAAA,MAAAA,GAAAA,GAAAA,EAAAA,EAAAA,EAAAA,QAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,GAAAA,OAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAnBf,QAAA,sBAEA,IAAMC,GAAI,EAAM,EAAA,OAAA,eAEVD,EAAclI,EAAUkI,UAAAA,YAAY,SAAa,GAAX9T,IAAAA,EAAAA,EAAAA,MACjC,OAAA,WAAMe,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACTf,EAAMgJ,MACLtE,IAAI,SAAevB,EAAAA,GAAM,IAAA,EAAA,EAAA,EAAA,GAAnBhD,EAAmB,EAAA,GAAbmK,EAAa,EAAA,GAChB0J,EAAO7Q,IAAMnD,EAAMgJ,MAAM5H,OAAS,EACjCL,OAAAA,EAAEoF,EAAAA,KACLpF,EAAEgF,EAAAA,IAAIG,MAAM,wBAAZnF,CACIiT,EAAO7T,EAAO4Q,EAAUzG,UAAAA,KAAKA,EAAfyG,CAAqB5Q,IAEvC6T,EAAO,GAAK,aAMbF,EAAAA,EAAAA,QAAAA,QAAAA;;AC7BA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACR,EAAA,CACCjK,KAAM,KACNoK,aAAc,sBACdlE,MAAO,qBACPmE,KAAM,CAAC,MAAO,SAEf,EAAA,CACCrK,KAAM,OACNoK,aAAc,sBACdlE,MAAO,kCACPmE,KAAM,CAAC,YAAa,aAErB,EAAA,CACCrK,KAAM,KACNoK,aAAc,sBACdlE,MAAO,gDACPmE,KAAM,CAAC,MAAO,WAEf,EAAA,CACCrK,KAAM,KACNoK,aAAc,sBACdlE,MAAO,wCACPmE,KAAM,CAAC,KAAM,gBAEd,EAAA,CACCrK,KAAM,KACNoK,aAAc,sBACdlE,MAAO,+DACPmE,KAAM,CAAC,MAAO,OAAQ,UAAW,oBA7B1B,QAAA,QAAA;;ACsBAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAtBf,IAAA,EAAA,QAAA,wBAYA,QAAA,iBAEA,IAAMJ,GAAI,EAAM,EAAA,OAAA,UAEVI,EAASvI,EAAUuI,UAAAA,OAAO,SAA+B,GAA7BnU,IAAAA,EAAAA,EAAAA,MAAQqE,EAAAA,EAAAA,SAAUyE,EAAAA,KACzC,OAAA,WAAM/H,OAAAA,EAAEqT,EAAAA,OAAOpO,MAAM+N,IAAfhT,CACTsD,MAIO8P,EAAAA,EAAAA,QAAAA,QAAAA;;ACtBf,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,uBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;AC2GA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,EA3GA,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,qBACA,EAAA,QAAA,cAyGA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvGO,SAASE,EAAWpJ,GAChB,MAAA,CACHqJ,GAAI,SAAAzK,GACM0K,IAAAA,EAAQ,CACVC,KAAM,WAAO,MAAA,CACTC,EAAG,SAAC3Q,GA2BK,IA1BC4Q,IAAAA,EAAiB5Q,EAAQY,IAAI,SAAA0N,GACzBlP,IAAAA,EAAS,GACTyR,EAAMvC,EAAEwC,MAAM,UAChB,IAACD,EACMvC,OAAAA,EAEPyC,IACA1R,EAPgC,EAMhC0R,EAAOzC,EAEMuC,EAAAA,EAAAA,GARmB,IAQd,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAXG,IAAAA,EAAW,EAAA,MAClB3R,EAAI0R,EAAKE,QAAQD,GACXE,IAAAA,EAAS,GACXF,GAAc,IAAdA,EAAG1T,OACH4T,EAAOnV,KAAKkB,EAAE+T,EAAAA,WAET,IAAA,IAAIG,EAAI,EAAGA,EAAI,EAAIH,EAAG1T,OAAS,EAAG6T,IACnCD,EAAOnV,KAAKkB,EAAE+T,EAAAA,MAGtB5R,EAAOrD,KAAPqD,MAAAA,EAAY2R,CAAAA,EAAKxM,MAAM,EAAGlF,IAAO6R,OAAAA,IACjCH,EAAOA,EAAKxM,MAAMlF,EAAI2R,EAAG1T,SAnBO,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAuB7B8B,OAFPA,EAAOrD,KAAKgV,GAEL3R,IAELa,EAAW2Q,EAAAA,EAAe,IACvBvR,EAAI,EAAGA,EAAIW,EAAQ1C,OAAQ+B,IAChCY,EAAKlE,KAALkE,MAAAA,EAAmBZ,CAAAA,EAAE,EAAFA,EAAAA,GAAAA,UAAAA,QAAAA,EAAE,EAAFA,OAAAA,EAAAA,UAAAA,EAAE,EAAOuR,IAAAA,OAAAA,EAAAA,EAAevR,MAExCY,OAAAA,GAEXgQ,EAAG,SAAA/R,GAAKjB,OAAAA,EAAEgT,EAAAA,EAAE/R,IACZmB,EAAG,SAAAnB,GAAKjB,OAAAA,EAAEoC,EAAAA,EAAEnB,IACZkT,KAAM,SAAAlT,GAAKjB,OAAAA,EAAEmU,EAAAA,KAAKlT,IAClBmT,IAAK,SAAAnT,GAAKjB,OAAAA,EAAEoU,EAAAA,IAAInT,IAChBoT,EAAG,SAAAlC,GAAK,OAAA,SAAAlR,GAAKjB,OAAAA,EAAMmS,EAAAA,IAAAA,OAAAA,IAAKlR,KACxBqT,EAAGtU,EAAE+T,EAAAA,GACL1O,EAAG,SAAApE,GAAKjB,OAAAA,EAAEqF,EAAAA,EAAEpE,IACZsT,IAAK,SAAC3K,EAAK4K,GAAQxU,OAAAA,EAAEuU,EAAAA,IAAI3K,IAAIA,GAAK4K,IAAIA,IACtCvE,EAAG,SAAA1G,GAAQ,OAAA,SAAAyH,GAAQhR,OAAAA,EAAEiQ,EAAAA,EAAE1G,KAAKA,EAATvJ,CAAegR,KAClCyD,SAAU,SAAAvK,GAAKA,OAAAA,EAAElK,EAAD,EAAI6K,EAAJ,cAEpB6J,SAAU,WAAO,MAAA,CACbhB,EAAG,SAAC3Q,GAEK,IADCC,IAAAA,EAAO,CAACD,EAAQ,IACbX,EAAI,EAAGA,EAAIW,EAAQ1C,OAAQ+B,IAChCY,EAAKlE,KAAcsD,EAAE,EAAFA,EAAAA,GAAAA,UAAAA,QAAAA,EAAE,EAAFA,OAAAA,EAAAA,UAAAA,EAAE,EAAIW,GAAAA,EAAQX,IAE9BY,OAAAA,EAAKhE,KAAK,KAErBgU,EAAG,SAAA/R,GAAUA,MAAAA,KAAAA,OAAAA,EAAT,OACJmB,EAAG,SAAAnB,GAASA,MAAAA,IAAAA,OAAAA,EAAR,MACJkT,KAAM,SAAAlT,GAAUA,MAAAA,IAAAA,OAAAA,EAAT,MACPoT,EAAG,SAAAlC,GAAK,OAAA,SAAAlR,GAAQ,MAAA,GAAA,OAAA,IAAI0T,OAAOxC,GAAMlR,KAAAA,OAAAA,KACjCqT,EAAG,OACHjP,EAAG,SAAApE,GAAYA,MAAAA,OAAAA,OAAAA,EAAX,SACJsT,IAAK,SAAC3K,EAAK4K,GAAaA,MAAAA,KAAAA,OAAAA,GAAO,GAAO5K,MAAAA,OAAAA,EAAjC,MACLqG,EAAG,SAAA1G,GAAQ,OAAA,SAAAyH,GAAYA,MAAAA,IAAAA,OAAAA,GAAQ,GAAOzH,MAAAA,OAAAA,EAAvB,SAEnBqL,eAAgB,WAAO,MAAA,CACnBlB,EAAGzC,EADgB,aAEnB+B,EAAGjB,EAFgB,GAGnB3P,EAAG4P,EAHgB,GAInBmC,KAAMlC,EAJa,KAKnBoC,EAAGnC,EALgB,GAMnBoC,EAAG,KACHjP,EAAG,SAAApE,GAAKA,OAAAA,GACRsT,IAAK,SAAC3K,EAAK4K,GAAQ,MAAA,CAAQ5K,OAAAA,OAAAA,GAAO,GAAQ4K,OAAAA,OAAAA,GAAO,IAAM,KACvDvE,EAAG,SAAA1G,GAAQ,OAAA,SAAAyH,GAAQ,MAAA,CAAIzH,GAAAA,OAAAA,EAASyH,MAAAA,OAAAA,EAAS,KAAA,SAG7ClI,GAAAA,GAAQA,KAAQ0K,EACTtJ,OAAAA,EAAEsJ,EAAM1K,MAET,MAAA,IAAIjJ,MAAwCK,kCAAAA,OAAAA,OAAOC,KAAKqT,GAAOxU;;ACCtE6V,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EArFf,IAAA,EAAA,QAAA,wBAUA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,yBACA,EAAA,QAAA,eACA,EAAA,QAAA,uBAwEeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAtEf,QAAA,eAEA,IAAM7B,GAAI,EAAM,EAAA,OAAA,QAEV6B,EAAOhK,EAAUgK,UAAAA,KAAK,SAAuC,GAArC5V,IAAAA,EAAAA,EAAAA,MAAO8L,EAAAA,EAAAA,MAAeyC,EAARiB,EAAAA,MAAQjB,SA8BzC,OA7BPzC,EAAMoC,KAAK,CACP6D,KAAM,OAEVxD,EAAS,WACEtI,IAAAA,EAAMjG,EAANiG,GACA4D,EAAQgM,EAAK5P,QAAAA,GAAb4D,KACD0G,EAA4BtK,qBAAAA,OAAAA,EAAY4D,WAAAA,OAAAA,EAAUgB,OAAAA,OAAAA,OAAOiL,YAClD,SAATjM,EACAkM,MAAMxF,GAAMyF,KAAK,SAAArR,GAENA,OAAAA,EAAEsR,SACVD,KAAK,SAAAxP,GACG,MAAA,SAERwP,KAAK,SAAAjE,GAEJjG,EAAMD,IAAI,CAACkG,KAAMA,MAEL,OAATlI,GACA0G,OAAAA,GAAMyF,KAAK,SAAAxP,GAEdsF,EAAMD,IAAI,CAACkG,MAAM,EAAWvL,EAAAA,YAAAA,EAAK0P,SAAS5B,GAAG,YAC9C6B,MAAM,SAAAxR,GACL2D,QAAQC,MAAM5D,GACdmH,EAAMD,IAAI,CAACkG,KAAM,iCAKtB,WACI9L,IAKHrC,EALGqC,EAAMjG,EAANiG,GACA4D,EAAQgM,EAAK5P,QAAAA,GAAb4D,KACAkI,EAAQjG,IAARiG,KACuB8D,EAAAA,EAAK5P,QAAAA,GAA5B8J,EAAAA,EAAAA,MAAOkE,EAAAA,EAAAA,aACRmC,EAAWrV,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,YAE3BlK,GAAS,SAATA,EAAiB,CACXwM,IAAAA,EAAStV,EAAEsV,EAAAA,OAAOpQ,GAAkBA,eAAAA,OAAAA,IAAM0E,IAAuB1E,mBAAAA,OAAAA,EAAY4D,WAAAA,OAAAA,IAAQ3D,MAAM,8DACjG4E,WAAW,WACDwL,IAAAA,EAAapS,SAASqS,eAA8BtQ,eAAAA,OAAAA,IAC1DqQ,EAAWpQ,MAAMsQ,OAAUF,EAAWG,cAAcvS,SAASwS,KAAKC,aAAe,IAAO,MACzF,KACH/S,EAAOwS,EAASC,QAEhBzS,EADgB,OAATiG,EACAuM,EAASrE,GAET,sCAEJhR,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACH+S,EAAY9K,YAAAA,MAAM,CAAC,CAAC,OAAQ,QAAS,CAAC+G,EAAe9J,QAAAA,OAAAA,MACrDlF,EAAE6V,EAAAA,GAAG7G,GACLhP,EAAE8V,EAAAA,GAAI,IAAIC,KAAK7C,GAAe8C,eAAe,KAAM,CAC/CC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,SAAU,MACVC,KAAM,UACNC,OAAQ,UACRC,OAAQ,aAEZvW,EAAEgF,EAAAA,IAAInC,OAKHgS,EAAAA,EAAAA,QAAAA,QAAAA;;AC3BA2B,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA1Df,IAAA,EAAA,QAAA,wBAUA,EAAA,EAAA,QAAA,6BACA,EAAA,QAAA,yBA+CeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA7Cf,QAAA,eAEA,IAAMxD,GAAI,EAAM,EAAA,OAAA,QAEVwD,EAAO3L,EAAU2L,UAAAA,KAAK,WACVtW,OAAOC,KAAK2U,EAAZ,SAAkBzU,OAGzB,OAAA,WAAML,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACTE,OAAOC,KAAK2U,EAAZ,SAAkB2B,KAAK,SAACC,EAAMC,GACpBC,IAAAA,EAAQ,SAAAtU,GAAOkD,OAAAA,OAAO,IAAIuQ,KAAKjB,EAAKxS,QAAAA,GAAK4Q,gBACxC0D,OAAAA,EAAMD,GAAQC,EAAMF,KAE9B/S,IAAI,SAAArB,GACyCwS,IAAAA,EAAAA,EAAKxS,QAAAA,GAAlC4Q,GAANpK,EAAAA,KAAMoK,EAAAA,cAAclE,EAAAA,EAAAA,MAAOmE,EAAAA,EAAAA,KAC3BnT,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,aAAdhT,CACHA,EAAE6W,EAAAA,GAAG5R,MAAM+N,EAAE,SAAbhT,CACIgP,EACAhP,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,eAAdhT,CACIgQ,EAAUzG,UAAAA,KAAajH,QAAAA,OAAAA,GAAvB0N,EACI,EAAO,EAAA,QAAA,aAInBhQ,EAAEqF,EAAAA,EACErF,EAAEoF,EAAAA,KAAKH,MAAM+N,EAAE,QAAfhT,CACK,IAAI+V,KAAK7C,GAAe8C,eAAe,KAAM,CAC1CC,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,SAAU,MACVC,KAAM,UACNC,OAAQ,UACRC,OAAQ,cAIpBvW,EAAEqF,EAAAA,EACE8N,EAAKxP,IAAI,SAAAwD,GAAOnH,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAdhT,CAAsBmH,aAO3CqP,EAAAA,EAAAA,QAAAA,QAAAA;;AC1BAM,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAhCf,IAAA,EAAA,QAAA,wBAOA,EAAA,QAAA,yBAyBeA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,oBAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OArBf,QAAA,kBAEA,IAAM9D,GAAI,EAAM,EAAA,OAAA,WAEV8D,EAAUjM,EAAUiM,UAAAA,QAAQ,WACvB,OAAA,WACI9W,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACHA,EAAE6V,EAAAA,GAAG,UACL7F,EAAUzG,UAAAA,KAAK,yBAAfyG,EACI,EACIhQ,EAAAA,QAAAA,EAAEgF,EAAAA,IAAIG,OAAM,EAAM,EAAA,OAAA,CAAC4R,QAAS,cAA5B/W,CACI,qBACAA,EAAE+T,EAAAA,GACF/T,EAAEoF,EAAAA,KAAKD,MAAuB,IAA9BnF,CAA8B,IAAKA,EAAEgX,EAAAA,IAAI,aAQlDF,EAAAA,EAAAA,QAAAA,QAAAA;;ACmVAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAnXf,IAAA,EAAA,QAAA,wBASA,EAAA,QAAA,eA0WeA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,iLAAAA,yKAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,2CAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,oFAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,kFAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,KAAAA,EAAAA,OAAAA,eAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,YAAAA,EAAAA,cAAAA,EAAAA,UAAAA,IAAAA,EAAAA,GAAAA,EAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,iDAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,8BAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OAxWf,QAAA,wBAEA,IAAMjE,GAAI,EAAM,EAAA,OAAA,kBAEVkE,EAAY,CACd,CACI9X,KAAM,2BACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,KAAMA,EAAEoX,EAAAA,IAAI,MACnEC,OAAQ,IACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,YAAapF,EAAEgX,EAAAA,IAAI,OAEpC,CACI5X,KAAM,uBACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,KAAMA,EAAEoX,EAAAA,IAAI,MACnEC,OAAQ,IACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,OAEtC,CACI5X,KAAM,mBACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,KAAMA,EAAEoX,EAAAA,IAAI,MACnEC,OAAQ,IACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,OAEtC,CACI5X,KAAM,uBACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEoX,EAAAA,IAAI,MAC1BC,OAAQ,IACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,YAAapF,EAAEgX,EAAAA,IAAI,OAEpC,CACI5X,KAAM,mBACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEoX,EAAAA,IAAI,MAC1BC,OAAQ,IACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,OAEtC,CACI5X,KAAM,eACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEoX,EAAAA,IAAI,MAC1BC,OAAQ,IACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,OAEtC,CACI5X,KAAM,UACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,KACRC,KAAM,IACNC,KAAMvX,EAAEoF,EAAAA,KAAK,eAAgBpF,EAAEgX,EAAAA,IAAI,MACnCQ,MAAO,QACPC,YAAa,QAEjB,CACIrY,KAAM,UACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,IACRC,KAAM,IACNC,KAAMvX,EAAEoF,EAAAA,KAAK,eAAgBpF,EAAEgX,EAAAA,IAAI,MACnCQ,MAAO,QACPC,YAAa,QAEjB,CACIrY,KAAM,eACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,IACRC,KAAM,IACNC,KAAMvX,EAAEoF,EAAAA,KAAK,gBAAiBpF,EAAEgX,EAAAA,IAAI,MACpCS,YAAa,QAEjB,CACIrY,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEgX,EAAAA,IAAI,MAC1BK,OAAQ,KACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,eAAgBpF,EAAEgX,EAAAA,IAAI,OAEvC,CACI5X,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEgX,EAAAA,IAAI,MAC1BK,OAAQ,KACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,gBAAiBpF,EAAEgX,EAAAA,IAAI,OAExC,CACI5X,KAAM,UACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEgX,EAAAA,IAAI,MAC1BK,OAAQ,KACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,gBAAiBpF,EAAEgX,EAAAA,IAAI,OAExC,CACI5X,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEgX,EAAAA,IAAI,MAC1BK,OAAQ,KACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,eAAgBpF,EAAEgX,EAAAA,IAAI,OAEvC,CACI5X,KAAM,OACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEgX,EAAAA,IAAI,MAC1BK,OAAQ,KACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,gBAAiBpF,EAAEgX,EAAAA,IAAI,OAExC,CACI5X,KAAM,MACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,IAAKpF,EAAEgX,EAAAA,IAAI,MAC1BK,OAAQ,KACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,gBAAiBpF,EAAEgX,EAAAA,IAAI,OAExC,CACI5X,KAAM,QACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,IACRC,KAAM,IACNC,KAAMvX,EAAEoF,EAAAA,KAAK,KACbsS,SAAU,IACVF,MAAO,OACPC,YAAa,mBAEjB,CACIrY,KAAM,UACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,MACvDqX,OAAQ,OACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,aAAcpF,EAAEgX,EAAAA,IAAI,MACjCW,SAAU,aACVD,SAAU,MAEd,CACItY,KAAM,iBACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,MACvDqX,OAAQ,OACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,MAClCW,SAAU,cAEd,CACIvY,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,MACvDqX,OAAQ,OACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,eAAgBpF,EAAEgX,EAAAA,IAAI,MACnCW,SAAU,cAEd,CACIvY,KAAM,UACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,MACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,aAAcpF,EAAEgX,EAAAA,IAAI,MACjCW,SAAU,SAEd,CACIvY,KAAM,iBACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,MACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,MAClCW,SAAU,SAEd,CACIvY,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,MACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,eAAgBpF,EAAEgX,EAAAA,IAAI,MACnCW,SAAU,SAEd,CACIvY,KAAM,QACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,IACRC,KAAM,IACNC,KAAMvX,EAAEoF,EAAAA,KAAK,KACbsS,SAAU,IACVF,MAAO,QACPC,YAAa,UAEjB,CACIrY,KAAM,SACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,MACvDqX,OAAQ,MACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,aAAcpF,EAAEgX,EAAAA,IAAI,MACjCW,SAAU,aACVD,SAAU,MAEd,CACItY,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,MACvDqX,OAAQ,MACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,YAAapF,EAAEgX,EAAAA,IAAI,MAChCW,SAAU,cAEd,CACIvY,KAAM,aACN+X,OAAQnX,EAAEoF,EAAAA,KAAKpF,EAAEoF,EAAAA,KAAKD,MAAiC,IAAxCnF,CAAwC,MACvDqX,OAAQ,MACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,MAClCW,SAAU,cAEd,CACIvY,KAAM,SACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,OACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,aAAcpF,EAAEgX,EAAAA,IAAI,MACjCW,SAAU,SAEd,CACIvY,KAAM,WACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,OACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,YAAapF,EAAEgX,EAAAA,IAAI,MAChCW,SAAU,SAEd,CACIvY,KAAM,aACN+X,OAAQnX,EAAEoF,EAAAA,KAAK,KACfiS,OAAQ,OACRC,KAAM,MACNC,KAAMvX,EAAEoF,EAAAA,KAAK,cAAepF,EAAEgX,EAAAA,IAAI,MAClCW,SAAU,UAIZV,EAAgBpM,EAAUoM,UAAAA,cAAc,SAAa,GAAXlM,IAAAA,EAAAA,EAAAA,MAEnC6M,SAAAA,IAAwF,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAA5ExY,EAAAA,EAAAA,KAAM+X,EAAAA,EAAAA,OAAQE,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,SAAUD,EAAAA,EAAAA,SAAUF,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,YAAmBrV,EAAiB,UAAA,OAAA,EAAA,UAAA,QAAA,EAAdyV,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACjGnN,EAAWK,IAAd3I,EACApC,OAAAA,EAAEgF,EAAAA,IAAI6E,QAAO,GAAO5E,MAAM+N,EAAE,OAAQ0E,EAAW,CAACjH,KAAMiH,GAAY,IAAlE1X,CAAuEA,EAAEgF,EAAAA,IAAIG,MAAqD0S,+CAAAA,OAAAA,EAAO,OAAS,MAAyB,qBAAA,oBAAoBJ,GAAa,UAAUrV,GAAG,aAAayV,EAAO,EAAI,GAAG5S,MAAMyF,IAAYtI,EAAI4Q,EAAE,WAAa,IAAI9C,QAAQ,SAACtM,GACzQA,IAAAA,EAAAA,EAAEsD,OAAO6G,QAAQ,IAAMiF,EAAE,SAAS8E,WAAWC,QAAtEN,EAAAA,EAAAA,YAAarV,EAAAA,EAAAA,GAAGyV,EAAAA,OAInBJ,GACA1M,EAAMD,IAAI,CACN2M,YAAa1M,IAAQ3I,KAAOA,OAAIgC,EAAYqT,IAGpD1M,EAAMD,IAAI,SAAAkN,GAAS,MAAA,CAAC5V,GAAIA,IAAM4V,EAAK5V,OAAIgC,GAAahC,OAVsBpC,CAY1EA,EAAEgF,EAAAA,IAAIG,MACFnF,IADJA,CACIA,EAAEgF,EAAAA,IAAIG,MAAoB0S,cAAAA,OAAAA,EAAO,IAAM,KACnCA,OADJ7X,CACI6X,GAAQ,UACRN,IAGRvX,EAAEgF,EAAAA,IAAIG,MAAM0S,EAAO,GAAnB,+CAAA7X,CACIA,EAAEgF,EAAAA,IAAIG,MAAoB0S,cAAAA,OAAAA,EAAO,IAAM,KACnC7X,OADJA,CACIA,EAAEgF,EAAAA,IACE6S,GAAQ,SACRP,GAEJtX,EAAEgF,EAAAA,IACE6S,GAAQ,UACRR,GAEJG,GAASxX,EAAEgF,EAAAA,IACP6S,GAAQ,qBACRL,GAEJK,GAAQJ,GAA+B,SAAhBA,GAA0BzX,EAAEgF,EAAAA,IAC/C,cAAgB,CAACiT,OAAQ,WAA+B,gBAAA,oBAA6B,KAAA,WAAWR,GAAe,oBAGvHzX,EAAEgF,EAAAA,IAAIG,MAAoB0S,cAAAA,OAAAA,EAAO,EAAI,EAAiJA,iJAAAA,OAAAA,EAAO,oBAAsB,IAAnN7X,CAAyNA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,UAAdhT,CAAyBmX,KAEtPnX,EAAEgF,EAAAA,IAAIG,MAA+H0S,yHAAAA,OAAAA,EAAO,uBAAyB,IAArK7X,CAA2KA,EAAEgF,EAAAA,IACzKhF,EAAEgF,EAAAA,IAAIG,MAAM0S,EAAO,sCAAwC,GAA3D7X,CACIZ,EACAyY,GAAqB,UAAbF,GAAwB,SAChCE,GAAqB,eAAbF,GAA6B,cAEhC,UAAbA,GAAwB3X,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,UAAdhT,CACpB6X,GAAQ,CAAC,oBAAqB7X,EAAE+T,EAAAA,IAChC,CAAC,MAAO,QAAS,QAAQpQ,IAAI,SAAA0H,GAASrL,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,QAAW3H,EAAAA,GAAAA,GAAQ,QAE9D,eAAbsM,GAA6B3X,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,UAAdhT,CACzB6X,GAAQ,CAAC,mBAAoB7X,EAAE+T,EAAAA,IAC/B,CAAC,UAAW,YAAa,YAAYpQ,IAAI,SAAA0H,GAASrL,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,QAAW3H,EAAAA,GAAAA,GAAQ,QAE9E,UAATjM,GAAoBY,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,UAAdhT,CAChB6X,GAAQ,CAAC,mBAAoB7X,EAAE+T,EAAAA,IAC/B,CAAC,eAAgB,iBAAkB,gBAAiB,gBAAiB,eAAgB,iBAAkB,KAAM,MAAMpQ,IAAI,SAAA0H,GAAK,IAAA,EAAIrL,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAW3H,EAAAA,EAAAA,GAAAA,GAAQ,GAAa,EAAA,EAAA,SAAA,GAA9C,IAAArL,CAClH,OAAVqL,EAAiB,IAAgB,OAAVA,EAAiB,IAAM,aAMvD,OAAA,WACsBN,IAAAA,EAAAA,IAAlB0M,EAAAA,EAAAA,YAAarV,EAAAA,EAAAA,EACbpC,OAAAA,EAAEgF,EAAAA,IACL+N,EAAY9K,YAAAA,MAAM,CAAC,CAAC,SAAU,WAAY,CAAC,wBAC3CjI,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACIA,EAAE6V,EAAAA,GAAG,0CACL7V,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAdhT,CACIA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACkF,UAAU,IAAjClY,CAAyC,YACzCA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACmF,QAAQ,IAA/BnY,CAAuC,UACvCA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACoF,MAAM,IAA7BpY,CAAqC,eACrCA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACqF,QAAQ,IAA/BrY,CAAuC,WACvCA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACsF,QAAQ,IAA/BtY,CAAuC,aACvCA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACuF,QAAQ,IAA/BvY,CAAuC,aACvCA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACwF,SAAS,IAAhCxY,CACIA,EAAEgF,EAAAA,IAAIG,MAAqF,IAA3FnF,CAA2F,YAE/FA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAACyF,QAAQ,IAA/BzY,CACIA,EAAEgF,EAAAA,IAAIG,MAAuF,IAA7FnF,CAA6F,WAEjF,SAAhByX,GAA0B,CACtBzX,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAAC0F,KAAM,KAC7B1Y,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,OAAQ,CAAC0F,KAAM,MAEjB,oBAAhBjB,GAAqC,CACjCzX,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,kBAAmB,CAAC0F,KAAM,KACxC1Y,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,kBAAmB,CAAC0F,KAAM,KACxC1Y,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,kBAAmB,CAAC0F,KAAM,MAE5B,WAAhBjB,GAA4B,CACxBzX,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAU,CAAC0F,KAAM,KAC/B1Y,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAU,CAAC0F,KAAM,MAEnB,SAAhBjB,GAA0B,CACtBzX,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,QAAS,CAAC0F,KAAM,KAC9B1Y,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,QAAS,CAAC0F,KAAM,MAElC1Y,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAY,EAAA,GAAA,eAAgB,KAC1ChT,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAY,EAAA,GAAA,mBAAoB,KAC9ChT,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAY,EAAA,GAAA,kBAAmB,KAC7ChT,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,SAAY,EAAA,GAAA,iBAAkB,KAC5CkE,EAAUvT,IAAI,SAACC,EAAGxB,GAAMwV,OAAAA,EAAWhU,EAAGxB,UAChCgC,IAANhC,GACIpC,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,YAAdhT,CAA2B4X,EAAWV,EAAU9U,QAAIgC,GAAW,IAEnE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGT,IAAI,SAACyC,EAAGhE,GAAMpC,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,aAAc,CAAC2F,MAAa,IAANvW,IAApCpC,CAA+CoG,KAChFpG,EAAEgF,EAAAA,IAAIG,MAA8C,IAApDnF,CAAoD,cAExDA,EAAEqF,EAAAA,EAAEwE,QAAO,EAAX7J,CACI,mBACAA,EAAEoF,EAAAA,KAAKH,MAAM+N,EAAE,cAAe,CAAClK,KAAM,WAArC9I,CAAiD,WAAY,KAC7DA,EAAEoF,EAAAA,KAAKH,MAAM+N,EAAE,cAAe,CAAClK,KAAM,oBAArC9I,CAA0D,oBAAqB,MAC/EA,EAAEoF,EAAAA,KAAKH,MAAM+N,EAAE,cAAe,CAAClK,KAAM,SAArC9I,CAA+C,UAAW,qBAC1DA,EAAEoF,EAAAA,KAAKH,MAAM+N,EAAE,eAAfhT,CAA+B,gBAC/BA,EAAAA,EANJ,GAMsLA,IAAAA,EAAEiQ,EAAAA,EAAE1G,KAAK,+CAATvJ,CAAyD,6BAOhPiX,EAAAA,EAAAA,QAAAA,QAAAA;;AClVA2B,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAjCf,IAAA,EAAA,QAAA,wBAQA,EAAA,QAAA,yBAyBeA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,oBAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OArBf,QAAA,mBAEA,IAAM5F,GAAI,EAAM,EAAA,OAAA,YAEV4F,EAAW/N,EAAU+N,UAAAA,SAAS,WACzB,OAAA,WACI5Y,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACHA,EAAE6V,EAAAA,GAAG,WACL7F,EAAUzG,UAAAA,KAAK,mBAAfyG,EACI,EACIhQ,EAAAA,QAAAA,EAAEgF,EAAAA,IAAIG,OAAM,EAAM,EAAA,OAAA,CAAC4R,QAAS,cAA5B/W,CACI,SACAA,EAAE+T,EAAAA,GACF/T,EAAEoF,EAAAA,KAAKD,MAAuB,IAA9BnF,CAA8B,YAQvC4Y,EAAAA,EAAAA,QAAAA,QAAAA;;ACqCAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAtEf,IAAA,EAAA,QAAA,wBAQA,EAAA,QAAA,eA8DeA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,wIAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,OAAAA,MAAAA,KAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EA5Df,QAAA,iBAEA,IAAMC,EAAS,CACX,OACA,OACA,cACA,aACA,cACA,iBACA,gBACA,kBACA,gBACA,kBACA,cACA,mBACA,iBACA,eACA,kBACA,gBACA,gBACA,aACA,aACA,UACA,YACA,cACA,oBACA,mBAGE9F,GAAI,EAAM,EAAA,OAAA,UAEV6F,EAAShO,EAAUgO,UAAAA,OAAO,WACrB,OAAA,WAAM7Y,OAAAA,EAAEgF,EAAAA,IACX+N,EAAY9K,YAAAA,MAAM,CAAC,CAAC,SAAU,UAAW,CAAC,WAC1CjI,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACI8Y,EAAOnV,IAAI,SAAA0H,GACD8I,IACO9C,EADP8C,EAAO4E,iBAAiB5V,SAAS6V,iBAAiBC,iBAA4B5N,WAAAA,OAAAA,IAAS6N,OACvFC,EAAY,EAAL9H,EAA4E8C,EAAK7M,MAAM,IAA/EA,MAAM,EAAE,GAAI+J,EAAE/J,MAAM,EAAE,GAAG+J,EAAE/J,MAAM,IAAI3D,IAAI,SAAAyV,GAAOC,OAAAA,SAASD,EAAK,MAC7E9H,EAAIgI,KAAKrX,IAALqX,MAAAA,KAAYH,EAAAA,IAChBI,EAAWjI,EAAI,IAAM,QAAU,QAC/BkI,EAASlI,EAAI,IAAMA,EAAI,GAAK,oBAAsB,GAajDmI,OAZWzZ,EAAEgF,EAAAA,IAChBhF,EAAEgF,EAAAA,IACGC,MAAM+N,EAAE,OAAQ,CAAC3H,MAAAA,KACjBlG,OAAM,EAAM,EAAA,OAAA,CACTqU,OAAAA,EACAnO,MAAOkO,IAJfvZ,CAOIA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,QAAdhT,CAAuBmU,IAE3BnU,EAAEgF,EAAAA,IAAIqG,WASXwN,EAAAA,EAAAA,QAAAA,QAAAA;;ACPAa,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA/Df,IAAA,EAAA,QAAA,wBAQA,EAAA,QAAA,yBAIA,EAAA,QAAA,eAmDeA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,4BAAAA,KAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OAAAA,SAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,EAAAA,IAAAA,EAAAA,IAAAA,IAAAA,SAAAA,IAAAA,MAAAA,IAAAA,UAAAA,wIAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,OAAAA,YAAAA,OAAAA,GAAAA,OAAAA,MAAAA,KAAAA,GAAAA,SAAAA,EAAAA,GAAAA,GAAAA,MAAAA,QAAAA,GAAAA,OAAAA,EAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EAjDf,QAAA,kBAEA,IAAM1G,GAAI,EAAM,EAAA,OAAA,WAEV2G,EAAQ,IACR1X,EAAM,MACNqK,GAASrK,EAAOA,EAAM0X,GAAUA,EAAQ,EAE9C,SAASC,EAAejB,EAAOkB,GAEtB,IADCC,IAAAA,EAAQ,GACL1X,EAAIuW,EAAOvW,EAAIyX,EAAKzX,IACzB0X,EAAMhb,KAAKkB,EAAEgF,EAAAA,IAAIgK,MAAM5M,EAAZpC,CAAezB,OAAOwb,aAAa3X,KAE3C0X,OAAAA,EAGX,IAAMJ,EAAU7O,EAAU6O,UAAAA,QAAQ,SAAa,GAAX3O,IAAAA,EAAAA,EAAAA,MAGzB,OAFPA,EAAMoC,KAAK,CAAC/K,EAAG,IAER,WACGuW,IAAAA,EAAQ5N,IAAQ3I,EAChB4X,EAASrB,EAAQgB,EACjBE,EAAMlB,EAAQgB,EAAQA,EACtBM,EAAOJ,EAAM5X,EAAMA,EAAM4X,EACxB7Z,OAAAA,EAAEgF,EAAAA,IACL+N,EAAY9K,YAAAA,MAAM,CAAC,CAAC,UAAW,YAAa,CAAC,YAC7CjI,EAAEgF,EAAAA,IAAIC,MAAM+N,KAAKjN,cAAa,EAA9B/F,CAEIA,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,QAAdhT,CAAuB,EAAK,IAAIU,MAAM4L,GAAQnM,QAAQwD,IAAI,SAAAvB,GACtDpC,OAAAA,EAAEgF,EAAAA,IACGC,MAAM+N,EAAE,qBACR9C,QAAQ,WAAMnF,OAAAA,EAAMD,IAAI,CAAC1I,EAAAA,KAF9BpC,EAII,EAAOA,EAAAA,QAAAA,EAAEoF,EAAAA,KAAKH,MAAM+N,EAAE,SAAU,CAACkH,OAAQ9X,IAAMuW,IAAxC3Y,CAAoDoC,GAAAA,OAAAA,SAGnEpC,EAAEgF,EAAAA,IACEhF,EAAE6V,EAAAA,GAAG,UACL7V,EAAEqF,EAAAA,GAAErF,EAAAA,EAAJ,GAAiCA,IAAAA,EAAEiQ,EAAAA,EAAE1G,KAAK,yEAATvJ,CAAmF,qCACpHA,EAAE+T,EAAAA,GACF/T,EAAEqF,EAAAA,EAAa2U,WAAAA,OAAAA,EAAYC,OAAAA,OAAAA,IAC3Bja,EAAE+T,EAAAA,GACF/T,EAAEgF,EAAAA,IAAIe,cAAa,GAAMd,MAAM+N,EAAE,SAAjChT,CAA2C4Z,EAAeI,EAAQC,UAOvEP,EAAAA,EAAAA,QAAAA,QAAAA;;AC5BAS,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAnCf,IAAA,EAAA,QAAA,wBAQA,EAAA,QAAA,yBAIA,QAAA,iBAEA,IAAMnH,GAAI,EAAM,EAAA,OAAA,UAEVmH,EAAStP,EAAUsP,UAAAA,OAAO,WACrB,OAAA,WACIna,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACHA,EAAE6V,EAAAA,GAAG,UACL7F,EAAUzG,UAAAA,KAAK,gBAAfyG,EACI,EACIhQ,EAAAA,QAAAA,EAAEgF,EAAAA,IAAIG,OAAM,EAAM,EAAA,OAAA,CAAC4R,QAAS,OAAQqD,SAAU,OAAQC,WAAY,QAAlEra,CACIA,EAAEoF,EAAAA,KAAKD,MAAM,iBAAbnF,CAA+B,KAC/BA,EAAEoF,EAAAA,KAAKD,MAAM,iBAAbnF,CAA+B,KAC/BA,EAAEoF,EAAAA,KAAKD,MAAM,iBAAbnF,CAA+B,KAC/BA,EAAEoF,EAAAA,KAAKD,MAAM,iBAAbnF,CAA+B,KAC/BA,EAAEoF,EAAAA,KAAKD,MAAM,iBAAbnF,CAA+B,YAQxCma,EAAAA,EAAAA,QAAAA,QAAAA;;AC+TAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAlWf,IAAA,EAAA,QAAA,wBAkWeA,SAAAA,EAAAA,GAAAA,GAAAA,oBAAAA,QAAAA,MAAAA,EAAAA,OAAAA,UAAAA,CAAAA,GAAAA,MAAAA,QAAAA,KAAAA,EAAAA,EAAAA,IAAAA,CAAAA,IAAAA,EAAAA,EAAAA,EAAAA,aAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,OAAAA,CAAAA,MAAAA,GAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAAA,OAAAA,EAAAA,SAAAA,GAAAA,MAAAA,GAAAA,EAAAA,GAAAA,MAAAA,IAAAA,UAAAA,yIAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAAAA,EAAAA,WAAAA,EAAAA,EAAAA,OAAAA,aAAAA,EAAAA,WAAAA,IAAAA,EAAAA,EAAAA,OAAAA,OAAAA,EAAAA,EAAAA,KAAAA,GAAAA,EAAAA,SAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,WAAAA,IAAAA,GAAAA,MAAAA,EAAAA,QAAAA,EAAAA,SAAAA,QAAAA,GAAAA,EAAAA,MAAAA,KAAAA,SAAAA,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,CAAAA,GAAAA,iBAAAA,EAAAA,OAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,UAAAA,SAAAA,KAAAA,GAAAA,MAAAA,GAAAA,GAAAA,MAAAA,WAAAA,GAAAA,EAAAA,cAAAA,EAAAA,EAAAA,YAAAA,MAAAA,QAAAA,GAAAA,QAAAA,EAAAA,MAAAA,KAAAA,GAAAA,cAAAA,GAAAA,2CAAAA,KAAAA,GAAAA,EAAAA,EAAAA,QAAAA,GAAAA,SAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,QAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,GAAAA,OAAAA,EA3Vf,QAAA,qBAEA,IAAMtH,GAAI,EAAM,EAAA,OAAA,gBAGVuH,EAAQ,SAAC5B,EAAOkB,GAEb,IADC1X,IAAAA,EAAS,GACNC,EAAIuW,EAAOvW,GAAKyX,EAAKzX,IAC1BD,EAAOrD,KAAKsD,GAETD,OAAAA,GAGLmY,EAAOzP,EAAUyP,UAAAA,KAAK,SAMtB,GALFrb,IAAAA,EAAAA,EAAAA,MACAub,EAAAA,EAAAA,SACA5N,EAAAA,EAAAA,SACAQ,EAAAA,EAAAA,UACAI,EAAAA,EAAAA,SAIIvO,EAAAA,EADAwb,EAAAA,OAAI,IAAA,EAAA,IAFN,EAGExb,EAAAA,EADSyb,EAAAA,OAAI,IAAA,EAAA,IAFf,EAIFtN,EAAU,CACNhL,EAAG,EACH2F,KAAM,EACN4S,MAAM,EACNF,EAAAA,EACAC,EAAAA,IAGAE,IAAAA,EAAQC,EAAUpV,EAAMqV,EAGzBC,EAAYC,EAHkBC,EAAO,CACpCzZ,IAAK,CAAC,EAAE,GACR0Z,IAAK,CAAC,IAyCDC,SAAAA,EAAO/Y,EAAG8R,GAKXsG,IAAAA,EAAAA,IAHAC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACY3P,EAAZgQ,EAAAA,WAGEK,GAAWhZ,EAAIA,EAAI,EAAIqY,EAAI,GAAKC,EAEhCW,GAAYZ,EAAI,EAAIrY,EAAIA,EAAI,EAAI,GAAKsY,EAErCY,EAAMlZ,EAAIsY,EAEVa,EAAMrH,EAAIA,EAAI,EAAIwG,EAAI,EAEtBc,EAAMd,EAAI,EAAIxG,EAAIA,EAAI,EAAI,EAE5B,OAACnJ,EAAMqQ,EAAUG,GACjBxQ,EAAMqQ,EAAUlH,GAChBnJ,EAAMqQ,EAAUI,GAChBzQ,EAAMuQ,EAAMC,GACZxQ,EAAMuQ,EAAME,GACZzQ,EAAMsQ,EAAWE,GACjBxQ,EAAMsQ,EAAWnH,GACjBnJ,EAAMsQ,EAAWG,GA0BhBC,SAAAA,IACUjB,IAAAA,EAAAA,IAARC,EAAAA,EAAAA,EAAGC,EAAAA,EAAAA,EACVnT,QAAQ4C,IAAI2Q,GACP,IAAA,IAAI1U,EAAI,EAAGA,EAAIqU,EAAIC,EAAGtU,KAClB2U,EAAW3U,MAAQX,EAAS,EAAJW,EAAQ,KACjCX,EAAS,EAAJW,GAAS2U,EAAW3U,GAAK,IAAM,GAG5C0U,EAAIY,aAAab,EAAU,EAAG,GAqBzBc,SAAAA,KAlBAC,WACDxZ,IAAAA,EAAG8R,EAAG2H,EAAKzV,EAAI,EACdhE,IAAAA,EAAI,EAAGA,EAAIqY,EAAGrY,IACV8R,IAAAA,EAAI,EAAGA,EAAIwG,EAAGxG,IACf2H,EAAMV,EAAO/Y,EAAG8R,GACZ6G,EAAW3U,GACX4U,EAAe5U,GAAK6U,EAAKzZ,IAAIuH,SAAS8S,GAEtCb,EAAe5U,GAAK6U,EAAKC,IAAInS,SAAS8S,GAE1CzV,IAGHA,IAAAA,EAAI,EAAGA,EAAIqU,EAAIC,EAAGtU,IACnB2U,EAAW3U,GAAK4U,EAAe5U,GAKnCwV,GACAH,IACA7O,EAAS,SAAAkP,GAAc,MAAA,CAAC1Z,EAAG0Z,EAAU1Z,EAAI,KAGpC2Z,SAAAA,IACUvB,IAARG,MAEHgB,IAEJ/O,EAAS,CAAC7E,KAAMgT,EAAWiB,OAAO,SAACH,EAAKvc,GAAMuc,OAAAA,EAAOvc,MACrDyK,WAAWgS,EAAM,KA+Bd,OA/JPvO,EAAS,WAEDyO,IAAAA,EACAhd,EADAgd,gBAKAzB,EAAAA,IAFAC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EAGJK,EAAa,IAAIra,MAAM+Z,EAAIC,GAC3BM,EAAiB,IAAIta,MAAM+Z,EAAIC,GAC1B,IAAA,IAAItY,EAAI,EAAGA,EAAIqY,EAAIC,EAAGtY,IACvB2Y,EAAW3Y,IAAK,EAChB4Y,EAAe5Y,IAAK,EAGpB6Z,GAiDCC,SAAS9a,GAGVoZ,IAHiB,EAEjBE,EACAF,IADAE,EAEYtZ,EAAAA,EAAAA,GAJK,IAIE,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAZwC,IAAAA,EAAY,EAAA,MACnBmX,GAAYnX,EAAE,GAAK,IAAM8W,EAAI9W,EAAE,GAAK,KAAM,EAC1CoX,GAAgBpX,EAAE,GAAK,IAAM8W,EAAI9W,EAAE,GAAK,KAAM,GAN7B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAhDjBsY,CAASD,GAEbrB,EAASzX,SAASqS,eAAe,SACjCsF,EAAMF,EAAOuB,WAAW,KAAM,CAC1BC,OAAO,IAEXvB,EAAWC,EAAIuB,aAAa,EAAG,EAAG3B,EAAGD,GACrChV,EAAOoV,EAASpV,KACX,IAAA,IAAIW,EAAI,EAAGA,EAAIqU,EAAIC,EAAI,EAAGtU,IAC3BX,EAAKW,IAAMA,EAAI,GAAK,GAAK,EAAI,IAAM,EAMvCqV,IACAM,MA8HG,WAOCvB,IAAAA,EAAAA,IALAG,EAAAA,EAAAA,KACAF,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAtY,EAAAA,EAAAA,EACA2F,EAAAA,EAAAA,KAEG/H,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACHA,EAAE4a,EAAAA,OAAO1V,GAAG,SAASoX,MAAM5B,GAAGjF,OAAOgF,GACrCza,EAAEqF,EAAAA,EAAE,aAAcrF,EAAEoF,EAAAA,KAAKF,GAAG,MAAVlF,CAAiBoC,IACnCpC,EAAEqF,EAAAA,EAAE,aAAcrF,EAAEoF,EAAAA,KAAKF,GAAG,OAAVlF,CAAkB+H,IACpC/H,EAAEuc,EAAAA,MAAMzT,KAAK,UACZ/J,MAAM4b,EAAO,IAAM,MACnBzK,QAAQ,WACLtD,EAAS,SAAAkP,GAAc,MAAA,CACnBnB,MAAOmB,EAAUnB,UAEtBzV,GAAG,QACNlF,EAAEuc,EAAAA,MAAMzT,KAAK,UAAU/J,MAAM,MAAMmR,QAAQ,WAAMyL,OAAAA,MACjD3b,EAAEuc,EAAAA,MAAMzT,KAAK,UAAU/J,MAAM,KAAKmR,QAAQ,WAAMsM,OAxG/CA,WAEA,IADUhC,IAAAA,EAAAA,IAARE,EAAAA,EAAAA,EAAGD,EAAAA,EAAAA,EACDrU,EAAI,EAAGA,EAAIqU,EAAIC,EAAI,EAAGtU,IAC3BX,EAAKW,IAAMA,EAAI,GAAK,GAAM,EAAI,IAAM,EAEnC,IAAA,IAAIA,EAAI,EAAGA,EAAIqU,EAAIC,EAAGtU,IACvB2U,EAAW3U,GAAsB,MAAhBX,EAAS,EAAJW,GAE1B0U,EAAIY,aAAab,EAAU,EAAG,GAC9BjO,EAAS,CAAC+N,MAAM,EAAMvY,EAAG,IA+F2Boa,KAAStX,GAAG,aAC5DlF,EAAE+T,EAAAA,GACF/T,EAAEgF,EAAAA,IAAIE,GAAG,YAATlF,CACIA,EAAEqF,EAAAA,EAAE,YACJkV,EAAM,EAAG,GAAG5W,IAAI,SAAAvB,GACZpC,OAAAA,EAAEyc,EAAAA,MACEzc,EAAEuc,EAAAA,MAAMzT,KAAK,YAAY1J,KAAK,OAAO8F,GAAG9C,GACxCA,MAIZpC,EAAE+T,EAAAA,GACF/T,EAAEgF,EAAAA,IAAIE,GAAG,YAATlF,CACIA,EAAEqF,EAAAA,EAAE,UACJkV,EAAM,EAAG,GAAG5W,IAAI,SAAAvB,GAAKpC,OAAAA,EAAEyc,EAAAA,MAAMzc,EAAEuc,EAAAA,MAAMzT,KAAK,YAAY1J,KAAK,OAAO8F,GAAG9C,GAAIA,UAItF6Z,gBAAgB,CACf,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,MAMR,SAASS,KAqFMpC,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC7UAqC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EArBf,IAAA,EAAA,QAAA,wBAQA,EAAA,QAAA,yBAaeA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,OAAAA,KAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,CAAAA,aAAAA,KAAAA,OAAAA,EAAAA,WAAAA,OAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,OAAAA,OAAAA,OAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,CAAAA,MAAAA,OAAAA,OAAAA,OAXf,QAAA,gBAEA,IAAM3J,GAAI,EAAM,EAAA,OAAA,SAEV2J,EAAQ3c,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACVA,EAAEqF,EAAAA,EAAE,gBACJrF,EAAEqF,EAAAA,GAAErF,EAAAA,EAAJ,GAAkBA,IAAAA,EAAEiQ,EAAAA,EAAE1G,KAAK,oBAATvJ,CAA8B,aAChDA,EAAEqF,EAAAA,EAAE,oBACJrF,EAAEqF,EAAAA,GAAErF,EAAAA,EAAJ,GAAYA,IAAAA,EAAEiQ,EAAAA,EAAE1G,KAAK,+BAATvJ,CAAyC,aAG1C2c,EAAAA,EAAAA,QAAAA,QAAAA;;ACYAC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAjCf,IAAA,EAAA,QAAA,oBAOA,EAAA,QAAA,qBAEM5J,GAAI,EAAM,EAAA,OAAA,gBAEV4J,EAAc/R,EAAU+R,UAAAA,YAAY,SAAoB,GAAlB3d,IAAAA,EAAAA,EAAAA,MAAO8L,EAAAA,EAAAA,MAGxC,OAFPA,EAAMoC,KAAK,CAAC0P,MAAM,IAEX,WACWC,IAAAA,EAAW7d,EAAlB8L,MACA8R,EAAQ9R,IAAR8R,KACDha,EAAOga,EAAO7c,EAAEoF,EAAAA,KAAK,QAAU,KAC9BpF,OAAAA,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CACH6C,EACA7C,EAAEoF,EAAAA,KACGD,OAAM,EAAM,EAAA,OAAA,CAACkG,MAAO,CAAC0R,GAAI,QAASvV,MAAO,OAAOsV,MAChD7X,MAAM+N,EAAE,SAFbhT,CAGQ8c,GAER9c,EAAEoF,EAAAA,KAAK8K,QAAQ,SAACtM,GAEZmH,EAAMD,IAAI,SAAAgR,GAAc,MAAA,CAACe,MAAOf,EAAUe,SAF9C7c,CAGI6c,EAAO,OAAS,YAKjBD,EAAAA,EAAAA,QAAAA,QAAAA;;AClBAjZ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAff,IAAMA,EAAM,CACP,GAAA,GACM,OAAA,CACC,OAAA,CACC,SAAA,KAGE,QAAA,CACA,MAAA,IAEF,MAAA,CACS,WAAA,KAIPA,EAAAA,EAAAA,QAAAA,QAAAA;;ACwFAqZ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAvGf,IAAA,EAAA,QAAA,wBAWA,EAAA,QAAA,eAYA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,iBACA,EAAA,QAAA,uBA6EeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GA3Ef,QAAA,eAEA,IAAMhK,GAAI,EAAM,EAAA,OAAA,QAEV3D,EAAS,SAAAxJ,GAAW,MAAA,CACjB2Q,IAAAA,EADiB,KAEbyG,MAAAA,EAFa,MAGdjd,KAAAA,EAAEgF,EAAAA,IAAIkY,EAAN,MACE/C,OAAAA,EAJY,OAKLtB,gBAAAA,EALK,OAsBRsE,WAAAA,EAtBQ,WAuBd3G,KAAAA,EAvBc,KAwBV3B,WAAAA,EAAK3P,KAAAA,GAAGW,EAAOX,IACf0T,SAAAA,EAzBU,SA0BFc,mBAAAA,EA1BE,QA2BX5C,QAAAA,EA3BW,QA4BIG,yBAAAA,EAAAA,gBAGxBmG,EAAOvS,EAAUuS,UAAAA,KAAK,SAAa,GAAXrS,IAAAA,EAAAA,EAAAA,MACpByE,EAAO,WAAM,OAAA,EAAeH,EAAAA,gBAAAA,GAAQG,MAGjC6N,SAAAA,EAAW9T,EAAMyF,GAChBtE,IAAAA,EAAU8E,IAAOhM,WAAW+F,IAAoB,MAAXiG,KAA2B,SAATjG,EAEtDyG,OAAAA,EAAUzG,UAAAA,KAAKA,EAAfyG,CACHhQ,EAAEgF,EAAAA,IAAIC,MAAM+N,EAAE,YAAa,CAACtI,QAAAA,IAA5B1K,CACIgP,IAIL,OAXPjE,EAAMoC,KAAK,CAAC/K,EAAG,IACf0H,OAAOrJ,iBAAiB,gBAAiB,WAAMsK,OAAAA,EAAMD,IAAI,SAAAkN,GAAS,MAAA,CAAC5V,EAAG4V,EAAK5V,SAUpE,WAAMpC,OAAAA,EAAEgF,EAAAA,IACXqY,EAAW,OAAQ,QACnBA,EAAW,QAAS,UAEpBA,EAAW,WAAY,WACvBA,EAAW,UAAW,UACtBA,EAAW,SAAU,cAMvBL,EAAOhd,EAAEgF,EAAAA,IAAIC,MAAM+N,IAAZhT,CAKTA,EAAEsd,EAAAA,OAAOrY,MAAM+N,EAAE,UAAjBhT,CACIgQ,EAAUzG,UAAAA,KAAK,IAAfyG,CACIhQ,EAAEud,EAAAA,GAAGpY,OAAM,EAAM,EAAA,OAAA,CAACqY,UAAW,WAA7Bxd,CAAyC,0BAGjDA,EAAEyd,EAAAA,IAAIxY,MAAM+N,EAAE,QAAdhT,CAAuBod,GACvBpd,EAAE0d,EAAAA,KAAKzY,MAAM+N,EAAE,WAAfhT,CAA2BoQ,EAAOf,OAAAA,OAAOA,IACzCrP,EAAE2d,EAAAA,OAAO1Y,MAAM+N,EAAE,UAAjBhT,CAA4B,qCAGjBgd,EAAAA,EAAAA,QAAAA,QAAAA;;AC5Ff,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,cAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,OAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,OAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,gBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,WAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,SAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,aAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,QAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,OAAA,eAAA,QAAA,OAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAXQ,IAAA,EAAA,EAAA,QAAA,iCACJ,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,qCACA,EAAA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,+BACA,EAAA,EAAA,QAAA,qBACJ,EAAA,EAAA,QAAA,mBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACEA,aAbA,IAAA,EAAA,QAAA,yBACA,EAAA,QAAA,qBACA,EAAA,QAAA,sBAWA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,GATA,EAAU,EAAA,WAAA,CACNvR,UAAW,CACPxM,MACKoL,EAAAA,GAAAA,EADA,cACe,OAI5B,EAAU,EAAA,YAAA,GAEVlH,SAASqS,eAAe,QAAQzU,QAAO,EAAIic,EAAAA,KAAAA,EAAJ","file":"index.1.2.0.js","sourceRoot":"..","sourcesContent":["const block = blockName => {\n    const block = String(blockName);\n    return function(element, modifiers, mixin) {\n        const cssStack = [];\n        const elementName = block + (element ? `__${element}` : '');\n        cssStack.push(elementName);\n        for (const mod in modifiers) {\n            const value = modifiers[mod];\n            if (typeof value === 'boolean') {\n                if (value) {\n                    cssStack.push(`${elementName}_${mod}`);\n                }\n            } else {\n                cssStack.push(`${elementName}_${mod}_${value}`);\n            }\n        }\n        return cssStack.join(' ');\n    };\n}\n\nexport default block;\n","export default function (props = {}) {\n    const cssProps = [];\n    for (const prop in props) {\n        const name = prop.replace(/[A-Z]/g, x => '-' + x.toLowerCase());\n        cssProps.push(`${name}: ${props[prop]};`);\n    }\n    return cssProps.join(' ');\n}\n","export const elementSymbol = Symbol('element');\nexport const componentSymbol = Symbol('component');\n","import {elementSymbol, componentSymbol} from './symbols.js';\nimport {E} from './element.js';\n\nexport const getClone = element => {\n    // console.log('clone', element);\n    if (!element.cloneNode) {\n        throw new Error('clone не удался')\n        return element;\n    }\n    // console.log({element});\n    if (element.nodeType === 3) {\n        return element.cloneNode(false);\n    }\n    let clone = E[element.tagName.toLowerCase()];\n    if (elementSymbol in element) {\n        clone = clone[Symbol('props')](element[elementSymbol].props)();\n        // clone[elementSymbol] = element[elementSymbol];\n    } else {\n        clone = clone();\n    }\n    if (componentSymbol in element) {\n        clone[componentSymbol] = element[componentSymbol];\n        clone[componentSymbol].element = clone;\n        // element[componentSymbol].element = clone;\n    }\n    if (element[elementSymbol] && Object.keys(element[elementSymbol].eventListeners).length > 0) {\n        for (const eventName of Object.keys(element[elementSymbol].eventListeners)) {\n            const listeners = element[elementSymbol].eventListeners[eventName];\n            for (const listener of listeners) {\n                clone.addEventListener(eventName, listener, false);\n            }\n        }\n    }\n    for (const child of Array.from(element.childNodes)) {\n        const cloneChild = getClone(child);\n        clone.append(cloneChild);\n    }\n    return clone;\n}\n","\nconst diffObject = t => [\n    t.delete, // Symbol('delete') для удаления примитива\n    t.primitive, // новое значение примитива, заменяет предыдущее значение\n    {\n        [t.array]: t`?`(true), // указывает, что значение массив, ключи будут приводится к Number\n        [t.raw]: t`?`(true), // указывает, что объект нужно включать как есть, не разбирая рекурсивно\n        [t(String)]: t`?`(diffObject),\n        [t(Symbol)]: t`?`(diffObject) // для символьных свойств\n    }\n];\n\nconst D = {\n    delete: Symbol('delete'),\n    array: Symbol('array'),\n    raw: Symbol('raw'),\n    meta: Symbol('meta'),\n    new: Symbol('new')\n};\n\nexport const isPrimitive = value => {\n    return value !== new Object(value);\n}\n\nexport const raw = value => {\n    if (isPrimitive(value)) {\n        return value;\n    }\n    // return {\n    //     ...value,\n    //     [D.raw]: true,\n    //     [D.new]: value\n    // }\n    value[D.raw] = true;\n    value[D.new] = value;\n    return value;\n}\n\n\n// TODO: добавить поддержку циклических ссылок\nexport function diff(A, B) {\n    if (A === B) { // равенство по значению(для примитивов), либо по ссылке(для объектов)\n        return {};\n    }\n    if (isPrimitive(A)) {\n        if (isPrimitive(B)) {\n            return B;\n        } else {\n            return raw(B);\n        }\n    } else {\n        if (isPrimitive(B)) {\n            return B;\n        } else {\n            if (typeof A === 'function') { // для функций заменяем всё, возможно стоит добавить другую проверку\n                if (A === B) {\n                    return {};\n                } else if (A.toString() === B.toString()) {\n                    return {};\n                }\n                return raw(B);\n            } else if (Array.isArray(A)) {\n                if (Array.isArray(B)) { // сравнение массивов\n                    const lA = A.length;\n                    const lB = B.length;\n                    const max = lA > lB ? lA : lB;\n                    const min = lA < lB ? lA : lB;\n                    const result = {};\n                    for (let i = 0; i < max; i++) {\n                        if (i < min) { // сравниваем общую часть\n                            const indexDiff = diff(A[i], B[i]); // сравниваем элементы\n                            if (isPrimitive(indexDiff) || indexDiff === D.delete || Object.keys(indexDiff).length > 0 || indexDiff[D.raw]) {\n                                result[String(i)] = indexDiff; // добавляем только отличия\n                            }\n                        } else if (lA < lB) {\n                            result[String(i)] = B[i]; // новые элементы\n                        } else {\n                            result[String(i)] = D.delete; // удаляем лишние\n                        }\n                    }\n                    if (Object.keys(result).length > 0) {\n                        result[D.array] = true;\n                    }\n                    return result;\n                } else { // просто всё затираем\n                    return raw(B);\n                }\n            } else { // обычный объект\n                if (typeof B === 'function' || Array.isArray(B)) { // не обычный объект\n                    return raw(B);\n                } else { // сравнение объектов\n                    const result = {};\n                    for (const key of Object.keys(B)) {\n                        if (!(key in A)) {\n                            result[key] = raw(B[key]); // новые ключи добавляем как есть\n                        }\n                    }\n                    for (const key of Object.keys(A)) {\n                        if (key in B) {\n                            const keyDiff = diff(A[key], B[key]); // сравниваем рекурсивно\n                            if (isPrimitive(keyDiff) || keyDiff === D.delete || Object.keys(keyDiff).length > 0 || keyDiff[D.raw]) {\n                                result[key] = keyDiff; // добавляем только отличия\n                            }\n                        } else {\n                            result[key] = D.delete; // удаляем старые ключи\n                        }\n                    }\n                    return result;\n                }\n            }\n        }\n    }\n}\n\ndiff.symbols = D;\n\n// console.log(diff([1,2,3,6,8], [1,4,3,2]));\n// console.log(diff({a:[1]}, {a:[2]}));\n// console.log(diff({a:1,b:2, c:{}}, {a:2, c: {a:{s:{}}}}));\n// console.log(document.head);\n// console.log(document.body);\n// console.log(diff(document.head, document.body));\n","import {getClone} from './clone.js';\n\nimport {elementSymbol} from './symbols.js';\n\nimport {diff, isPrimitive, raw} from './diff.js';\n\n\n\nconst namespaceKeys = {\n    'http://www.w3.org/1999/xhtml': 0,\n    'http://www.w3.org/2000/svg': 1,\n    'http://www.w3.org/1998/Math/MathML': 2\n}\n\nconst namespaces = {\n    '0': 'http://www.w3.org/1999/xhtml',\n    '1': 'http://www.w3.org/2000/svg',\n    '2': 'http://www.w3.org/1998/Math/MathML'\n}\n\n\nexport function getNode(node) {\n    if (Array.isArray(node)) {\n        const result = [];\n        for (const elem of node) {\n            if (Array.isArray(elem)) {\n                result.push(...getNode(elem));\n            } else {\n                result.push(getNode(elem));\n            }\n        }\n        return result;\n    } else if (typeof node === 'function') {\n        return getNode(node());\n    } else {\n        return node;\n    }\n}\n\nconst strToArray = (strings, ...elements) => {\n    const list = [strings[0]];\n    for (let i = 1; i < strings.length; i++) {\n        list.push(elements[i-1], strings[i]);\n    }\n    return list;\n}\n\nexport const DOM = elementObject => {\n    if (isPrimitive(elementObject)) {\n        return document.createTextNode(elementObject);\n    }\n    const {namespace, tagName, props, children, eventListeners} = elementObject;\n    const element = document.createElementNS(namespaces[String(namespace)], tagName);\n    element[elementSymbol] = {};\n    for (const prop in props) {\n        if (prop.startsWith('_')) {\n            element[elementSymbol][prop] = props[prop];\n        } else {\n            element.setAttribute(prop, String(props[prop]));\n        }\n    }\n    for (const eventName of Object.keys(eventListeners)) {\n        const listener = eventListeners[eventName];\n        element.addEventListener(eventName, listener, false);\n    }\n    if (Object.keys(children).length) {\n        element.append(...Object.values(children).map(e => {\n            const dom = DOM(e);\n            if (!isPrimitive(e)) {\n                e.dom.parent = element;\n            }\n            return dom;\n        }));\n    }\n    elementObject.dom = {ref: element};\n    element[elementSymbol] = elementObject;\n    return element;\n}\n\nexport function patchDOM(dom, diffObject) {\n    const upd = dom.parentNode;\n    if (diffObject === diff.symbols.delete) {\n        if (upd) {\n            delete dom[elementSymbol];\n            dom.remove();\n            return;\n        } else {\n            return undefined;\n        }\n    }\n    if (isPrimitive(diffObject)) {\n\n        if (dom.nodeType === 3) { // текстовый узел\n            if (dom.nodeValue === String(diffObject)) {\n                return undefined; // строки совпали\n            } else {\n                if (upd) {\n                    dom.nodeValue = String(diffObject); // обновляем текст\n                    return;\n                } else {\n                    return document.createTextNode(diffObject);\n                }\n            }\n        } else {\n            if (upd) {\n                dom.replaceWith(document.createTextNode(diffObject));\n                return;\n            } else {\n                return document.createTextNode(diffObject);\n            }\n        }\n    }\n    const {props = {}, children = {}, eventListeners = {}, [diff.symbols.raw]: raw} = diffObject;\n    if (raw) {\n        if (upd) {\n            const newDom = DOM(diffObject);\n            dom.replaceWith(newDom);\n            if (!diffObject[diff.symbols.new].dom) {\n                diffObject[diff.symbols.new].dom = {};\n            }\n            diffObject[diff.symbols.new].dom.ref = newDom;\n\n            return;\n        } else {\n            return DOM(diffObject);\n        }\n    }\n\n    // обновление свойств\n    for (const prop in props) {\n        if (props[prop] === diff.symbols.delete) {\n            if (prop.startsWith('_')) {\n                delete dom[elementSymbol][prop];\n            } else {\n                dom.removeAttribute(prop);\n            }\n        } else {\n            if (prop.startsWith('_')) {\n                dom[elementSymbol][prop] = props[prop];\n            } else {\n                dom.setAttribute(prop, props[prop]);\n            }\n        }\n    }\n\n    // обновление перехватчиков событий\n    for (const eventName of Object.keys(eventListeners)) {\n        const listener = eventListeners[eventName];\n        if (listener === diff.symbols.delete) {\n            dom.removeEventListener(eventName, eventListeners[diff.symbols.meta].deleteListeners[eventName]);\n        } else {\n            if (!listener[diff.symbols.raw]) {\n                dom.removeEventListener(eventName, eventListeners[diff.symbols.meta].deleteListeners[eventName]);\n            }\n            dom.addEventListener(eventName, listener, false);\n        }\n    }\n\n    // обновление существующих потомков\n    const list = Array.from(dom.childNodes);\n    const updatedChildKeys = {};\n    for (let i = 0; i < list.length; i++) {\n        const child = list[i];\n        const key = (child[elementSymbol] || {})._key || String(i);\n        if (key in children) {\n            if (children[key] === diff.symbols.delete) {\n                dom.removeChild(child);\n            } else {\n                patchDOM(child, children[key]);\n                updatedChildKeys[key] = true;\n            }\n        }\n    }\n\n    // добавление новых потомков\n    const newChildren = [];\n    for (const key in children) {\n        if ((!children[key][diff.symbols.raw] && !isPrimitive(children[key])) || children[key] === diff.symbols.delete) {\n            continue;\n        }\n        if (!(key in updatedChildKeys)) {\n            newChildren.push(DOM(children[key]));\n        }\n    }\n    if (newChildren.length > 0) {\n        dom.append(...newChildren);\n    }\n\n    if (!diffObject[diff.symbols.new].dom) {\n        diffObject[diff.symbols.new].dom = {};\n    }\n    diffObject[diff.symbols.new].dom.ref = dom;\n\n    if (!upd) {\n        return dom;\n    }\n}\n\nconst example = E => E.div.class`example`.id`ex`.style(style)['data-value']`1`(\n    'string',\n    E.span`text`,\n    E.p('str'),\n    E`text v = ${E.span(2)}`,\n    [ // Fragment analog\n        E.div.style`color: red;`,\n        E.div.style`color: red;`('red'),\n        E.div.style`color: red;``red`,\n        E.div.style`color: red;``red ${E.span(1)}`, // red [Function]\n        E.div.style`color: red;`(E`red${E.span(1)}`) // red 1\n    ],\n    ...[1,2,3].map(i => E.i._key(i)(i)),\n    [1,2,3].map(i => E.i._key(i)(i))\n)\n\n\n\nconst elementStructure = T => ({\n    nodeType: T(Number),\n    namespace: T(String),\n    tagName: T(String),\n    props: T`?`({\n        [T(String)]: T(String)\n    }),\n    children: T`?`(Object)(T(elementStructure)),\n    data: T(String)\n});\n\nconst diffStructure = t => ({\n    nodeType: t`?`(Number), // перезаписывает тип узла\n    namespace: t`?`(String), // новое пространство имён\n    tagName: t`?`(String), // новый тег\n    props: t`?`({\n        [t(String)]: [t(String), t(null)] // переписать свойство, добавить, если нет, если null - удалить\n    }),\n    children: t`?`(Object)(t(diffStructure)), // рекурсивно повторить для потомков, лишние удалить, недостающие добавить, в будущем сопоставлять по ключу\n    data: t`?`(String), // поменять текстовый узел\n    delete: t`?`(true) // удалить элемент\n});\n\nconst diffFunctionStructure = t => t(Function)(({params}) =>\n    t({\n        params: {\n            A: t(elementStructure), // старый элемент\n            B: t(elementStructure) // новый элемент\n        }\n    })(t(diffStructure))\n);\n\n/*\nИспользовать хэши от пропсов и потомков\nв случае тектсовых нод - от значений\nможно вычислить уже на этапе создания элемента из кода\nхэш используем в качестве ключа элемента\nрассмотреть случай коллизий\n*/\nlet i = 0;\nexport function diffElements(A, B) {\n    // console.log({A, B});\n    if (!B) {\n        return diff.symbols.delete;\n    }\n    if (isPrimitive(A)) {\n        if (isPrimitive(B)) {\n            if (A !== B) {\n                return raw(B);\n            } else {\n                return {};\n            }\n        } else {\n            return raw(B);\n        }\n    }\n    if (isPrimitive(B)) {\n        return raw(B);\n    }\n    if (A.nodeType !== B.nodeType) {\n        return raw(B);\n    }\n    if (A.namespace !== B.namespace) {\n        return raw(B);\n    }\n    if (A.tagName !== B.tagName) {\n        return raw(B);\n    }\n    if (B.props._forceUpdate) {\n        return raw(B);\n    }\n    if ('_update' in B.props && !B.props._update) {\n        return {};\n    }\n    // console.time('diff props');\n    const diffProps = diff(A.props, B.props);\n    // console.timeEnd('diff props');\n    // console.time('diff events');\n    const diffEventListeners = diff(A.eventListeners, B.eventListeners);\n    for (const eventName of Object.keys(diffEventListeners)) {\n        if (diffEventListeners[eventName] === diff.symbols.delete) {\n            if (!diffEventListeners[diff.symbols.meta]) {\n                diffEventListeners[diff.symbols.meta] = {deleteListeners: {}};\n            }\n            diffEventListeners[diff.symbols.meta].deleteListeners[eventName] = A.eventListeners[eventName];\n        }\n    }\n    // console.timeEnd('diff events');\n    // const kc = 'diff children' + i;\n    // console.time(kc);\n\n    const diffChildren = {};\n    for (const key of Object.keys(B.children)) {\n        if (!(key in A.children)) {\n            diffChildren[key] = raw(B.children[key]); // новые ключи добавляем как есть\n        }\n    }\n    for (const key of Object.keys(A.children)) {\n        if (key in B.children) {\n            i++;\n            const k = 'children diff for key ' + key + i;\n            // console.time(k);\n            const diffItems = diffElements(A.children[key], B.children[key]); // сравниваем рекурсивно\n            if (isPrimitive(diffItems) || diffItems === diff.symbols.delete || Object.keys(diffItems).length > 0) {\n                diffChildren[key] = diffItems; // непустые добавляем\n            }\n            // console.timeEnd(k);\n        } else {\n            diffChildren[key] = diff.symbols.delete; // удаляем старые ключи\n        }\n    }\n    // console.timeEnd(kc);\n    // console.time('diff result');\n\n    const result = {};\n    if (Object.keys(diffProps).length > 0) {\n        result.props = diffProps;\n    }\n    if (Object.keys(diffEventListeners).length > 0) {\n        result.eventListeners = diffEventListeners;\n    }\n    if (Object.keys(diffChildren).length > 0) {\n        result.children = diffChildren;\n    }\n    result[diff.symbols.new] = B;\n    // console.timeEnd('diff result');\n\n    return result;\n}\n\nfunction getProps(attributes) {\n    if (!attributes) {\n        return {};\n    }\n    const attrs = Array.from(attributes);\n    const result = {};\n    for (const {name, value} of attrs) {\n        result[name] = value;\n    }\n    return result;\n}\n\nfunction getChildren(childNodes) {\n    if (!childNodes) {\n        return {};\n    }\n    const children = Array.from(childNodes);\n    const result = {};\n    for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        const key = child.hasAttribute && child.hasAttribute('data-key') ? child.getAttribute('data-key') : String(i);\n        result[key] = getElementFromDOM(child);\n    }\n    return result;\n}\n\nfunction getElementFromDOM(domElement) {\n    return {\n        nodeType: domElement.nodeType,\n        namespace: namespaceKeys[domElement.namespaceURI],\n        tagName: domElement.tagName,\n        props: getProps(domElement.attributes),\n        children: getChildren(domElement.childNodes),\n        data: domElement.data\n    }\n}\n\n// console.log(getElementFromDOM(document.head));\n// console.log(getElementFromDOM(document.body));\n// console.log(diffElements(getElementFromDOM(document.head), getElementFromDOM(document.body)));\n\nconst getElement = namespace => new Proxy(strToArray, {\n    get(target, tag) {\n        const create = (tagName = 'div', props = {}, children = []) => {\n            const element = {\n                namespace: namespaceKeys[namespace],\n                tagName,\n                props: {},\n                children: {},\n                eventListeners: {}\n            };\n            for (const prop in props) {\n                if (prop.length > 2 && prop.startsWith('on') && prop[2] === prop[2].toUpperCase()) {\n                    const eventName = prop[2].toLowerCase() + prop.slice(3);\n                    const listener = props[prop];\n                    if (typeof listener !== 'function') {\n                        console.error(new Error(`${eventName} listener is not function`));\n                        continue;\n                    }\n                    element.eventListeners[eventName] = listener;\n                } else {\n                    element.props[prop] = (props[prop]);\n                }\n            }\n            const nodes = [];\n            for (let node of children.filter(e => e)) {\n                node = getNode(node);\n                if (Array.isArray(node)) {\n                    nodes.push(...node.filter(e => e));\n                } else {\n                    nodes.push(node);\n                }\n            }\n            const dublicatedKeys = new Set();\n            for (let i = 0; i < nodes.length; i++) {\n                const node = nodes[i];\n                const key = node.props && node.props._key && String(node.props._key);\n                const index = String(i);\n                if (key && !(key in element.children)) {\n                    element.children[key] = node;\n                } else {\n                    if (key in element.children) {\n                        dublicatedKeys.add(key);\n                    }\n                    element.children[index] = node; // TODO: рекурсивно выбрать уникальное значение\n                }\n            }\n            if (dublicatedKeys.size > 0) {\n                console.error(new Error(`keys ${[...dublicatedKeys]} have been dublicated`));\n            }\n            return element;\n        }\n        function stableElement(name, props) {\n            return new Proxy((...children) => {\n                if (Array.isArray(children[0]) && 'raw' in children[0]) {\n                    return create(name, props, strToArray(...children));\n                }\n                return create(name, props, children);\n            }, {\n                get(target, prop) {\n                    return function (value, ...items) {\n                        if (prop === '_props') {\n                            return stableElement(name, {...props, ...value});\n                        }\n                        if (Array.isArray(value) && 'raw' in value) {\n                            return stableElement(name, {...props, [prop]: strToArray(value, ...items).join('')});\n                        }\n                        return stableElement(name, {...props, [prop]: value});\n                    }\n                },\n                apply(target, thisArg, argArray) {\n                    if (Array.isArray(argArray[0]) && 'raw' in argArray[0]) {\n                        return create(name, props, strToArray(...argArray));\n                    }\n                    return create(name, props, argArray);\n                }\n            })\n        }\n        return stableElement(tag, {})\n    }\n});\n\nexport const E = getElement('http://www.w3.org/1999/xhtml');\nexport const S = getElement('http://www.w3.org/2000/svg');\nexport const M = getElement('http://www.w3.org/1998/Math/MathML');\n\n// console.log(E.div(2));\n// const onHover = () => console.log('hover!');\n// console.log(E.div.id`text`.onclick('alert(2)').onHover(onHover).onClick(() => alert('hi!'))(2, [3,4,[5,6,[7,8, () => 11, {props:{_key: 'a'}, v: 444}]]]));\n// const a = (E.div.class`example`.id`ex`.onHover(onHover).onClick(() => alert('hi!!')).style(`style`)['data-value']`1`(\n//     'string',\n//     E.span`text`,\n//     E.p('str'),\n//     E`text v = ${E.span(2)}`,\n//     [ // Fragment analog\n//         E.div.style`color: red;`,\n//         E.div.style`color: red;`('red'),\n//         E.div.style`color: red;``red`,\n//         E.div.style`color: red;``red ${E.span(1)}`, // red [Function]\n//         E.div.style`color: red;`(E`red${E.span(1)}`) // red 1\n//     ],\n//     ...[1,2,3].map(i => E.i._key(i+'2')(i)),\n//     [1,2,3].map(i => E.i._key(i+'3')(i))\n// ));\n// const b = E.div.onHover(onHover)(55);\n// const c = E.article(\n//     E.span`222${E.span(1+11)}`\n// );\n// console.log({a});\n// console.log({b});\n// console.log(DOM(a));\n// console.log(DOM(b));\n// console.log(diffElements(a, b));\n// const domA = DOM(a);\n// console.log(DOM(a));\n// patchDOM(domA, diffElements(a, b));\n// console.log(domA);\n// const domA2 = DOM(a);\n// const block = DOM(E.div());\n// block.append(domA2);\n// patchDOM(domA2, diffElements(a, b));\n// console.log(diffElements(b, c));\n// patchDOM(domA2, diffElements(b, c));\n// console.log(block);\n// console.dir(block);\n\n\n\n// E.a\n// E['a']\n\n// E[Symbol('a')]\n// E[Symbol('props')]\n// E[Symbol('ref')]\n// // E[E.$`ref`]\n// // E[E.$`props`]\n// // E[E.$({a:1, b:2})]\n// E.$ // внутри []\n\n// E`a` // firstArg.raw - возвратит массив\n\n// E('a'), E([1, 2]), E(1, 2, E.span(1)) // преобразует в DOM\n\n// // резерв\n// E.$a\n// E._\n// E._a\n// E.A\n\n","import {E, DOM} from './element.js';\nconst getDirPath = fileUrl => (new URL(fileUrl)).pathname.split('/').slice(0, -1).join('/');\nexport default function(sourceUrl, relativePath) {\n    const type = relativePath.split('.').slice(-1)[0];\n    if (!['css', 'less'].includes(type)) {\n        throw new Error(`Import file type is ${type}, but 'css' or 'less' types are available only.`);\n    }\n    const pathRelative = /^\\.\\.?\\//.test(relativePath);\n    const sourcePath = getDirPath(sourceUrl).split('/').slice(1).join('/');\n    const fullPath = sourcePath + (pathRelative ? relativePath.replace(/^\\.\\.?/, '') : '/' + relativePath);\n\n    return new Promise(resolve => {\n        const link = DOM(E.link\n            .rel(`stylesheet${type === 'less' ? '/less' : ''}`)\n            .type('text/css')\n            .href(fullPath)());\n        if (type === 'less') {\n            if (!document.head.querySelector('script[src=\"less.js\"]')) {\n                const less = E.script.src('less.js')();\n                document.head.append(DOM(less));\n            }\n            document.head.append(link);\n            function update() {\n                const style = document.head.querySelector(`style[id$=\"${fullPath.split('.')[0].replace(/\\//g, '-')}\"]`);\n                // console.log(1);\n                if (style) {\n                    window.setTimeout(resolve, 100);\n                } else {\n                    window.setTimeout(update, 10);\n                }\n            }\n            update();\n        } else {\n            document.head.append(link);\n            link.addEventListener('load', () => resolve());\n        }\n    });\n}\n","export const getChildren = children => {\n    const nodes = [];\n    for (const node of children) {\n        if (Array.isArray(node)) {\n            nodes.push(...node);\n        } else if ((typeof node) === 'function') {\n            nodes.push(node());\n        } else {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\n","const _log = condition => f => {\n    if (condition) {\n        if (typeof f === 'function') {\n            f();\n        } else {\n            console.log(f);\n        }\n    }\n}\nconst loggerSymbol = Symbol('logger');\nexport const logAllLevels = Symbol('all');\nwindow[loggerSymbol] = {};\n\nexport const setLogger = settings => {\n    window[loggerSymbol] = settings;\n};\n\nfunction getCondition(levels) {\n    let current = window[loggerSymbol];\n    for (const level of levels) {\n        if(current && logAllLevels in current) {\n            return true;\n        }\n        if (!(current && level in current)) {\n            return false;\n        }\n        current = current[level];\n    }\n    return true;\n}\n\nfunction createLogProxy(levels) {\n    return new Proxy(f => _log(getCondition(levels))(f), {\n        get: (target, level) => createLogProxy([...levels, level])\n    });\n}\n\nexport const log = createLogProxy([]);\n\n","import {E, DOM, getNode, diffElements, patchDOM} from './element.js';\nimport {getClone} from './clone.js';\nimport {\n    getChildren\n} from './children.js';\nimport style from './style.js';\nimport {log} from './logger.js';\nimport {elementSymbol, componentSymbol} from './symbols.js';\n\nconst set = state => arg => {\n    let newObject;\n    if (typeof arg === 'object') {\n        newObject = arg;\n    } else if (typeof arg === 'function') {\n        newObject = arg(state);\n    }\n    return Object.assign({}, state, newObject);\n}\n\nfunction getProps(element) {\n    if (element.nodeType === 3) { // textNode\n        return {};\n    }\n    const props = {};\n    for (let i = 0; i < element.attributes.length; i++) {\n        const attr = element.attributes[i];\n        props[attr.name] = attr.value;\n    }\n    return props;\n}\n\nfunction logAdd(element) {\n    console.log('%c + ', style({\n        color: 'green',\n        backgroundColor: '#dfd'\n    }), element);\n}\n\nfunction logRemove(element) {\n    console.log('%c - ', style({\n        color: 'red',\n        backgroundColor: '#fdd'\n    }), element);\n}\n\nfunction getElem(component) {\n    if (Array.isArray(component)) {\n        const fragment = document.createDocumentFragment();\n        fragment.append(...component.map(e => getElem(e)));\n        return fragment;\n    }\n    return (typeof component === 'function') ? component() : component;\n}\n\nfunction isTypeChanged(element, newElement) {\n    if (element && !newElement) {\n        return true;\n    }\n    if (element.nodeType !== newElement.nodeType) {\n        return true;\n    }\n    if (element.nodeName !== newElement.nodeName) {\n        return true;\n    }\n    return false;\n}\n\nfunction componentConstructor(componentName) {\n    const handlerErrors = new Proxy({}, {\n        get(target, name) {\n            if (!(name in target)) {\n                target[name] = {};\n            }\n            return target[name];\n        }\n    })\n\n    return function (makeComponent) {\n        const create = (props = {}, children = []) => {\n            // уникальный идентификатор для созданного элемента\n            const componentNameSymbol = Symbol(componentName);\n\n            function didMountEvent(element, source) {\n                // console.group(`didMount[${source}]`);\n                // console.log(element);\n                // console.groupEnd();\n                window.dispatchEvent(new CustomEvent('didMount', {\n                    detail: {\n                        componentNameSymbol: element[componentSymbol].componentNameSymbol\n                    }\n                }));\n            }\n\n            function willUnmountEvent(element, source) {\n                // console.group(`willUnmount[${source}]`);\n                // console.log(element);\n                // console.groupEnd();\n                window.dispatchEvent(new CustomEvent('willUnmount', {\n                    detail: {\n                        componentNameSymbol: element[componentSymbol].componentNameSymbol\n                    }\n                }));\n            }\n\n            // состояние компонента\n            let state = {};\n\n            // предыдущее состояние\n            let prevState = {};\n\n            // элемент DOM, который будет возвращён\n            // TODO: инлайн компоненты, вложенные в одном узле, у списка это родитель\n            // структура цепочки компонентов в элементе\n            // [компонент, который возвращает массив] > [аналогично, только вложенный] > возвращает компонент > который возвращает этот элемент\n\n            let element = {};\n\n            // вызванные обработчики\n            let handlerIndex = 0;\n            const handlers = new Proxy({}, {\n                get(target, name) {\n                    if (!(name in target)) {\n                        target[name] = {\n                            count: 0,\n                            indexes: [],\n                        };\n                        target[name].bump = () => {\n                            handlerIndex++;\n                            target[name].count++;\n                            target[name].indexes.push(handlerIndex);\n                        }\n                    }\n                    return target[name];\n                }\n            });\n            // TODO: отслеживать вызовы и гарантировать порядок\n\n            function initState(startState) {\n                if (handlers.initState.count !== 0) {\n                    if (!handlerErrors.initState.count) {\n                        handlerErrors.initState.count = 1;\n                        console.error(new Error('Повторный вызов инициализации состояния'));\n                    }\n                }\n                handlers.initState.bump();\n                state = startState;\n            }\n\n            let changedStateFields = {};\n\n            function setState(newState) {\n                prevState = state;\n                const newStateObject = typeof newState === 'function' ? newState(state) : newState;\n                const change = {};\n                for (const field of Object.keys(newStateObject)) {\n                    change[field] = true;\n                }\n                changedStateFields = change;\n                // console.log({changedStateFields});\n                state = set(state)(newState);\n                rerender();\n            }\n\n            const changeState = (...names) => {\n                for (const name of names) {\n                    if (changedStateFields[name]) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n\n            const stateClass = () => state;\n            stateClass.set = setState;\n            stateClass.init = initState;\n            stateClass.onChange = changeState; // позволит писать _update(state.onChange('name', 'age'))\n            // в перспективе что-то вроде _related(['name', 'age'])\n            // идея - писать в метаинформации объектов state данные о своём state - имя, компонент и т.д.\n            // тогда при обновлении мы посмотрим, и если поля из state.set не имеют отношения к полям, от котрых зависит обновление, то элемент не обновляется\n            // более общий вопрос, как отследить зависимость от некоторого значения из состояния?\n\n            // можно связать свойство элемента со значением свойства, если передавать не само значение, а функцию, что передаёт значение. То есть не Person.age(state.age+1) а Person.age(() => state.age+1). До вызова функции мы посмотрим мету у элемента, а при вызове у значения. Но так будет не так удобно писать, поэтому это может сделать препроцессор? нежелательно!!! к тожу же если передавать просто функцию, профит исчезнет. Не пойдёт!\n            // в общем случае задача почти неразрешима\n            // можно проксировать хоть насквозь, но передай в другую функцию и ничего не выйдет\n            // опять же можно немного подхачить и использовать препроцессор для отслеживания явного применения, он должен быть достаточно умным, чтобы отслеживать зависимости применения переменных;\n            // но можно сделать зависимость от ввода или слуйность и препроцессор такое не поймает\n\n            element[componentNameSymbol] = true;\n\n            const didMount = callback => {\n                function onDidMount(event) {\n                    // console.log('DIDMOUNT', event);\n                    if (event.detail.componentNameSymbol === componentNameSymbol) {\n                        log.component(() => {\n                            // console.group('didMount -- event!!!');\n                            // console.log(element[componentSymbol].element);\n                            // console.log(componentName);\n                            // console.log(event);\n                            // console.log(callback);\n                            // console.groupEnd();\n                        });\n                        callback();\n                        // window.removeEventListener(didMountListener);\n                    }\n                }\n\n                handlers.didMount.bump();\n                const didMountListener = window.addEventListener('didMount', onDidMount, false);\n                // element[elementSymbol].props.onDidMount = onDidMount;\n                // element[elementSymbol].eventListeners.didMount = [onDidMount];\n            }\n\n            let firstAppend = true;\n\n            const storage = {};\n            const elements = [];\n\n            const mo = new MutationObserver(function (mutations, observer) {\n                // console.info('Observer');\n                // console.log({mutations, observer});\n                // console.log('didMount', firstAppend, componentName, element);\n                // console.log(handlers);\n                if (element.dom && element.dom.ref.closest('html')) {\n                    // element = false;\n                    // const componentDOMSymbol = Symbol('componentDOMSymbol');\n                    // if(!storage[componentDOMSymbol]) { // первый рендер\n                    //     storage[componentDOMSymbol] = {first: true};\n                    elements[Object.keys(elements).length] = {\n                        first: true,\n                        element: element.innerHTML\n                    };\n                    // console.log(elements);\n                    // }\n                    // if (storage[componentDOMSymbol].first) {\n                    // console.log('есть', element);\n                    // console.log({storage});\n                    // storage[componentDOMSymbol].first = false;\n                    if (firstAppend) {\n                        window.dispatchEvent(new CustomEvent('didMount', {\n                            detail: {\n                                componentNameSymbol: componentNameSymbol\n                            }\n                        }));\n                        firstAppend = false;\n                        mo.disconnect();\n                    }\n                    // }\n                } else {\n                    // console.log('нет', element);\n                    firstAppend = true;\n                    mo.disconnect();\n                }\n            });\n            mo.observe(document, {\n                attributes: true,\n                childList: true,\n                subtree: true\n            });\n\n\n            props.children = children;\n            const render = makeComponent({\n                props,\n                state: stateClass,\n                hooks: {\n                    didMount\n                }\n            });\n\n            function rerender() {\n                // console.time('get node');\n                const newElement = getNode(render());\n                // console.timeEnd('get node');\n                const dom = element.dom;\n                const componentData = element.component;\n                // console.time('diff');\n                const diffElement = diffElements(element, newElement);\n                // console.log({diffElement});\n                // console.timeEnd('diff');\n\n                // новые элементы создаются без привязки к странице\n\n                element = newElement;\n                // BUG: не сохраняется новый вид элемента\n                element.component = componentData;\n                // console.log('update:', componentName, {element, dom});\n\n                if (dom) { // есть dom\n                    // получить их diff, TODO: учитывая static\n                    // console.log({dom, diffElement});\n                    element.dom = dom;\n                    // надо перепривязать к dom всех потомков\n                    // console.time('patch DOM');\n                    patchDOM(dom.ref, diffElement);\n                    // console.timeEnd('patch DOM');\n                }\n            }\n\n            element = getNode(render()); // первый рендер\n\n            if (Array.isArray(element)) {\n                for (const item of element) {\n                    setComponentData(item, {array: true})\n                }\n            } else {\n                setComponentData(element);\n            }\n\n            function setComponentData(element, {array = false} = {}) {\n                if (!element.component) {\n                    element.component = {level: 0};\n                }\n                const level = element.component.level;\n                element.component[String(level)] = {\n                    array,\n                    name: componentName,\n                    props,\n                    state\n                }\n                element.component.level++;\n            }\n\n            // первое присоединение dom\n            // if (!element.dom) {\n                // element.dom = {};\n            // }\n            // const dom = DOM(element);\n            // element.dom.ref = dom;\n            // if (element.dom.parent) {\n            //     element.dom.parent.append(dom);\n            // }\n\n            // console.log('render:', componentName, {element});\n            return () => element;\n        }\n\n        function stableElement(props) {\n            return new Proxy((...children) => create({}, children), {\n                get(target, prop) {\n                    return function (value) {\n                        // console.log(`added prop ${prop} = ${value}`)\n                        return stableElement({\n                            ...props,\n                            [prop]: value\n                        });\n                    }\n                },\n                apply(target, thisArg, argArray) {\n                    return create(props, argArray);\n                }\n            })\n        }\n        return stableElement({});\n    };\n}\n\nconst Component = new Proxy({}, {\n    get: function (target, componentName) {\n        return componentConstructor(componentName)\n    }\n});\n\nexport default Component;\n","import {\n    E,\n    Component,\n    Custom\n} from './index.js';\n\n\nconst historyUpdate = new CustomEvent('historyUpdate');\n\nfunction pushState(data, title, url) {\n    history.pushState(data, title, url);\n    window.dispatchEvent(historyUpdate);\n}\n\nfunction replaceState(data, title, url) {\n    history.replaceState(data, title, url);\n    window.dispatchEvent(historyUpdate);\n}\n\nwindow.addEventListener('popstate', () => window.dispatchEvent(historyUpdate));\n\nexport const getRouterState = (routes) => {\n    if (!document.location.search) {\n        return {params: {}, path: '/', routes: routes('')}\n    }\n    const params = new URLSearchParams(document.location.search);\n    const stack = [];\n    for (const [param] of params) {\n        if (param[0] === '/') {\n            stack.push(...param.slice(1).split('/'));\n        }\n    }\n    let resultParams = {};\n    let resultPath = null;\n    for (const path in routes({})) {\n        const pathStack = path.split('/');\n        const params = {};\n        let equal = true;\n        for (let i = 0; i < pathStack.length; i++) {\n            if (i === stack.length) {\n                equal = false;\n                break;\n            }\n            const level = pathStack[i];\n            if (level[0] === ':') {\n                params[level.slice(1)] = stack[i];\n            } else if (level !== stack[i]) {\n                equal = false;\n                break;\n            }\n        }\n        if (equal) {\n            resultParams = params;\n            resultPath = path;\n        }\n    }\n    return {params: resultParams, path: resultPath, routes: routes(resultParams)};\n}\n\nexport const RouteLink = Component.RouteLink(({props: {href, children}}) => {\n    return () => {\n        const onLinkClick = (event) => {\n            event.preventDefault();\n            if (href === '/') {\n                pushState({stack: []}, '', '/');\n                return;\n            }\n            if (((window.history.state || {}).stack || []).join('/') === href) {\n                return;\n            }\n            pushState({\n                stack: href.split('/')\n            }, '', '?/' + href);\n        };\n        return E.a.href(href).onClick(onLinkClick)(children);\n    };\n})\n\n\nexport const Switch = Component.Switch(({props, state}) => {\n    state.init(getRouterState(props.routes));\n    window.addEventListener('historyUpdate', function () {\n        state.set(getRouterState(props.routes));\n    });\n    return () => {\n        const {path, routes} = state();\n        return routes[path];\n    }\n});\n","import {E, Component} from './index.js';\n\nlet count  = 0;\nfunction getCustom(name, elements, didMount) {\n    class CustomElement extends HTMLElement {\n        constructor() {\n            super();\n\n            const shadow = this.attachShadow({mode: 'open'});\n            shadow.append(E.slot.name('element-slot')())\n        }\n\n        connectedCallback() {\n            didMount(elements)\n        }\n    }\n    count++;\n    const customName = `custom-${name}-${count}`;\n    customElements.define(customName, CustomElement);\n    return E[customName](\n        E.div.slot('element-slot')(\n            elements\n        )\n    );\n}\n\nexport default Component.Custom(() => {\n    return ({name, children, didMount}) => {\n        return getCustom(name, children, didMount);\n    }\n});\n","export const css = new Proxy({}, {\n    get: (target, name) => text => [`%c${text}%c`, name, '']\n});\n\nexport const color = new Proxy({}, {\n    get: (target, name) => text => css[`color:${name}`](text)\n});\n\n\nexport function consoleStyle(textList, ...args) {\n    const styles = [];\n    const text = [];\n    for (let i = 0; i < textList.length - 1; i++) {\n        const s = textList[i];\n        const v = args[i][0];\n        text.push(s, v);\n        const local = args[i][1];\n        styles.push(...(Array.isArray(local) ? local : [local, args[i][2]]));\n    }\n    text.push(textList[textList.length - 1]);\n    return [text.join(''), styles];\n}\n\nexport const mix = new Proxy({}, {\n    get: (target, name) => styles => styles.map(e => `${e};${name}`)\n});\n\nconst background = color => e => mix[`background-color:${color}`](e);\n\n\nconst _key = text => color['#a53bbb'](text);\nconst _func = text => color['#35a0ed'](text);\nconst _var = text => color['#de4d57'](text);\nconst _const = text => color['#e0994a'](text);\nconst _op = text => color['#4ba6b1'](text);\nconst S = {\n    key: _key,\n    func: _func\n}\n\nconst [text, styles] = consoleStyle`\n${S.key`export`} ${S.key`function`} ${S.func`consoleStyle`}(${_var('textList')}, ...${_var('args')}) {\n    ${_key('const')} ${_var('styles')} ${_op('=')} [];\n    ${_key('const')} ${_var('text')} ${_op('=')} [];\n    ${_key('for')} (${_key('let')} ${_var('i')} ${_op('=')} ${_const('0')}; ${_var('i')} ${_op('<')} ${_var('textList')}.${_var('length')} ${_op('-')} ${_const('1')}; ${_var('i')}${_op('++')}) {\n        ${_key('const')} ${_var('s')} ${_op('=')} ${_var('textList')}[${_var('i')}];\n        ${_key('const')} ${_var('v')} ${_op('=')} ${_var('args')}[${_var('i')}][${_const('0')}];\n        ${_var('text')}.${_op('push')}(${_var('s')}, ${_var('v')});\n        ${_var('styles')}.${_op('push')}(${_var('args')}[${_var('i')}][${_const('1')}], ${_var('args')}[${_var('i')}][${_const('2')}]);\n    }\n    ${_var('text')}.${_op('push')}(${_var('textList')}[${_var('textList')}.${_var('length')} ${_op('-')} ${_const('1')}]);\n    ${_key('return')} [${_var('text')}.${_op('join')}(${_var(`''`)}), ${_var('styles')}];\n}\n`;\n// console.log(text, ...styles);\n\nexport const _b = text => css['font-weight: bold'](text);\nexport const _i = text => css['font-style: italic'](text);\nexport const _pre = text => css['font-family: monospace'](text);\nexport const _h = l => text => css[`font-size: ${21 - l}px`](text);\n\nconst [text1, styles1] = consoleStyle`${_h(1)('Документация')}\nsee http://127.0.0.1:5500/?/blog/1\n${_b('bold')} and ${_i('italic')} and ${_pre('pre')}\n`;\n// console.log(text1, ...styles1);\n\n","export function Class(createClass) {\n    const fields = {};\n    const field = new Proxy({}, {\n        get(target, prop) {\n            return getter => {\n                fields[prop] = getter;\n            }\n        }\n    });\n    return initialValues => {\n        const constructor = create => create(initialValues);\n        createClass({field, constructor});\n        return new Proxy({}, {\n            get(target, prop) {\n                return prop in fields ? fields[prop]() : undefined;\n            }\n        })\n    }\n}\n\n// const Count = Class(({constructor, field}) => {\n//     let a = 0; // private field\n//     constructor(x => {\n//         a = x;\n//     });\n//     field.a(() => a); // public field\n//     const add = () => a++; // private method\n//     field.add(() => add); // public method\n// });\n\n// const counter1 = Count(1);\n// console.log(counter1.a); // 1\n// counter1.add();\n// counter1.add();\n// console.log(counter1.a); // 3\n\n// class PrefixTree {\n//     constructor(...values) {\n//         this.tree = [[]];\n//         for (const [name, value] of values) {\n//             this.set(name, value);\n//         }\n//     }\n\n//     getTree() {\n//         return this.tree;\n//     }\n\n//     set(name, value) {\n//         name = String(name);\n//         let current = this.tree;\n//         if (name === '') {\n//             current[1] = value;\n//             return;\n//         }\n//         const list = name.split('');\n//         for (let i = 0; i < list.length; i++) {\n//             const char = list[i];\n//             if (i === list.length - 1) {\n//                 current[1] = value;\n//             } else {\n//                 let exist = false;\n//                 const l = current[0].length;\n//                 for (let j = 0; j < l; j++) {\n//                     const [c, sub] = current[0][j];\n//                     if (c === char) {\n//                         current = sub;\n//                         exist = true;\n//                         break;\n//                     }\n//                 }\n//                 if (!exist) {\n//                     current[0][l] = [char, [[]]];\n//                     current = current[0][l][1];\n//                 }\n//             }\n//         }\n//     }\n\n//     get(name) {\n//         let current = this.tree;\n//         const list = name.split('');\n//         for (let i = 0; i < list.length; i++) {\n//             const char = list[i];\n//             for (let j = 0; j < current[0].length; j++) {\n//                 const [c, sub] = current[0][j];\n//                 if (c === char) {\n//                     current = sub;\n//                     break;\n//                 }\n//                 if (j === current[0].length - 1) {\n//                     return undefined;\n//                 }\n//             }\n//         }\n//         return current[1];\n//     }\n// }\n\n// const tree = new PrefixTree();\n// const obj = {};\n// const map = new Map();\n\n// console.time('Prefix Tree');\n// for (let j = 0; j < 17; j++) {\n\n//     for (let i = 0; i < 10000; i++) {\n//         tree.set(String(Math.random()).slice(2, j), Math.random());\n//     }\n// }\n// console.timeEnd('Prefix Tree');\n\n// console.time('Native object');\n// for (let j = 0; j < 17; j++) {\n//     for (let i = 0; i < 10000; i++) {\n//         obj[String(Math.random()).slice(2, j)] = Math.random();\n//     }\n// }\n// console.timeEnd('Native object');\n\n// console.time('Native Map');\n// for (let j = 0; j < 17; j++) {\n//     for (let i = 0; i < 10000; i++) {\n//         map.set(String(Math.random()).slice(2, j), Math.random());\n//     }\n// }\n// console.timeEnd('Native Map');\n\n\n// console.log(tree.getTree());\n// console.log(obj);\n\nconst o = {a: 1};\n\nfunction e(object) {}\n\ne(o);\n","export {default as block} from './bem.js';\nexport {default as style} from './style.js';\nexport {default as css} from './css.js';\nexport {E, S, M} from './element.js';\nexport {default as Component} from './component.js';\nexport {Switch, RouteLink, getRouterState} from './router.js';\nexport {default as Custom} from './custom.js';\nexport {log, setLogger, logAllLevels} from './logger.js';\nexport {consoleStyle} from './consoleStyle.js';\nexport {Class} from './class.js';\nexport {diff} from './diff.js';\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport './Breadcrumbs.less';\n\nconst b = block('breadcrumbs');\n\nconst Breadcrumbs = Component.Breadcrumbs(({props}) => {\n    return () => E.div.class(b())(\n        props.items\n        .map(([name, href], i) => {\n            const last = i === props.items.length - 1;\n            return E.span(\n                E.div.style('display: inline-block')(\n                    last ? name : RouteLink.href(href)(name)\n                ),\n                last ? '' : ' / '\n            );\n        })\n    );\n});\n\nexport default Breadcrumbs;\n","export default {\n    0: {\n        type: 'js',\n        creationTime: '2020-01-15T17:31:44',\n        title: 'Я создал этот сайт',\n        tags: ['web', 'site']\n    },\n    1: {\n        type: 'html',\n        creationTime: '2020-03-09T14:09:41',\n        title: 'Создаём приложение на Filemaker',\n        tags: ['filemaker', 'tutorial']\n    },\n    2: {\n        type: 'js',\n        creationTime: '2020-03-28T22:01:49',\n        title: 'Отказ от нативных es6 модулей в пользу Parcel',\n        tags: ['es6', 'parcel']\n    },\n    3: {\n        type: 'js',\n        creationTime: '2020-04-04T19:38:53',\n        title: 'Переписал движок сайта на virtual DOM',\n        tags: ['js', 'virtual dom']\n    },\n    4: {\n        type: 'js',\n        creationTime: '2020-04-11T09:52:02',\n        title: 'Стандартная модель элементарных частиц — верстаем с CSS Grid',\n        tags: ['css', 'grid', 'physics', 'standard model']\n    }\n}\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    getRouterState,\n    Switch,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport './Button.less';\n\nconst b = block('button');\n\nconst Button = Component.Button(({props: {children, size}}) => {\n    return () => E.button.class(b())(\n        children\n    )\n})\n\nexport default Button;\n","export {default as Button} from './Button/Button.js';\n","import {E} from './element.js';\nimport { consoleStyle, _b, _i, _pre, _h } from './consoleStyle.js';\nimport {Component} from './index.js';\n\nexport function createBook(f) {\n    return {\n        to: type => {\n            const types = {\n                html: () => ({\n                    V: (strings, ...elements) => {\n                        const stringElements = strings.map(s => {\n                            const result = [];\n                            const brs = s.match(/\\n\\n+/g);\n                            if (!brs) {\n                                return s;\n                            }\n                            let tail = s;\n                            let i;\n                            for (const br of brs) {\n                                i = tail.indexOf(br);\n                                const subbrs = [];\n                                if (br.length === 2) {\n                                    subbrs.push(E.br())\n                                } else {\n                                    for (let j = 0; j < 2 * br.length - 4; j++) {\n                                        subbrs.push(E.br());\n                                    }\n                                }\n                                result.push(tail.slice(0, i), ...subbrs);\n                                tail = tail.slice(i + br.length);\n                            }\n                            result.push(tail);\n\n                            return result;\n                        })\n                        const list = [...stringElements[0]];\n                        for (let i = 1; i < strings.length; i++) {\n                            list.push(elements[i-1], ...stringElements[i]);\n                        }\n                        return list;\n                    },\n                    b: t => E.b(t),\n                    i: t => E.i(t),\n                    code: t => E.code(t),\n                    pre: t => E.pre(t),\n                    h: l => t => E[`h${l}`](t),\n                    n: E.br,\n                    p: t => E.p(t),\n                    img: (src, alt) => E.img.src(src).alt(alt),\n                    a: href => text => E.a.href(href)(text),\n                    external: f => f(E, Component)\n                }),\n                markdown: () => ({\n                    V: (strings, ...elements) => {\n                        const list = [strings[0]];\n                        for (let i = 1; i < strings.length; i++) {\n                            list.push(elements[i-1], strings[i]);\n                        }\n                        return list.join('');\n                    },\n                    b: t => `**${t}**`,\n                    i: t => `_${t}_`,\n                    code: t => `\\`${t}\\``,\n                    h: l => t => `${'#'.repeat(l)} ${t}`,\n                    n: '  \\n',\n                    p: t => `\\n\\n${t}\\n\\n`,\n                    img: (src, alt) => `![${alt || ''}](${src})`,\n                    a: href => text => `[${text || ''}](${href})`\n                }),\n                browserConsole: () => ({\n                    V: consoleStyle,\n                    b: _b,\n                    i: _i,\n                    code: _pre,\n                    h: _h,\n                    n: '\\n',\n                    p: t => t,\n                    img: (src, alt) => [`IMG[${src || ''}]: ${alt || ''}`, []],\n                    a: href => text => [`${href} (${text})`, []]\n                })\n            };\n            if (type && type in types) {\n                return f(types[type]());\n            } else {\n                throw new Error(`Invalid type. Available types: ${Object.keys(types).join()}`);\n            }\n        }\n    }\n}\n\n// const bookTemplate = createBook(({b, i, h, code, n, p, img, a, V}) =>\n// V`\n// ${h(1)('Header')}\n// ${p(V`\n// ${b('жирный')} текст ${n}\n// ${i('курсивный')} текст\n// ${img('../assets/images/favicon/favicon-32x32.png', 'favicon')}\n// `)}\n// блок ${code('программного кода')} ${n}\n// ${a('https://github.com')('Гитхаб')} - ссылка\n// `);\n\n// export const book = bookTemplate.to('html');\n\n// console.log(bookTemplate.to('markdown'));\n\n// const [text, styles] = bookTemplate.to('browserConsole');\n// console.log(text, ...styles);\n\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport blog from '../../data/blog/index.js';\nimport {Button} from '../../blocks/index.js';\nimport {Breadcrumbs} from '../index.js';\nimport {createBook} from '../../utils/book.js';\n\nimport './Post.less';\n\nconst b = block('post');\n\nconst Post = Component.Post(({props, state, hooks: {didMount}}) => {\n    state.init({\n        text: null\n    })\n    didMount(() => {\n        const {id} = props;\n        const {type} = blog[id];\n        const path = `../data/blog/data/${id}/index.${type}?r=${window.appVersion}`;\n        if (type === 'html') {\n            fetch(path).then(e => {\n                // console.log(e.clone().blob());\n                return e.blob()\n            }).then(data => {\n                return 'html' || data.text();\n\n            }).then(text => {\n                // console.log(text);\n                state.set({text: text});\n            });\n        } else if (type === 'js') {\n            import(path).then(data => {\n                // console.log(data);\n                state.set({text: createBook(data.default).to('html')})\n            }).catch(e => {\n                console.error(e);\n                state.set({text: 'Ошибка загрузки контента'});\n            });\n        }\n    })\n\n    return () => {\n        const {id} = props;\n        const {type} = blog[id];\n        const {text} = state();\n        const {title, creationTime} = blog[id];\n        const template = E.div.class(b('content'));\n        let elem;\n        if (type === 'html') {\n            const iframe = E.iframe.id(`iframe-post-${id}`).src(`/data/blog/data/${id}/index.${type}`).style('width: 100%; border:none; object-fit: fill; height: 100vh;')\n            setTimeout(() => {\n                const iframeElem = document.getElementById(`iframe-post-${id}`);\n                iframeElem.style.height = (iframeElem.contentWindow.document.body.clientHeight + 100) + 'px';\n            }, 300)\n            elem = template(iframe);\n        } else if (type === 'js') {\n            elem = template(text);\n        } else {\n            elem = 'Ошибка несоответствия типа контента'\n        }\n        return E.div.class(b())(\n            Breadcrumbs.items([['Блог', 'blog'], [title, `blog/${id}`]]),\n            E.h2(title),\n            E.em((new Date(creationTime)).toLocaleString('ru', {\n                year: 'numeric',\n                month: 'long',\n                day: 'numeric',\n                timezone: 'UTC',\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            })),\n            E.div(elem)\n        );\n    }\n});\n\nexport default Post;\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\n\nimport blog from '../../data/blog/index.js';\nimport {Button} from '../../blocks/index.js';\n\nimport './Blog.less';\n\nconst b = block('blog');\n\nconst Blog = Component.Blog(() => {\n    const total = Object.keys(blog).length;\n    // console.log(`total ${total}`);\n\n    return () => E.div.class(b())(\n        Object.keys(blog).sort((keyA, keyB) => {\n            const getMs = key => Number(new Date(blog[key].creationTime));\n            return getMs(keyB) - getMs(keyA);\n        })\n        .map(key => {\n            const {type, creationTime, title, tags} = blog[key];\n            return E.div.class(b('post-card'))(\n                E.h3.class(b('title'))(\n                    title,\n                    E.div.class(b('read-button'))(\n                        RouteLink.href(`blog/${key}`)(\n                            Button('Читать')\n                        )\n                    )\n                ),\n                E.p(\n                    E.span.class(b('time'))(\n                        (new Date(creationTime)).toLocaleString('ru', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: 'numeric',\n                            timezone: 'UTC',\n                            hour: 'numeric',\n                            minute: 'numeric',\n                            second: 'numeric'\n                        })\n                    )\n                ),\n                E.p(\n                    tags.map(tag => E.div.class(b('tag'))(tag))\n                )\n            )\n        })\n    );\n});\n\nexport default Blog;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Physics.less';\n\nconst b = block('physics');\n\nconst Physics = Component.Physics(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Физика'),\n            RouteLink.href('physics/standard-model')(\n                Button(\n                    E.div.style(style({padding: '16px 64px'}))(\n                        'Стандартная модель',\n                        E.br,\n                        E.span.style`font-size: 72px`('e', E.sup('–'))\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Physics;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\n\nimport './StandardModel.less';\n\nconst b = block('standard-model');\n\nconst particles = [\n    {\n        name: 'электронное антинейтрино',\n        symbol: E.span(E.span.style`text-decoration: overline`('ν'), E.sub('e')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<1.0 eV/c', E.sup('2'))\n    },\n    {\n        name: 'мюонное антинейтрино',\n        symbol: E.span(E.span.style`text-decoration: overline`('ν'), E.sub('μ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<0.17 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'тау антинейтрино',\n        symbol: E.span(E.span.style`text-decoration: overline`('ν'), E.sub('τ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<18.2 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'электронное нейтрино',\n        symbol: E.span('ν', E.sub('e')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<1.0 eV/c', E.sup('2'))\n    },\n    {\n        name: 'мюонное нейтрино',\n        symbol: E.span('ν', E.sub('μ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<0.17 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'тау нейтрино',\n        symbol: E.span('ν', E.sub('τ')),\n        charge: '0',\n        spin: '1/2',\n        mass: E.span('<18.2 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'W бозон',\n        symbol: E.span('W'),\n        charge: '±1',\n        spin: '1',\n        mass: E.span('≃80.39 GeV/c', E.sup('2')),\n        group: 'SU(2)',\n        interaction: 'weak'\n    },\n    {\n        name: 'Z бозон',\n        symbol: E.span('Z'),\n        charge: '0',\n        spin: '1',\n        mass: E.span('≃91.19 GeV/c', E.sup('2')),\n        group: 'SU(2)',\n        interaction: 'weak'\n    },\n    {\n        name: 'бозон Хиггса',\n        symbol: E.span('H'),\n        charge: '0',\n        spin: '0',\n        mass: E.span('≃124.97 GeV/c', E.sup('2')),\n        interaction: 'mass'\n    },\n    {\n        name: 'позитрон',\n        symbol: E.span('e', E.sup('+')),\n        charge: '+1',\n        spin: '1/2',\n        mass: E.span('≃0.511 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'антимюон',\n        symbol: E.span('μ', E.sup('+')),\n        charge: '+1',\n        spin: '1/2',\n        mass: E.span('≃105.66 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'антитау',\n        symbol: E.span('τ', E.sup('+')),\n        charge: '+1',\n        spin: '1/2',\n        mass: E.span('≃1.7768 GeV/c', E.sup('2'))\n    },\n    {\n        name: 'электрон',\n        symbol: E.span('e', E.sup('–')),\n        charge: '-1',\n        spin: '1/2',\n        mass: E.span('≃0.511 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'мюон',\n        symbol: E.span('μ', E.sup('–')),\n        charge: '-1',\n        spin: '1/2',\n        mass: E.span('≃105.66 MeV/c', E.sup('2'))\n    },\n    {\n        name: 'тау',\n        symbol: E.span('τ', E.sup('–')),\n        charge: '-1',\n        spin: '1/2',\n        mass: E.span('≃1.7768 GeV/c', E.sup('2'))\n    },\n    {\n        name: 'фотон',\n        symbol: E.span('γ'),\n        charge: '0',\n        spin: '1',\n        mass: E.span('0'),\n        modifier: 'y',\n        group: 'U(1)',\n        interaction: 'electromagnetic'\n    },\n    {\n        name: 'верхний',\n        symbol: E.span(E.span.style`text-decoration: overline`('u')),\n        charge: '-2/3',\n        spin: '1/2',\n        mass: E.span('≃2.2 MeV/c', E.sup('2')),\n        category: 'anti-quark',\n        modifier: 'au'\n    },\n    {\n        name: 'очаровательный',\n        symbol: E.span(E.span.style`text-decoration: overline`('c')),\n        charge: '-2/3',\n        spin: '1/2',\n        mass: E.span('≃1.28 GeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'истинный',\n        symbol: E.span(E.span.style`text-decoration: overline`('t')),\n        charge: '-2/3',\n        spin: '1/2',\n        mass: E.span('≃173.1 GeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'верхний',\n        symbol: E.span('u'),\n        charge: '2/3',\n        spin: '1/2',\n        mass: E.span('≃2.2 MeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'очаровательный',\n        symbol: E.span('c'),\n        charge: '2/3',\n        spin: '1/2',\n        mass: E.span('≃1.28 GeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'истинный',\n        symbol: E.span('t'),\n        charge: '2/3',\n        spin: '1/2',\n        mass: E.span('≃173.1 GeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'глюон',\n        symbol: E.span('g'),\n        charge: '0',\n        spin: '1',\n        mass: E.span('0'),\n        modifier: 'g',\n        group: 'SU(3)',\n        interaction: 'strong'\n    },\n    {\n        name: 'нижний',\n        symbol: E.span(E.span.style`text-decoration: overline`('d')),\n        charge: '1/3',\n        spin: '1/2',\n        mass: E.span('≃4.7 MeV/c', E.sup('2')),\n        category: 'anti-quark',\n        modifier: 'ad'\n    },\n    {\n        name: 'странный',\n        symbol: E.span(E.span.style`text-decoration: overline`('s')),\n        charge: '1/3',\n        spin: '1/2',\n        mass: E.span('≃96 MeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'прелестный',\n        symbol: E.span(E.span.style`text-decoration: overline`('b')),\n        charge: '1/3',\n        spin: '1/2',\n        mass: E.span('≃4.18 GeV/c', E.sup('2')),\n        category: 'anti-quark'\n    },\n    {\n        name: 'нижний',\n        symbol: E.span('d'),\n        charge: '-1/3',\n        spin: '1/2',\n        mass: E.span('≃4.7 MeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'странный',\n        symbol: E.span('s'),\n        charge: '-1/3',\n        spin: '1/2',\n        mass: E.span('≃96 MeV/c', E.sup('2')),\n        category: 'quark'\n    },\n    {\n        name: 'прелестный',\n        symbol: E.span('b'),\n        charge: '-1/3',\n        spin: '1/2',\n        mass: E.span('≃4.18 GeV/c', E.sup('2')),\n        category: 'quark'\n    }\n]\n\nconst StandardModel = Component.StandardModel(({state}) => {\n\n    function renderTile({name, symbol, charge, spin, mass, category, modifier, group, interaction} = {}, i, view = false) {\n        const {i: current} = state();\n        return E.div.update(false).class(b('tile', modifier ? {mode: modifier} : {}))(E.div.style(`display: grid; grid-template-rows: auto 1fr ${view ? 'auto' : '3em'};cursor: pointer`)['data-interaction'](interaction)['data-i'](i)['data-view'](view ? 1 : 0).class(current === i ? b('current') : '').onClick((e) => {\n            const {interaction, i, view} = (e.target.closest('.' + b('tile')).firstChild.dataset);\n            if (+view) {\n                return;\n            }\n            if (interaction) {\n                state.set({\n                    interaction: state().i === +i ? undefined : interaction\n                });\n            }\n            state.set(prev => ({i: +i === prev.i ? undefined : +i}));\n        })(\n            E.div.style`display:grid;grid-template-columns: 1fr auto`(\n                E.div.style(`font-size: ${view ? '1' : '.8'}em;`)(\n                    view && 'масса: ',\n                    mass\n                )\n            ),\n            E.div.style(view ? '' : `display:grid;grid-template-columns: auto 1fr`)(\n                E.div.style(`font-size: ${view ? '1' : '.8'}em;`)(\n                    E.div(\n                        view && 'спин: ',\n                        spin\n                    ),\n                    E.div(\n                        view && 'заряд: ',\n                        charge\n                    ),\n                    group && E.div(\n                        view && 'группа симметрии: ',\n                        group\n                    ),\n                    view && interaction && interaction !== 'mass' && E.div(\n                        'Переносчик ' + {strong: 'сильного', 'electromagnetic': 'электромагнитного', 'weak': 'слабого'}[interaction] + ' взаимодействия'\n                    )\n                ),\n                E.div.style(`font-size: ${view ? 5 : 3}em;font-weight: 100;font-family:serif; display:flex; justify-content: center; align-items: center;margin-right: .3em; padding: .5em 0 .2em 0;${view ? 'margin-top: .1em;' : ''}`)(E.div.class(b('symbol'))(symbol))\n            ),\n            E.div.style(`font-size: 1em;  display:flex; justify-content: center; align-items: center; text-align: center;  line-height: 1.1em; ${view ? 'padding-bottom: 1em;' : ''}`)(E.div(\n                E.div.style(view ? 'font-size: 2em; line-height: 1.5em;' : '')(\n                    name,\n                    view && category === 'quark' && ' кварк',\n                    view && category === 'anti-quark' && ' антикварк'\n                ),\n            category === 'quark' && E.div.class(b('colors'))(\n                view && ['цветовой заряд:  ', E.br],\n                ['red', 'green', 'blue'].map(color => E.div.class(b('color', {[color]: true})))\n            ),\n            category === 'anti-quark' && E.div.class(b('colors'))(\n                view && ['цветовой заряд: ', E.br],\n                ['antired', 'antigreen', 'antiblue'].map(color => E.div.class(b('color', {[color]: true})))\n            ),\n            name === 'глюон' && E.div.class(b('colors'))(\n                view && ['цветовой заряд: ', E.br],\n                ['red-antiblue', 'blue-antigreen', 'green-antired', 'red-antigreen', 'blue-antired', 'green-antiblue', 'g3', 'g8'].map(color => E.div.class(b('color', {[color]: true, gluon: true}))(\n                    color === 'g3' ? '3' : color === 'g8' ? '8' : null\n                ))\n            )\n        ))))\n    }\n\n    return () => {\n        const {interaction, i} = state();\n        return E.div(\n            Breadcrumbs.items([['Физика', 'physics'], ['Стандартная модель']]),\n            E.div.class(b())(\n                E.h2('Стандартная модель элементарных частиц'),\n                E.div.class(b('table'))(\n                    E.div.class(b('area', {fermions: true}))('фермионы'),\n                    E.div.class(b('area', {bosons: true}))('бозоны'),\n                    E.div.class(b('area', {anti: true}))('античастицы'),\n                    E.div.class(b('area', {normal: true}))('частицы'),\n                    E.div.class(b('area', {vector: true}))('векторные'),\n                    E.div.class(b('area', {scalar: true}))('скалярный'),\n                    E.div.class(b('area', {leptons: true}))(\n                        E.div.style`display: flex; justify-content: flex-end; align-items: flex-end; height: 100%`('лептоны')\n                    ),\n                    E.div.class(b('area', {quarks: true}))(\n                        E.div.style`display: flex; justify-content: flex-end; align-items: flex-start; height: 100%`('кварки')\n                    ),\n                    interaction === 'weak' && [\n                        E.div.class(b('weak', {part: 1})),\n                        E.div.class(b('weak', {part: 2}))\n                    ],\n                    interaction === 'electromagnetic' && [\n                        E.div.class(b('electromagnetic', {part: 1})),\n                        E.div.class(b('electromagnetic', {part: 2})),\n                        E.div.class(b('electromagnetic', {part: 3}))\n                    ],\n                    interaction === 'strong' && [\n                        E.div.class(b('strong', {part: 1})),\n                        E.div.class(b('strong', {part: 2}))\n                    ],\n                    interaction === 'mass' && [\n                        E.div.class(b('higgs', {part: 1})),\n                        E.div.class(b('higgs', {part: 2}))\n                    ],\n                    E.div.class(b('border', {['anti-normal']: true})),\n                    E.div.class(b('border', {['fermions-bosons']: true})),\n                    E.div.class(b('border', {['leptons-quarks']: true})),\n                    E.div.class(b('border', {['vector-scalar']: true})),\n                    particles.map((e, i) => renderTile(e, i)),\n                    i !== undefined && (\n                        E.div.class(b('big-tile'))(renderTile(particles[i], undefined, true))\n                    ),\n                    [1, 2, 3, 1, 2, 3].map((k, i) => E.div.class(b('generation', {start: i === 0}))(k)),\n                    E.div.style`grid-column: 2 / 8; text-align: center`('Поколения')\n                ),\n                E.p.update(false)(\n                    'Взаимодействия: ',\n                    E.span.class(b('interaction', {type: 'strong'}))('сильное'), ', ',\n                    E.span.class(b('interaction', {type: 'electromagnetic'}))('электромагнитное'), ' и ',\n                    E.span.class(b('interaction', {type: 'weak'}))('слабое'), '. Также добавлено ',\n                    E.span.class(b('higgs-field'))('поле Хиггса'),\n                    E`. При нажатии на карточки частиц бозонов — квантов соответствующих полей, будут подсвечены все частицы, на которые действует поле. Значения масс для частиц взяты со страницы ${E.a.href('https://en.wikipedia.org/wiki/Standard_Model')('Стандартной модели')} в википедии. Выделение антинейтрино как отдельных частиц в таблице не значит, что они являются фермионами Дирака, а сделано исключительно для визуального удобства.`\n                )\n            )\n        );\n    }\n});\n\nexport default StandardModel;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Projects.less';\n\nconst b = block('projects');\n\nconst Projects = Component.Projects(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Проекты'),\n            RouteLink.href('projects/unicode')(\n                Button(\n                    E.div.style(style({padding: '16px 64px'}))(\n                        'Юникод',\n                        E.br,\n                        E.span.style`font-size: 72px`('✍')\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Projects;\n","import {\n    block,\n    E,\n    css,\n    style,\n    Component\n} from '../../utils/index.js';\n\nimport {Breadcrumbs} from '../index.js';\n\nimport './Colors.less';\n\nconst colors = [\n    'area',\n    'menu',\n    'menu-active',\n    'menu-hover',\n    'menu-folder',\n    'element-active',\n    'string-number',\n    'syntax-variable',\n    'syntax-number',\n    'syntax-operator',\n    'syntax-gray',\n    'syntax-dark-gray',\n    'syntax-keyword',\n    'syntax-class',\n    'syntax-function',\n    'syntax-string',\n    'syntax-inline',\n    'input-text',\n    'input-area',\n    'md-link',\n    'atom-link',\n    'atom-button',\n    'atom-button-hover',\n    'atom-black-line'\n];\n\nconst b = block('colors');\n\nconst Colors = Component.Colors(() => {\n    return () => E.div(\n        Breadcrumbs.items([['Дизайн', 'design'], ['Цвета']]),\n        E.div.class(b())(\n            colors.map(color => {\n                const code = getComputedStyle(document.documentElement).getPropertyValue(`--color-${color}`).trim();\n                const rgb = (s => [s.slice(0,2), s.slice(2,4),s.slice(4)].map(hex => parseInt(hex, 16)))(code.slice(1))\n                const v = Math.max(...rgb);\n                const contrast = v > 162 ? 'black' : 'white';\n                const border = v > 38 && v < 78 ? 'solid 1px #abb2de' : '';\n                const colorNode = E.div(\n                    E.div\n                        .class(b('area', {color}))\n                        .style(style({\n                            border,\n                            color: contrast\n                        }))\n                    (\n                        E.div.class(b('name'))(code)\n                    ),\n                    E.div(color)\n                );\n                return colorNode;\n            })\n        )\n    );\n});\n\n\nexport default Colors;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport {Breadcrumbs} from '../index.js';\n\nimport './Unicode.less';\n\nconst b = block('unicode');\n\nconst limit = 5000;\nconst max = 65535;\nconst count = (max - (max % limit)) / limit + 1;\n\nfunction getUnicodeList(start, end) {\n    const table = [];\n    for (let i = start; i < end; i++) {\n        table.push(E.div.title(i)(String.fromCharCode(i)));\n    }\n    return table;\n}\n\nconst Unicode = Component.Unicode(({state}) => {\n    state.init({i: 0});\n\n    return () => {\n        const start = state().i;\n        const startI = start * limit;\n        const end = start * limit + limit;\n        const endI = end > max ? max : end;\n        return E.div(\n            Breadcrumbs.items([['Проекты', 'projects'], ['Юникод']]),\n            E.div.class(b())._forceUpdate(true)\n            (\n                E.div.class(b('menu'))([...(new Array(count)).keys()].map(i =>\n                    E.div\n                        .class(b('button-container'))\n                        .onClick(() => state.set({i}))\n                    (\n                        Button(E.span.class(b('button', {active: i === start}))(`${i}`))\n                    )\n                )),\n                E.div(\n                    E.h2('Юникод'),\n                    E.p(E`Пока представлена только ${E.a.href('https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane')('основная многоязычная плоскость')}`),\n                    E.br,\n                    E.p(`Cимволы ${startI} - ${endI}`),\n                    E.br,\n                    E.div._forceUpdate(true).class(b('table'))(getUnicodeList(startI, endI))\n                )\n            )\n        );\n    }\n});\n\nexport default Unicode;\n","import {\n    block,\n    E,\n    style,\n    Component,\n    RouteLink,\n    css\n} from '../../utils/index.js';\nimport {\n    Button\n} from '../../blocks/index.js';\n\nimport './Design.less';\n\nconst b = block('design');\n\nconst Design = Component.Design(() => {\n    return () => {\n        return E.div.class(b())(\n            E.h2('Дизайн'),\n            RouteLink.href('design/colors')(\n                Button(\n                    E.div.style(style({padding: '24px', fontSize: '64px', fontWeight: '500'}))(\n                        E.span.style('color: #bc514a')('Ц'),\n                        E.span.style('color: #99c27c')('в'),\n                        E.span.style('color: #65b0ed')('е'),\n                        E.span.style('color: #c57bdb')('т'),\n                        E.span.style('color: #d0996a')('а'),\n                    )\n                )\n            )\n        );\n    }\n});\n\nexport default Design;\n","import {\n    E,\n    block,\n    Component,\n    css\n} from '../../utils/index.js';\n\nimport './GameOfLife.less';\n\nconst b = block('game-of-life');\n// console.log('game of life!!!!!!!!!')\n\nconst range = (start, end) => {\n    const result = [];\n    for (let i = start; i <= end; i++) {\n        result.push(i);\n    }\n    return result;\n}\n\nconst Game = Component.Game(({\n    props,\n    getState,\n    setState,\n    initState,\n    didMount\n}) => {\n    const {\n        H = 200, W = 400\n    } = props;\n    initState({\n        i: 0,\n        size: 0,\n        stop: true,\n        H,\n        W\n    });\n\n    let canvas, img_data, data, ctx, rule = {\n        new: [2,3],\n        old: [3]\n    }, fieldState, fieldStateNext;\n\n\n    didMount(() => {\n        const {\n            startFieldState\n        } = props;\n        const {\n            H,\n            W\n        } = getState();\n\n        fieldState = new Array(H * W);\n        fieldStateNext = new Array(H * W);\n        for (let i = 0; i < H * W; i++) {\n            fieldState[i] = false;\n            fieldStateNext[i] = false;\n        }\n\n        if (startFieldState) {\n            set_life(startFieldState);\n        }\n        canvas = document.getElementById('field');\n        ctx = canvas.getContext('2d', {\n            alpha: false\n        });\n        img_data = ctx.getImageData(0, 0, W, H);\n        data = img_data.data;\n        for (let k = 0; k < H * W * 4; k++) {\n            data[k] = (k + 1) % 4 == 0 ? 255 : 0;\n        }\n\n        // paint();\n        // rules();\n\n        draw();\n        life();\n    })\n\n\n    function torsum(i, j) {\n        const {\n            H,\n            W,\n            fieldState: state\n        } = getState();\n        // положение строки над текущей клеткой\n        const i_top_W = (i ? i - 1 : H - 1) * W;\n        // положение строки под текущей клеткой\n        const i_down_W = (H - 1 - i ? i + 1 : 0) * W;\n        // положение строки текущей клетки\n        const i_W = i * W;\n        // столбец слева от текущей клетки\n        const j_l = j ? j - 1 : W - 1;\n        // столбец справа от текущей клетки\n        const j_r = W - 1 - j ? j + 1 : 0;\n        return (\n            +state[i_top_W + j_l] +\n            state[i_top_W + j] +\n            state[i_top_W + j_r] +\n            state[i_W + j_l] +\n            state[i_W + j_r] +\n            state[i_down_W + j_l] +\n            state[i_down_W + j] +\n            state[i_down_W + j_r]\n        );\n    }\n\n    function set_life(array) {\n        const {\n            W\n        } = getState();\n        for (const e of array) {\n            fieldState[(e[1] + 50) * W + e[0] + 50] = true;\n            fieldStateNext[(e[1] + 50) * W + e[0] + 50] = true;\n        }\n    }\n\n    function clear() {\n        const {W, H} = getState();\n        for (let k = 0; k < H * W * 4; k++) {\n            data[k] = (k + 1) % 4 === 0 ? 255 : 0;\n        }\n        for (let k = 0; k < H * W; k++) {\n            fieldState[k] = (data[k * 4] === 255);\n        }\n        ctx.putImageData(img_data, 0, 0);\n        setState({stop: true, i: 0});\n    }\n\n    function draw() {\n        const {H, W} = getState();\n        console.log(ctx);\n        for (let k = 0; k < H * W; k++) {\n            if (+fieldState[k] !== !data[k * 4 + 1]) {\n                data[k * 4] = fieldState[k] ? 255 : 0;\n            }\n        }\n        ctx.putImageData(img_data, 0, 0);\n    }\n\n    function step() {\n        let i, j, sum, k = 0;\n        for (i = 0; i < H; i++) {\n            for (j = 0; j < W; j++) {\n                sum = torsum(i, j);\n                if (fieldState[k]) {\n                    fieldStateNext[k] = rule.new.includes(sum);\n                } else {\n                    fieldStateNext[k] = rule.old.includes(sum);\n                }\n                k++;\n            }\n        }\n        for (k = 0; k < H * W; k++) {\n            fieldState[k] = fieldStateNext[k];\n        }\n    }\n\n    function one_step() {\n        step();\n        draw();\n        setState(prevState => ({i: prevState.i + 1}));\n    }\n\n    function life() {\n        const {stop} = getState();\n        if (!stop) {\n            one_step();\n        }\n        setState({size: fieldState.reduce((sum, x) => sum += x)});\n        setTimeout(life, 1000);\n    }\n\n    function rules() {\n        document.getElementById('cells_new').addEventListener('click', update_rule);\n        document.getElementById('cells_old').addEventListener('click', update_rule);\n\n        update(document.getElementById('cells_new').querySelector('input'));\n        update(document.getElementById('cells_old').querySelector('input'));\n\n        function update_rule(e) {\n            let elem = e.target;\n            if (elem.tagName !== 'INPUT') return;\n            update(elem);\n        }\n\n        function update(elem) {\n            type = elem.name;\n            list = elem.closest(`#cells_${type}`).querySelectorAll('input');\n            list = Array.from(list).filter(x => x.checked).map(x => +x.id);\n            rule[type] = list;\n        }\n    }\n\n    function update(elem) {\n        type = elem.name;\n        list = elem.closest(`#cells_${type}`).querySelectorAll('input');\n        list = Array.from(list).filter(x => x.checked).map(x => +x.id);\n        rule[type] = list;\n    }\n\n    return () => {\n        const {\n            stop,\n            H,\n            W,\n            i,\n            size\n        } = getState();\n        return E.div.class(b())(\n            E.canvas.id('field').width(W).height(H),\n            E.p('Поколение ', E.span.id('old')(i)),\n            E.p('Популяция ', E.span.id('size')(size)),\n            E.input.type('button')\n            .value(stop ? '>' : '||')\n            .onClick(() => {\n                setState(prevState => ({\n                    stop: !prevState.stop\n                }))\n            }).id('play'),\n            E.input.type('button').value('1>').onClick(() => one_step()),\n            E.input.type('button').value('X').onClick(() => clear()).id('btn_clear'),\n            E.br,\n            E.div.id('cells_new')(\n                E.p('Рождение'),\n                range(0, 8).map(i =>\n                    E.label(\n                        E.input.type('checkbox').name('new').id(i),\n                        i\n                    )\n                )\n            ),\n            E.br,\n            E.div.id('cells_old')(\n                E.p('Смерть'),\n                range(0, 8).map(i => E.label(E.input.type('checkbox').name('old').id(i), i))\n            )\n        );\n    }\n}).startFieldState([\n    [3, 0],\n    [4, 1],\n    [0, 2],\n    [4, 2],\n    [1, 3],\n    [2, 3],\n    [3, 3],\n    [4, 3],\n    [0, 7],\n    [1, 8],\n    [2, 8],\n    [2, 9],\n    [2, 10],\n    [1, 11],\n    [3, 14],\n    [4, 15],\n    [0, 16],\n    [4, 16],\n    [1, 17],\n    [2, 17],\n    [3, 17],\n    [4, 17]\n]);\n\n\n\n\nfunction initGame() {\n\n\n    function paint() {\n        canvas.onmousedown = startDrawing;\n        canvas.onmouseup = stopDrawing;\n        canvas.onmouseout = stopDrawing;\n        canvas.onmousemove = draw;\n\n        let context = ctx;\n        let isDrawing;\n\n        context.strokeStyle = 'rgb(255,0,0)';\n        context.lineWidth = 1;\n\n        let pause = false;\n\n        function startDrawing(e) {\n\n            // Начинаем рисовать\n            isDrawing = true;\n            if (!stop) {\n                stop = true;\n                pause = true;\n            }\n\n            // Создаем новый путь (с текущим цветом и толщиной линии)\n            context.beginPath();\n\n            // Нажатием левой кнопки мыши помещаем \"кисть\" на холст\n            context.moveTo(e.pageX - canvas.offsetLeft, e.pageY - canvas.offsetTop);\n        }\n\n\n        function draw(e) {\n            if (isDrawing == true) {\n                // Определяем текущие координаты указателя мыши\n                var x = e.pageX - canvas.offsetLeft;\n                var y = e.pageY - canvas.offsetTop;\n\n                // Рисуем линию до новой координаты\n                context.lineTo(x, y);\n                context.stroke();\n            }\n        }\n\n        function stopDrawing() {\n            isDrawing = false;\n            if (pause) {\n                stop = false;\n                pause = false;\n            }\n\n\n            img_data = ctx.getImageData(0, 0, W, H);\n            data = img_data.data;\n            for (let k = 0; k < H * W; k++) {\n                state[k] = (data[k * 4] == 255);\n            }\n        }\n    }\n\n    function rules() {\n        document.getElementById('cells_new').addEventListener('click', update_rule);\n        document.getElementById('cells_old').addEventListener('click', update_rule);\n\n        update(document.getElementById('cells_new').querySelector('input'));\n        update(document.getElementById('cells_old').querySelector('input'));\n\n        function update_rule(e) {\n            let elem = e.target;\n            if (elem.tagName !== 'INPUT') return;\n            update(elem);\n\n        }\n\n        function update(elem) {\n            type = elem.name;\n            list = elem.closest(`#cells_${type}`).querySelectorAll('input');\n            list = Array.from(list).filter(x => x.checked).map(x => +x.id);\n            rule[type] = list;\n        }\n    }\n}\n\nexport default Game;\n","import {\n    E,\n    Component,\n    RouteLink,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\nimport {Button} from '../../blocks/index.js';\n\nimport './About.less';\n\nconst b = block('about');\n\nconst about = E.div.class(b())(\n    E.p('Программирую'),\n    E.p(E`Работаю в ${E.a.href('https://yandex.ru')('Яндексе')}`),\n    E.p('Люблю математику'),\n    E.p(E`Мой ${E.a.href('https://github.com/nikalexxx')('Github')}`)\n);\n\nexport default about;\n","import {\n    E,\n    Component,\n    block,\n    style\n} from './utils/index.js';\n\nimport {Button} from './blocks/index.js';\n\nconst b = block('my-component');\n\nconst MyComponent = Component.MyComponent(({props, state}) => {\n    state.init({show: true});\n\n    return () => {\n        const {state: visible} = props;\n        const {show} = state();\n        const elem = show ? E.span('elem') : null;\n        return E.div.class(b())(\n            elem,\n            E.span\n                .style(style({color: {ok: 'green', error: 'red'}[visible]}))\n                .class(b('state'))(\n                    visible\n                ),\n            E.span.onClick((e) => {\n                // console.log({show});\n                state.set(prevState => ({show: !prevState.show}));\n            })((show ? 'hide' : 'show'))\n        )\n    }\n});\n\nexport default MyComponent;\n","const map = {\n\t\"\": {},\n\t\"design\": {\n\t\t\"colors\": {\n\t\t\t\":color\": {}\n\t\t}\n    },\n    \"sandbox\": {\n        \":id\": {}\n    },\n    \"games\": {\n        \"gameOfLife\": {}\n    }\n};\n\nexport default map;\n","import {\n    E,\n    M,\n    Component,\n    RouteLink,\n    getRouterState,\n    Switch,\n    css,\n    block,\n    style\n} from '../../utils/index.js';\nimport {\n    Colors,\n    GameOfLife,\n    Design,\n    Blog,\n    Post,\n    About,\n    Projects,\n    Unicode,\n    Physics,\n    StandardModel\n} from '../index.js';\nimport {Button} from '../../blocks/index.js'\nimport MyComponent from '../../MyComponent.js';\nimport map from '../../map.js';\nimport {book} from '../../utils/book.js';\n\nimport './Page.less';\n\nconst b = block('page');\n\nconst routes = params => ({\n    '/': Blog,\n    'about': About,\n    'book': E.div(book),\n    'design': Design,\n    'design/colors': Colors,\n    // 'my/:state': E.div(\n    //     MyComponent.state(params.state),\n    //     MyComponent.state('ok'),\n    //     MyComponent.state('error'),\n    //     E.ul(\n    //         E.li`Поправить движок`,\n    //         E.li`Меню для мобильной версии`,\n    //         E.li`Таблица стандартной модели`,\n    //         E.li`Игра Жизнь`,\n    //         E.li`Светлая тема`,\n    //         E.li`Формат электронной книги`,\n    //         E.li`Калькулятор`,\n    //         E.li`Построитель графиков`,\n    //         E.li`Схема метро(позже интерактивная)`\n    //     )\n    // ),\n    'gameOfLife': GameOfLife,\n    'blog': Blog,\n    'blog/:id': Post.id(params.id),\n    'projects': Projects,\n    'projects/unicode': Unicode,\n    'physics': Physics,\n    'physics/standard-model': StandardModel\n})\n\nconst Menu = Component.Menu(({state}) => {\n    const path = () => getRouterState(routes).path;\n    state.init({i: 0});\n    window.addEventListener('historyUpdate', () => state.set(prev => ({i: prev.i++})));\n    function renderLink(href, title) {\n        const current = path().startsWith(href) || path() === '/' && href === 'blog';\n        // console.log(href, path());\n        return RouteLink.href(href)(\n            E.div.class(b('menu-link', {current}))(\n                title\n            )\n        );\n    }\n    return () => E.div(\n        renderLink('blog', 'Блог'),\n        renderLink('about', 'Кто я?'),\n        // renderLink('book', 'Книга'),\n        renderLink('projects', 'Проекты'),\n        renderLink('physics', 'Физика'),\n        renderLink('design', 'Дизайн')\n        // renderLink('gameOfLife', 'Игра Жизнь'),\n        // renderLink('my/ok', 'тест')\n    )\n});\n\nconst Page = E.div.class(b())(\n    // E.div.class(b('header-menu'))(\n    //     E.div('Alexandr Nikolaichev'),\n    //     E.div.class(b('scroll-top')).onClick(() => window.scrollTo({top: 0}))('▲ ▲ ▲')\n    // ),\n    E.header.class(b('header'))(\n        RouteLink.href('/')(\n            E.h1.style(style({textAlign: 'center'}))('Александр Николаичев')\n        )\n    ),\n    E.nav.class(b('menu'))(Menu),\n    E.main.class(b('content'))(Switch.routes(routes)),\n    E.footer.class(b('footer'))('© 2019-2020 Alexandr Nikolaichev')\n);\n\nexport default Page;\n","        export {default as Breadcrumbs} from './Breadcrumbs/Breadcrumbs.js';\n    export {default as Post} from './Post/Post.js';\n    export {default as Blog} from './Blog/Blog.js';\n    export {default as Physics} from './Physics/Physics.js';\n    export {default as StandardModel} from './StandardModel/StandardModel.js';\n    export {default as Projects} from './Projects/Projects.js';\n    export {default as Colors} from './Colors/Colors.js';\n    export {default as Unicode} from './Unicode/Unicode.js';\n    export {default as Design} from './Design/Design.js';\n    export {default as GameOfLife} from './GameOfLife/GameOfLife.js';\n    export {default as About} from './About/About.js';\nexport {default as Page} from './Page/Page.js';\n","import {Page} from './components/index.js';\nimport {setLogger, logAllLevels} from './utils/logger.js';\nimport {DOM} from './utils/element.js';\n\nsetLogger({\n    component: {\n        props: {\n            [logAllLevels]: true\n        }\n    }\n});\nsetLogger(false); // for production\n\ndocument.getElementById('root').append(DOM(Page));\n"]}