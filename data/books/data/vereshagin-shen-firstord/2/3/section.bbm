{def:section Поиск контрпримера и исчисление секвенций}


В этом разделе мы построим другой вариант исчисления высказываний — так называемое {em исчисление секвенций}.
{def:index Исчисление!секвенций|defin}
Такого рода исчисления изучаются в теории доказательств.
Они оказываются более удобными для анализа синтаксической структуры выводов.
Их называют исчислениями генценовского типа {def:index Исчисление!генценовского типа}
(по имени Генцена, {def:glossary Генцен}
который начал их изучать).
Ранее приведённый вариант исчисления высказываний называют исчислением гильбертовского типа {def:index Исчисление!гильбертовского типа}
(по имени Гильберта, {def:glossary Гильберт}
который использовал подобные исчисления в своей программе формального построения математики).


Для начала мы вообще не будем говорить ничего об аксиомах и правилах вывода, а рассмотрим задачу поиска контрпримера.
Пусть дана некоторая формула {{A}}, про которую мы подозреваем, что она не является тавтологией, и хотим найти значения переменных, при которых она ложна.
Как это делать? Естественно посмотреть на структуру формулы {{A}}.
Например, если {{A}} имеет вид {{B\to C}}, то надо найти значения переменных, при которых формула {{B}} истинна, а {{C}} ложна.
Если {{A}} имеет вид {{B\lor C}}, то надо найти значения переменных, при которых обе формулы {{B}} и {{C}} ложны.
Если {{A}} имеет вид {{B\land C}}, то надо найти либо значения переменных, при которых {{B}} ложна, либо значения переменных, при которых {{C}} ложна.
Тем самым задача поиска контрпримера для формулы {{A}} сводится к одной или нескольким задачам такого же или более общего вида (надо обеспечить истинность или ложность одной или нескольких формул).


Введём необходимую терминологию и обозначения.
Будем называть {em секвенцией}
{def:index Секвенция|defin}
выражение {{\Gamma\vdash\Delta}}, где {{\Gamma}} и {{\Delta}} — некоторые конечные множества формул.
(Пока что знак {{\vdash}} не имеет ничего общего с выводимостью, а только разделяет два множества формул.)
С каждой секвенцией {{\Gamma\vdash\Delta}} будем связывать задачу поиска таких значений переменных, при которых все формулы из {{\Gamma}} истинны, а все формулы из {{\Delta}} ложны.
Такой набор значений мы по некоторым причинам будем называть {em контрпримером}
{def:index Контрпример (к секвенции)|defin}
к секвенции {{\Gamma\vdash\Delta}}.
Легко проверить, что контрпримеры к секвенции {{\Gamma\vdash\Delta}} —
это контрпримеры к формуле
{{
\land \Gamma\to\lor\Delta,
}}
({{\land\Gamma}} обозначает конъюнкцию формул из {{\Gamma}}, а {{\lor\Delta}} — дизъюнкцию формул из {{\Delta}}), то есть те наборы значений, при которых эта формула ложна.
При этом конъюнкцию пустого множества формул мы считаем тождественно истинной, а дизъюнкцию — тождественно ложной.


Наша исходная задача поиска контрпримера к формуле {{A}} может быть теперь сформулирована как задача поиска контрпримера к секвенции {{\vdash A}}.
(Мы позволяем себе писать так для краткости; полностью следовало бы написать {{\varnothing\vdash\{A\} }}.)


Задачу поиска контрпримера к секвенции можно решать с помощью следующих правил.
В каждом из приведенных правил нижний заказ на контрпример выполним, если и только если выполним один из верхних заказов, т.е. нижняя секвенция имеет контрпример тогда и только тогда, когда хотя бы одна из верхних секвенций имеет контрпример.
{{
\begin{align*}
\frac{\Gamma\vdash A,\Delta\qquad \Gamma\vdash B,\Delta}
{\Gamma\vdash A\wedge B,\Delta}
        \qquad&\qquad \frac{A,B,\Gamma\vdash\Delta}
{A\wedge B,\Gamma\vdash\Delta}
        \\[0.7ex]
\frac{\Gamma\vdash A, B,\Delta}
{\Gamma\vdash A\vee B,\Delta}
        \qquad&\qquad \frac{A,\Gamma\vdash \Delta\qquad B,\Gamma\vdash \Delta}
{A\vee B,\Gamma\vdash \Delta}
        \\[0.7ex]
\frac{\Gamma,A\vdash  B,\Delta}
{\Gamma\vdash A\to B,\Delta}
        \qquad&\qquad \frac{\Gamma\vdash A,\Delta\qquad \Gamma,B\vdash\Delta}
{A\to B,\Gamma\vdash \Delta}
        \\[0.7ex]
\frac{A,\Gamma\vdash \Delta}
{\Gamma\vdash \neg A,\Delta}
        \qquad&\qquad \frac{\Gamma\vdash A,\Delta}
{\neg A,\Gamma\vdash \Delta}
\end{align*}
}}

Каждое из правил соответствует анализу одной из формул нижней секвенции.
Правила разделены на группы в зависимости от главной связки анализируемой формулы, и согласованы с таблицами истинности для этой связки (что легко проверить).
Запятая в правилах используется как сокращение: {{\Gamma,A}} обозначает {{\Gamma\cup\{A\} }} и т.д.


Как пользоваться этими правилами?
Возьмём секвенцию, к которой мы ищем контрпример.
Выберем в ней одну из формул слева или справа, посмотрим на главную связку и применим соответствующее правило (написав одну или две секвенции над исходной).
Затем к каждой из них снова применим одно из правил и т.д.
Постепенно будет расти «дерево поиска контрпримера», причём исходная секвенция будет иметь контрпример тогда и только тогда, когда одна из верхних секвенций (стоящих в «листьях») этого дерева имеет контрпример.


Когда этот процесс обрывается?
Это происходит в том случае, если все формулы в оставшихся секвенциях представляют собой переменные, тогда ни одно из наших правил поиска контрпримера не применимо.
Но к этому моменту всё становится ясным: если в левой и правой части секвенции есть общая переменная, то к ней нет контрпримера (одна и та же переменная не может быть одновременно истинной и ложной).
Если же левая и правая часть такой секвенции не пересекаются, то контрпример есть.


Вот как это делается с секвенцией {{{\vdash(p\to q)}\to q}}:
{{
\frac{\mathstrut\vdash p,q\;\qquad q\vdash q}
{\frac{\displaystyle \mathstrut(p\to q)\vdash q}
{\displaystyle \mathstrut\vdash (p\to q)\to q} }
}}
Контрпример найден: {{p}} и {{q}} ложны (он является контрпримером к секвенции {{\vdash p,q}}).


Напротив, поиск контрпримера к секвенции {{{\vdash((p\to q)\to p)}\to p}}
не даёт результата:
{{
\frac{\frac{
\frac{\displaystyle \mathstrut p\vdash p,q}
     {\displaystyle \mathstrut\vdash p,p\to q}\qquad \displaystyle      \mathstrut p\vdash p}
{\displaystyle \mathstrut (p\to q)\to p\vdash p} }
{\mathstrut\vdash((p\to q)\to p)\to p}
}}
Здесь обе секвенции {{p\vdash p,q}} и {{p\vdash p}} не имеют контрпримеров.
Следовательно, формула {{((p\to q)\to p)\to p}} является тавтологией.


Построенный алгоритм можно одновременно рассматривать как доказательство полноты некоторого «исчисления секвенций».


{em Аксиомами}
{def:index Аксиомы!исчисления секвенций|defin}
{def:index Исчисление!секвенций!аксиомы|defin}
исчисления секвенций будем называть секвенции, в левых и правых частях которых встречаются только переменные, причём некоторая переменная встречается в обеих частях.


{em Правилами вывода}
{def:index Правила вывода исчисления секвенций|defin}
{def:index Исчисление!секвенций!правила вывода|defin}
в исчислении секвенций являются правила нашей таблицы.
Каждое из этих правил объявляет выводимой нижнюю секвенцию, если выводимы все верхние. (Процесс вывода естественно представлять в виде дерева, как в наших примерах, но можно развернуть и в последовательность секвенций.)


{#start:def:theorem.name{корректность и полнота исчисления секвенций}}
{def:index Теорема!о корректности и полноте исчисления секвенций|defin}
Секвенция выводима тогда и только тогда, когда она не имеет контрпримера.
{#end:def:theorem}


{#start:def:proof}
Аксиомы не имеют контрпримера.
Если все верхние секвенции какого-то правила вывода не имеют контрпримера, то и нижняя секвенция не имеет контрпримера. (Именно так мы подбирали правила: контрпример к нижней секвенции будет контрпримером к одной из верхних.)
Следовательно, все выводимые секвенции не имеют контрпримера.


Обратно, пусть секвенция не имеет контрпримера.
Тогда описанный процесс поиска контрпримера обрывается на аксиомах и тем самым даёт её вывод.
{#end:def:proof}


В частности, если формула {{A}} является тавтологией, то секвенция {{{\vdash A} }} выводима в исчислении секвенций.
Это обстоятельство можно использовать для ещё одного доказательства полноты исчисления высказываний (в стандартной, гильбертовской форме).
В самом деле, для каждой секвенции {{\Gamma\vdash\Delta}} рассмотрим {em представляющую её формулу}, {def:index Формула!представляющая секвенцию|defin}
{def:index Секвенция!представляющая формула|defin}
то есть формулу {{{\land \Gamma} \to {\lor\Delta} }} (в левой и правой частях стоят конъюнкция и дизъюнкция формул из {{\Gamma}} и {{\Delta}} соответственно).
Теперь индукцией по построению вывода в исчислении секвенций надо доказать такой факт: если секвенция выводима в исчислении секвенций, то представляющая её формула выводима в (обычном) исчислении высказываний.


Это требует довольно хлопотной проверки, впрочем.
Сначала надо проверить, что конъюнкция и дизъюнкция доказуемо ассоциативны, и потому всё равно, как расставлять скобки в формуле, представляющей секвенцию.
Затем полезно убедиться, что правила, связанные с отрицанием (два последних правила таблицы) можно применять в обе стороны, не меняя выводимости соответствующей формулы.
Другими словами, надо проверить, что формулы
{{
 \Gamma\to(\Delta\lor A) \quad \text{и} \quad  (\Gamma\land\lnot A)\to\Delta,
}}
а также формулы
{{
\Gamma\to(\Delta\lor \lnot A) \quad \text{и} \quad  (\Gamma\land A)\to\Delta
}}
выводимы одновременно (здесь {{\Gamma}} и {{\Delta}} можно считать формулами, а не множествами формул, расставив скобки надлежащим образом).
После этого мы можем переносить формулы из одной части в другую (меняя их на противоположные), и потому можем считать одно из множеств {{\Gamma}} и {{\Delta}} пустым, если это нам удобно.
Теперь ссылка на лемму о дедукции и уже известные нам свойства выводимости завершает рассуждение.


{#start:def:problem}
Провести это рассуждение подробно.
{#end:def:problem}


Естественно возникает вопрос — чем уж так интересно исчисление секвенций?
Какая, собственно говоря, разница — иметь дело с секвенциями или с формулами, раз всякую секвенцию можно представить формулой?
Принципиальное различие тут в следующем.
Правила вывода в исчислении секвенций таковы, что в их верхнюю часть входят только подформулы формул, встречающихся в нижней части.
Поэтому в выводе какой-то секвенции не может встретиться ничего принципиально нового, чего не было в самой секвенции.
В гильбертовском исчислении это далеко не так: мы можем вывести формулу {{B}} из формул {{A\to B}} и {{A}}, при этом формула {{A}} может быть совершенно произвольной.
Это же различие объясняет, почему поиск вывода снизу вверх (как можно теперь называть то, что раньше называлось поиском контрпримера — мы находим либо контрпример, либо вывод) для исчисления секвенций происходит сравнительно однозначно (мы можем по-разному выбирать расчленяемую формулу, но и только), в то время как искать вывод в обычном исчислении высказываний, начав с интересующей нас формулы {{B}} и смотря, из чего бы она могла получиться, не удаётся (если только не перебирать все формулы подряд).


Заметим, что добавление к исчислению секвенций уже упоминавшегося правила сечения
{{
\frac{\Gamma\vdash \Delta,A \qquad \Gamma, A\vdash \Delta}
     {\Gamma \vdash \Delta}
}}
нарушает свойство «подформульности», так как формула {{A}} может быть никак не связана с нижней секвенцией.
Отметим, что добавление правила сечения не нарушает корректности, как легко проверить, и не может нарушить полноты.


Задачи о поиске вывода и анализе его структуры, хотя и были одно время модными в связи с «искусственным интеллектом», представляют большой интерес, и про них есть целая наука, в которой исчисления генценовского типа играют центральную роль.
Мы рассмотрели один из вариантов исчисления секвенций для классического исчисления высказываний; бывают исчисления для интуиционистских и модальных логик, для исчисления предикатов и т.д.
Исходной мотивацией для рассмотрения такого рода исчислений было желание доказать непротиворечивость арифметики.
Согласно знаменитой второй теореме Гёделя {def:glossary Гёдель} о неполноте {def:index Теорема!Гёделя о неполноте (вторая)}
без дополнительных аксиом этого сделать нельзя, но если принять схему аксиом для трансфинитной индукции по ординалу {{\varepsilon_0}}, это удаётся сделать, как показал Генцен.
{def:glossary Генцен}
