import { BookApi } from '@bookbox/preset-web';
import { getCustomElements } from '../../elements.js';

export default (api: BookApi) => {
    const { book, format, list, item, start, end, math, label } = api;
    const { i, b } = format;
    const $ = math;
    const $$ = math.block();

    const {paragraph, theorem, problem, proof, A, B, C, n, printNote } = getCustomElements(api);

    return book`
${paragraph`Операции над мощностями`}
Мощности конечных множеств — натуральные числа, и их можно складывать, умножать, возводить в степень.
Эти операции можно обобщить и на мощности бесконечных множеств, и делается это так.


Пусть ${A} и ${B} — два множества.
Чтобы сложить их мощности, надо взять мощность множества ${$`A \\cup B`}, если ${A} и ${B} не пересекаются.
Если они пересекаются, то их надо заменить на непересекающиеся равномощные им множества ${$`A'`} и ${$`B'`}.
Мощность объединения и будет ${i`суммой`} мощностей множеств ${A} и ${B}.


${b`Замечания`}.
${b`1`}.
Чтобы избежать упоминания мощностей как самостоятельных объектов, следует считать выражение «мощность множества ${C} есть сумма мощностей множеств ${A} и ${B}» идиоматическим выражением (а сказанное выше — его определением).
Но мы для удобства будем часто пренебрегать такими предосторожностями.


${b`2`}.
В принципе следовало бы проверить корректность этого определения и доказать, что мощность множества ${$`A' \\cup B'`} не зависит от того, какие именно непересекающиеся множества ${$`A'`} и ${$`B'`} (равномощные ${A} и ${B}) мы выберем.
(Что, впрочем, очевидно.)


${b`3`}.
Для конечных множеств получается обычное сложение натуральных чисел.


${b`4`}.
Наконец, формально следовало бы ещё доказать, что такие ${$`A'`} и ${$`B'`} можно выбрать.
Это можно сделать, например, так: положим ${$`A' = A \\times \\{0\\}`} и ${$`B' = B \\times \\{1\\}`}.


Последней проблемы не будет при определении ${i`произведения`} мощностей как мощности декартова произведения ${$`A \\times B`}.
(Но остальные замечания остаются в силе.)


Теперь определим ${i`возведение в степень`}.
Для этого рассмотрим (для данных ${A} и ${B}) множество всех функций вида ${$`f: B \\to A`}
(напомним: это означает, что их область определения есть ${B}, а область значений содержится в ${A}).
Это множество обозначается ${$`A^B`}, и его мощность и будет результатом операции возведения в степень.


Если множества ${A} и ${B} конечны и содержат ${$`a`} и ${$`b`} элементов соответственно, то ${$`A^B`} содержит как раз ${$`a^b`} элементов.
В самом деле, определяя функцию ${$`f: B \\to A`}, мы должны определить её значение на каждом из ${$`b`} элементов.
Это можно сделать ${$`a`} способами, так что получаем всего ${$`a^b`} вариантов.


${problem`Чему равно ${$`0^0`} согласно нашему определению? (Ответ: единице.)`}


${b`Пример`}.
Обозначим через ${$`2`} какое-нибудь множество из двух элементов, например, ${$`\\{0, 1\\}`}.
Что такое ${$`2^{\\N}`}?
По определению это множество функций ${$`f: \\N \\to \\{0, 1\\}`}.
Такие функции — это по существу последовательности нулей и единиц, только вместо ${$`f_0 f_1 f_2 \\dots`} мы пишем ${$`f(0), f(1), f(2), \\dots`}
(Формально последовательность элементов некоторого множества ${$`X`} так и определяется — как функция типа ${$`\\N \\to X`}.)


Заметим, что ${$`2^X`} равномощно ${$`P(X)`}
(в частном случае ${$`X = \\N`} мы это доказывали; для общего случая доказательство такое же).


Обычные свойства сложения и умножения (коммутативность, ассоциативность и дистрибутивность) сохраняют силу и для арифметики мощностей:
${$$`
\\begin{aligned}
a + b &= b + a; \\\\
a + (b + c) &= (a + b) + c; \\\\
a \\times b &= b \\times a; \\\\
a \\times (b \\times c) &= (a \\times b) \\times c; \\\\
(a + b) \\times c &= (a \\times c) + (b \\times c).
\\end{aligned}
`}
Формально их следует читать, избегая слова «мощность» как самостоятельного объекта: например, ${$`a \\times b = b \\times a`} означает, что ${$`A \\times B`} и ${$`B \\times A`} равномощны
(и это легко проверить: ${$`\\lang x, y \\rang \\mapsto \\lang y, x \\rang`} будет взаимно однозначным соответствием между ними).
Остальные свойства доказываются столь же просто.
Чуть сложнее свойства, включающие возведение в степень:
${$$`
\\begin{aligned}
a^{b + c} &= a^b \\times a^c; \\\\
(ab)^c &= a^c \\times b^c; \\\\
(a^b)^c &= a^{b \\times c}.
\\end{aligned}
`}
Проверим первое из них.
Из чего состоит ${$`A^{B + C}`}?
(Будем считать, что ${B} и ${C} не пересекаются.)
Его элементами являются функции со значениями в ${A}, определённые на ${$`B + C`}.
Такая функция состоит из двух частей: своего сужения на ${B}
(значения на аргументах из ${B} остаются теми же, остальные отбрасываются) и своего сужения на ${C}.
Тем самым для каждого элемента множества ${$`A^{B + C}`} мы получаем пару элементов из ${$`A^B`} и ${$`A^C`}.
Это и будет искомое взаимно однозначное соответствие.


С соответствием между множествами ${$`(A \\times B)^C`} и ${$`A^C \\times B^C`} мы тоже часто сталкиваемся.
Например, элемент множества ${$`(\\R \\times \\R)^{\\R}`} есть отображение типа ${$`\\R \\to \\R \\times \\R`}, то есть кривая ${$`t \\mapsto z(t) = \\lang x(t), y(t) \\rang`} на плоскости.
Такая кривая задаётся парой функций ${$`x, y: \\R \\to \\R`}.


Соответствие между ${$`(A^B)^C`} и ${$`A^{(B \\times C)}`} встречается несколько реже.
Элемент ${$`f \\in A^{(B \\times C)}`} является отображением ${$`B \\times C \\to A`}, то есть, в обычной терминологии, функцией двух аргументов (первый из ${B}, второй из ${C}).
Если зафиксировать в ней второй аргумент, то получится функция ${$`f_c: B \\to A`}, определённая соотношением ${$`f_c(b) = f(b, c)`} (точнее, ${$`f(\\lang b, c \\rang)`}).
Отображение ${$`c \\mapsto f_c`}, принадлежащее ${$`(A^B)^C`}, и соответствует элементу ${$`f \\in A^{(B \\times C)}`}.
(Отчасти сходная конструкция встречается в алгебре, когда многочлен от двух переменных рассматривают как многочлен от одной переменной с коэффициентами в кольце многочленов от второй переменной.)


Мощность счётного множества символически обозначается ${$`\\alef_0`}, мощность континуума (отрезка или множества бесконечных последовательностей нулей и единиц) обозначается ${$`\\frak{c}`}, так что ${$`\\frak{c} = 2^{\\alef_0}`}


(Естественный вопрос: каков смысл индекса ${$`0`} в ${$`\\alef_0`}?
что такое, скажем, ${$`\\alef_1`}?
Обычно ${$`\\alef_1`} обозначает наименьшую несчётную мощность (как мы увидим, такая существует).
Гипотеза континуума, о которой мы ${label.ref('сontinuum-hypothesis')`упоминали`} ${printNote`на с. 30`}, утверждает, что ${$`\\frak{c} = \\alef_1`}.)


Известные нам свойства счётных множеств можно записать так:
${start(list)}
${item(book`
${$`\\alef_0 + n = \\alef_0`} для конечного ${$`n`} (объединение счётного и конечного множеств счётно);
`)}
${item(book`
${$`\\alef_0 + \\alef_0 = \\alef_0`} (объединение двух счётных множеств счётно);
`)}
${item(book`
${$`\\alef_0 \\times \\alef_0 = \\alef_0`} (объединение счётного числа счётных множеств счётно).
`)}
${end(list)}
Отсюда можно формально получить многие факты манипуляциями с мощностями.
Например, цепочка равенств
${$$`
\\frak{c} \\times \\frak{c} = 2^{\\alef_0} \\times 2^{\\alef_0} = 2^{\\alef_0 + \\alef_0} = 2^{\\alef_0} = \\frak{c}
`}
показывает, что прямая и плоскость равномощны.


Аналогичным образом,
${$$`
\\frak{c}^{\\alef_0} = (2^{\\alef_0})^{\\alef_0} = 2^{\\alef_0 \\times \\alef_0} = 2^{\\alef_0} = \\frak{c}.
`}


${problem`
Объясните подробно выкладку:
${$$`
\\frak{c} + \\frak{c} = 1 \\times \\frak{c} + 1 \\times \\frak{c} = 2 \\times \\frak{c} = 2^1 \\times 2^{\\alef_0} = 2^{1 + \\alef_0} = 2{\\alef_0} = \\frak{c}.
`}
`}


${problem`Проверьте, что ${$`\\alef_0 \\times \\frak{c} = \\frak{c}`}.`}


Приведённые нами свойства мощностей полезно сочетать с ${label.ref('theorem_<>=')`теоремой Кантора–Бернштейна`}.
Например, заметим, что
${$$`
\\frak{c} = 2^{\\alef_0} \\leqslant \\alef_0^{\\alef_0} \\leqslant \\frak{c}^{\\alef_0} = \\frak{c},
`}
поэтому ${$`\\alef_0^{\\alef_0} = \\frak{c}`}
(словами: множество всех бесконечных последовательностей натуральных чисел имеет мощность континуума).


${problem`
Последнее рассуждение неявно использует монотонность операции возведения в степень для мощностей
(если ${$`a_1 \\leqslant a_2`}, то ${$`a_1^b \\leqslant a_2^b`}).
Проверьте это и аналогичные свойства для других операций (впрочем, почти очевидные).
`}


${problem`
Установите явное соответствие между последовательностями натуральных чисел и иррациональными числами на отрезке ${$`(0, 1)`}, используя цепные дроби, то есть дроби вида ${$`1 / (n_0 + 1 / (n_1 + 1 / (n_2 + \\dots)))`}.
`}


${problem`
Проверьте, что ${$`\\frak{c}^{\\frak{c}} = \\alef_0^{\\frak{c}} = 2^{\\frak{c}}`}.
(Напомним, что по теореме Кантора эта мощность больше мощности континуума.)
`}


${problem`
Какова мощность множества всех непрерывных функций с действительными аргументами и значениями?
Существенна ли здесь непрерывность?
`}


${problem`Какова мощность множества всех монотонных функций с действительными аргументами и значениями?`}


${problem`
Может ли семейство подмножеств натурального ряда быть несчётным, если любые два его элемента имеют конечное пересечение? конечную симметрическую разность?
`}


Впоследствии мы увидим, что для бесконечных мощностей действуют простые правила ${$`a \\times b = a + b = max(a, b)`}, но пока этого мы доказать не можем.
Поэтому в задачах ${label.ref('problem_square-part')`${n.problem('square-part')}`}, ${label.ref('problem_line-part')`${n.problem('line-part')}`} нам пришлось воспользоваться обходным манёвром, чтобы доказать, что из ${$`a + b = \\frak{c}`} следует ${$`a = \\frak{c}`} или ${$`b = \\frak{c}`}.
Следующее утверждение обобщает этот приём:


${theorem.key('cartesian-subset')`
Если множество ${$`A_1 \\times A_2 \\times \\dots \\times A_n`} разбито на непересекающиеся части ${$`B_1, \\dots , B_n`}, то найдётся такое ${$`i`}, при котором мощность ${$`B_i`} не меньше мощности ${$`A_i`}.
`}


${proof.start}
В самом деле, рассмотрим проекцию множества ${$`B_i \\subset A_1 \\times \\dots \\times A_n`} на ${$`A_i`}.
Если хотя бы при одном ${$`i`} она покрывает ${$`A_i`} полностью, то всё доказано.
Если нет, выберем для каждого ${$`i`} непокрытую точку ${$`x_i`}.
Набор ${$`\\lang x_1, \\dots , x_n \\rang`} не входит ни в одно из множеств ${$`B_i`}, что противоречит предположению.
${proof.end}


Заметим, что в формулировке этого утверждения (которое иногда называют теоремой ${label.ref('name_konig')`Кёнига`}) говорится о декартовом произведении конечного числа множеств, которое можно определить индуктивно (скажем, ${$`A \\times B \\times C`} будет состоять из троек ${$`\\lang a, b, c \\rang`}, которые суть пары ${$`\\lang \\lang a, b \\rang , c \\rang `}).
Декартово произведение счётного числа множеств уже так не определишь.
Выход такой: ${$`A_0 \\times A_1 \\times A_2 \\times \\dots`} (счётное число сомножителей) можно определить как множество всех последовательностей ${$`a_0, a_1, a_2, \\dots`}, у которых ${$`a_i \\in A_i`}, то есть как множество всех функций ${$`a`}, определённых на ${$`\\N`} со значениями в объединении всех ${$`A_i`}, причём ${$`a(i) \\in A_i`} при всех ${$`i`}.
После такого определения ${label.ref('theorem_cartesian-subset')`теорема ${n.theorem('cartesian-subset')}`} легко переносится и на счётные (а также и на любые) произведения.


Переходя к отрицаниям, теорему Кёнига можно сформулировать так: если при всех ${$`i = 0, 1, 2, \\dots`} для мощностей ${$`a_i`} и ${$`b_i`} выполнено неравенство ${$`b_i < a_i`}, то
${$$`
b_0 + b_1 + b_2 + \\ldots < a_0 \\times a_1 \\times a_2 \\times \\ldots
`}
Учитывая, что ${$`\\frak{c} \\times \\frak{c} \\times \\dots`} (счётное произведение) равно ${$`\\frak{c}^{\\alef_0}`}, то есть ${$`\\frak{c}`}, можно сформулировать такое следствие теоремы Кёнига: если континуум разбит на счётное число подмножеств, то одно из них имеет мощность континуума.


${problem`Докажите подробно это утверждение.`}


${problem`
Пусть ${$`a_0, a_1, a_2, \\dots`} — мощности, причём ${$`a_i > 2`} для всех ${$`i`}.
Покажите, что
${$$`
a_0 + a_1 + a_2 + \\ldots \\leqslant a_0 \\times a_1 \\times a_2 \\times \\ldots
`}
`}


${problem`
Пусть ${$`m_0 < m_1 < m_2 < \\dots`} — возрастающая последовательность мощностей.
Докажите, что сумма ${$`m_0 + m_1 + m_2 + \\dots`} не представима в виде ${$`a^{\\alef_0}`} ни для какой мощности ${$`a`}.
`}
`;
};
