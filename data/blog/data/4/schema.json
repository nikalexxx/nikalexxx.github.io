[
  "\nСовременный CSS позволяет верстать сложные макеты с минимальными усилиями.\nЯ использовал возможности CSS Grid, чтобы сделать интерактивную таблицу, которая представляет Стандартную модель.\n",
  {
    "name": "link",
    "props": {
      "href": "/?/physics/standard-model"
    },
    "children": [
      "Реализация"
    ]
  },
  " лежит в разделе ",
  {
    "name": "link",
    "props": {
      "href": "/?/physics"
    },
    "children": [
      "Физика"
    ]
  },
  ".\n\n\n",
  {
    "name": "header",
    "props": {
      "level": 3
    },
    "children": [
      "Какие возможности использовались?"
    ]
  },
  "\nВ первую очередь сама сетка, основной функционал Grid.\nЗадаю форму для строк и столбцов:\n",
  {
    "name": "code",
    "props": {
      "lang": "css"
    },
    "children": [
      "\ngrid-template-rows: auto auto repeat(4, 1fr) auto auto;\ngrid-template-columns: auto repeat(9, 1fr);\n"
    ]
  },
  "\nСами карточки частиц размещаются в ячейках с fr, а ячейки auto с краёв нужны для разных подписей.\n\n\nВыглядит хорошо, но частицы не заполняют таблицу полностью, и надо учесть эти пустоты.\nТак как по умолчанию сетка заполняется построчно(",
  {
    "name": "format.pre",
    "props": {},
    "children": [
      "grid-auto-flow: row;"
    ]
  },
  "), то нам достаточно пропустить некоторое количество ячеек.\nМы сделаем это, указав для ячейки, следующей за разрывом(например для карточки нижнего антикварка), что она должна начинаться с новой строки.\n",
  {
    "name": "code",
    "props": {
      "lang": "css"
    },
    "children": [
      "\ngrid-column-start: 2;\n"
    ]
  },
  "\nПочему 2? Во-первых, линии сетки нумеруются с единицы, во-вторых, первая линия сетки уже занята ячейкой с описанием(лептоны/кварки), поэтому наша линия сетки — вторая.\n\n\nРазместим поясняющие надписи, для этого используем чуть расширенный функционал.\nВот как выглядит настройка для ячейки с категорией фермионы:\n",
  {
    "name": "code",
    "props": {
      "lang": "css"
    },
    "children": [
      "\ngrid-column: 1 / 8;\ntext-align: right;\n"
    ]
  },
  "\n",
  {
    "name": "format.pre",
    "props": {},
    "children": [
      "grid-column"
    ]
  },
  " просто сокращенная запись для\n",
  {
    "name": "code",
    "props": {
      "lang": "css"
    },
    "children": [
      "\ngrid-column-start: 1;\ngrid-column-end: 8;\n"
    ]
  },
  "\nЯчейка заняла своё место с первой линии по восьмую(семь столбцов).\n\nСледует учитывать, что ячейки с надписями должны заполнять всё отведенное пространство в строке или столбце, чтобы основная часть карточек не сбилась, так как каждый div по умолчанию занимает ближайшую свободную ячейку, если не прописать иное.\n\n\nЧтобы провести разделительные линии, используем позиционирование по линиям сетки в комбинации с абсолютным позиционированием элемента.\nНапример, чтобы провести разделитель по пятой линии по вертикали, создадим абсолютно позиционированный столбец между четвёртой и пятой линией, а затем установим border справа.\n",
  {
    "name": "code",
    "props": {
      "lang": "css"
    },
    "children": [
      "\nposition: absolute;\ntop: 0;\nleft: 0;\nright: 0;\nbottom: 0;\ngrid-row: 2 / 7;\ngrid-column: 4 / 5;\nborder-right: 2px dashed black;\n"
    ]
  },
  "\nВыставляем нули, чтобы растянуть элемент по линиям сетки, и контролируем высоту(5 строк, начиная со второй линии).\nВместо конечной линии сетки можно указывать, сколько столбцов или строк должен занимать элемент.\nЗначения с примера выше эквивалентны\n",
  {
    "name": "code",
    "props": {
      "lang": "css"
    },
    "children": [
      "\ngrid-row: 2 / span 5;\ngrid-column: 4 / span 1;\n"
    ]
  },
  "\n\n\nЧтобы сделать цветные области, которые выделяют целые группы частиц, применяется тот же принцип, только вместо границы указываем цветной фон.\nТак как область не прямоугольная, разбиваем на прямоугольники(пример для электромагнитного взаимодействия):\n",
  {
    "name": "code",
    "props": {
      "lang": "less"
    },
    "children": [
      "\n&_1 {\n    grid-row: 4 / 7;\n    grid-column: 2 / 8;\n}\n&_2 {\n    grid-row: 3 / 4;\n    grid-column: 8 / 9;\n}\n&_3 {\n    grid-row: 4 / 5;\n    grid-column: 8 / 9;\n}\n"
    ]
  },
  "\nТак как элементы с абсолютным позиционированием перекрывают остальные, а нам этого не надо, дополнительно выставим ",
  {
    "name": "format.pre",
    "props": {},
    "children": [
      "z-index: 2;"
    ]
  },
  " для всех карточек, чтобы они отображались сверху, а цветная область выглядела как подложка.\n"
]