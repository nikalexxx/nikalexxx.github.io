type VideoData = {
    title: string;
    description: string;
    youtubeId: string;
    textLink?: string;
    presentationLink?: string;
    youtubeLink?: string;
};

export const videoList: VideoData[] = [
    {
        title: 'Что я узнал, пока писал убийцу React',
        description:
            'Вас ждёт сравнение современных веб UI-фреймворков, разбор virtual dom, рецепт изготовления своего jsx, типизация html и построение простейших компонентов. И конечно всё это на примере https://github.com/nikalexxx/parvis',
        youtubeLink:
            'https://www.youtube.com/live/RFw8P3LsLcE?feature=shared&t=6246',
        youtubeId: 'RFw8P3LsLcE',
        presentationLink: 'https://disk.yandex.ru/i/lFFQrJ__FGcbAg',
    },
    {
        title: 'Типизация (typescript) 2023',
        description: `На лекции мы поговорим о том, для чего нужна типизация в современном вебе, об ее истоках и развитии. Остановимся на TypeScript — системе типов, которая победила всех. Рассмотрим простые типы и практические рекомендации`,
        youtubeId: 'NyYsT0z67UE',
    },
    {
        title: 'Продвинутый typescript 2023',
        description: `Рассмотрим typescript с точки зрения теории множеств, разберем контроль выполнения и дженерики.`,
        youtubeId: 'xPvzgzCZFkc',
    },
    {
        title: 'Monaco-editor. От формальных грамматик до синхронизации с формами',
        description: `Monaco-editor — редактор, который используется в VSCode в качестве ядра. Его можно использовать и в вебе, но что если вам нужно что-то большее, чем встроенный typescript и html? Мы в Yandex RTC используем monaco для настройки под собственные языки и языковые расширения, при этом сохраняя интеграцию с механизмом форм и дизайн-системой облака. Если вы пишете инструменты для разработчиков и аналитиков, образовательные платформы или просто хотите себе в блог классный мощный редактор кода, то из доклада вы узнаете:

        — Как декларативно задавать грамматики в редакторе
        — Как использовать парсеры для создания собственных языков
        — Как подружить всё это с вашей дизайн-системой

        Помимо этого я расскажу, с какими сложностями мы столкнулись при внедрении редактора для обработки больших бизнес сущностей.`,
        youtubeId: 'ZJyp_tGsZ7I',
    },
    {
        title: 'Школа разработки интерфейсов Яндекса. Лекция о типизации 2022',
        description: `На лекции мы поговорим о том, для чего нужна типизация в современном вебе, об ее истоках и развитии. Остановимся на TypeScript — системе типов, которая победила всех. Разберём кирпичики, из которых состоит Typеscript — типы структур, контроль над типами и даже немного дженериков.
        И, конечно, сразу применим новые знания и проведем миграцию проекта с JavaScript в прямом эфире!`,
        youtubeId: '_KweR3LUGRA',
    },
    {
        title: 'Школа разработки интерфейсов Яндекса. Лекция о типизации 2021',
        description: `На лекции мы поговорим о том, для чего нужна
        типизация в современном вебе, об ее истоках и
        развитии. Разберем подробно TypeScript — систему
        типов, которая победила остальные. Остановимся на
        общих концепциях типизации и особенностях устройства
        самого TypeScript, типизации структур, контроле над
        типами и даже дженериках (чуть-чуть). И, конечно, вы
        увидите, как применять типизацию в бою — на
        практической секции проведем миграцию проекта с
        JavaScript!`,
        youtubeId: 'i-1PqnzaxrI',
    },
    {
        title: 'Продвинутые дженерики в TypeScript',
        description: `Дженерики, или параметризованные типы, позволяют
        писать более гибкие функции и интерфейсы. Чтобы
        зайти дальше, чем параметризация одним типом,
        необходимо понять лишь несколько общих принципов
        составления дженериков — и TypeScript раскроется
        перед вами, как шкатулка с секретом. Расскажу, как
        не бояться вкладывать дженерики друг в друга и как
        использовать автоматический вывод типов в ваших
        проектах.`,
        youtubeId: 'YDTZpQrBXjc',
        textLink: 'https://habr.com/ru/company/yandex/blog/555520/',
    },
    {
        title: `Магия современных возможностей JavaScript для работающего программиста`,
        description: `Расскажу о таких современных возможностях
        JavaScript, как лямбда-функции, символы и
        прокси-объекты. Их использование позволяет писать
        лаконичный код и избегать лишних абстракций,
        особенно для сложных структур типа деревьев и
        графов. Как типовой рабочий пример — обогащение
        ответа API дополнительными знаниями о своей
        структуре. Затрону также метапрограммирование и
        связь между формальными языками и прокси-объектами.`,
        youtubeId: 'CBHoYfLMVKs',
        textLink: 'https://habr.com/ru/company/yandex/blog/555520/',
    },
    {
        title: 'Алгоритмы на JS в реальной жизни',
        description: 'Рассказываю о алгоритмах, деревьях и фронтенде',
        youtubeLink:
            'https://www.youtube.com/live/Fq8McBvfkWg?feature=shared&t=2700',
        youtubeId: 'Fq8McBvfkWg',
    },
    {
        title: 'CSS для отладки',
        description: 'Про необычное применение CSS',
        youtubeId: '25F5h9K3Vp8',
    },
    {
        title: 'Про фронтенд в RTC',
        description:
            'Описание работы для стажёра в команде фронтенда инфраструктуры Яндекса',
        youtubeLink:
            'https://www.youtube.com/live/WMwAGQqpsQU?feature=shared&t=24415',
        youtubeId: 'WMwAGQqpsQU',
    },
];
